{"version":3,"sources":["Main/AllEventsBlock.js","Handler/ErrorHandler.js","Formatter/MoneyFormatter.js","Const/Constants.js","AppNavbar.js","Handler/ErrorNotifier.js","Main/Home.js","Waiter.js","UserList.js","UserEdit.js","RegistrationForm.js","Admin/Event/EventList.js","Admin/Event/EventEdit.js","Category/CreateCategoryForm.js","Category/CategoryList.js","Me/MePage.js","Me/MeJoinedEvents.js","Me/MeEventsToJoin.js","Me/MePhotos.js","Me/MeChangePresonalData.js","Messanger/MessengerCore.js","AuthForm.js","CreateEventForm.js","Me/JoinEvents.js","Me/PersonalPage.js","Admin/AdminPage.js","Arranger/ArrangerPage.js","Arranger/PropsForArrangement/ArrangementProps.js","Arranger/EventArrangement.js","Arranger/ArrangedEvents.js","EventPage.js","Arranger/ArrangedEventEdit.js","Arranger/ArrangedEventPage.js","Me/Guest/GuestMePage.js","Me/Guest/GuestMeJoinedEvents.js","Me/Guest/GuestMePhotos.js","Me/Guest/GuestMeArrangedEvents.js","Admin/Prop/CreateProp.js","Admin/Prop/PropsPage.js","Admin/Prop/PropEdit.js","Arranger/PropsForArrangement/MyProps.js","Admin/Prop/PropOrdersHandler.js","Me/MySettings.js","Me/MyPhotos.js","Me/MyJoinedEvents.js","Formatter/InstantFormatter.js","ParticipantMessageGenerator.js","Me/Guest/GuestPersonalPage.js","Me/MyPage.js","Me/MyMessenger.js","BankCard/DepositPage.js","BankCard/WithdrawPage.js","BankCard/BankClient/BankClient.js","BankCard/DepositWithdrawPage.js","App.js","index.js"],"names":["thisObj","showCounter","successShowCounter","ErrorHandler","data","hideValue","$","show","status","html","responseJSON","code","setTimeout","hide","message","MoneyFormatter","cents","dollars","Intl","NumberFormat","style","currency","format","rubles","roleAdmin","roleUser","roleArranger","Constants","role","startsWith","localStorage","setItem","Stomp","require","SockJS","AppNavbar","props","fm","getItem","state","isOpen","accountId","fastMode","JSON","parse","toggle","bind","logout","toggleFastMode","this","setState","removeItem","nav","fromatDollars","Nav","className","maxHeight","navbarScroll","Link","href","isArrangerOrHigher","isAdmin","onClick","NavDropdown","title","id","Item","Divider","Navbar","bg","variant","expand","Container","fluid","marginTop","Brand","Toggle","Collapse","class","Button","axios","method","url","headers","then","res","catch","err","runStringMessage","socket","stompWebsocket","over","websocket","connect","frame","subscribe","balance","body","Component","ErrorNotifier","color","display","AllEventsBlock","login","events","filterField","filterValue","filterOperation","sortOrder","sortField","eventState","categoriesNames","searchBarEnabled","selectedValues","options","multiselectRefTracker","React","createRef","seacrch","handleChange","setFilterValue","setFilterOperation","setSortField","setSortOrder","setEventState","clearFilter","handleCategoriesChange","toggleSearchBar","onSelect","onRemove","a","ajax","success","error","runError","categories","isLoading","eventList","map","event","startInstant","Date","toLocaleString","hour12","endInstant","category","Badge","minWidth","photoSrc","photos","length","preview","Alert","Col","Card","Img","src","Body","Title","name","Text","description","to","Footer","toggler","justifyContent","Row","searchBar","xs","md","queryEventDto","el","trim","filter","stringify","target","getAttribute","value","current","resetSelectedValues","selectedList","selectedItem","push","removedItem","item","Form","displayValue","ref","FormGroup","ToggleButton","Input","onChange","placeholder","maxWidth","withRouter","Home","Waiter","CircularProgress","history","UserList","users","filteredUsers","filterLogin","filterEmail","filterRole","filterEnabled","filterIsArrangerRoleRequested","remove","handleChangeValue","handleChangeValueBoolThrice","updatedUsers","i","runSuccess","contentType","window","location","reload","userList","user","enabled","arrangerRoleRequested","ButtonGroup","size","acceptArrangerRequest","declineArrangerRequest","email","tag","Table","width","includes","InputGroup","UserEdit","handleSubmit","match","params","preventDefault","onSubmit","Label","for","type","autoComplete","firstName","lastName","standalone","checked","jwt","AuthForm","password","recoverMode","recoverPassword","statusCode","textStatus","xhr","accessToken","tokenType","expiresIn","decodedToken","decode","console","log","sub","NameForm","CreateEventForm","place","e","split","dateFormat","timeFormat","val","EventList","selectedFilterCategories","selectedOptionCategories","filterCategories","ownerLogin","userLogin","updatedEvents","categoriesSelector","whiteSpace","EventEdit","selectedValue","handleChangeStartInstant","handleChangeEndInstant","ev","_d","CreateCategoryForm","toggleCreateMode","addCategory","CategoryList","selectedCategories","editModeId","editModeName","editModeDescription","createMode","editMode","editModeChangeValue","saveCategory","cancelEditing","updatedCategories","updatedSelectedCategories","dto","categoryList","MePage","joinEvents","updateRole","isAnyRole","avatar","MeJoinedEvents","eventId","leave","MeEventsToJoin","join","price","MePhotos","upload","setAvatar","removePhoto","photoInDto","fileInput","document","querySelector","formData","FormData","files","photo","append","fetch","Boolean","photosList","border","photoId","multiple","MeChangePersonalData","oldPassword","newPassword","newPasswordRepeat","becomeArranger","handlePasswordChange","handlePasswordSubmit","arrangerBecoming","MessengerCore","allMessages","receivers","filteredReceivers","currentMessagesControls","currentReceiver","loginToIdMap","Map","messageText","filterName","pickDialog","sendMessage","changeFilterName","filterReceivers","receiversControls","receiver","avatarId","alignItems","flexDirection","onKeyPress","key","config","get","set","messages","creationTime","getTime","text","send","newMessage","sender","anotherUserLogin","sort","b","scroller","getElementsByClassName","scrollTop","scrollHeight","JoinEvents","AdminPage","goToEvents","goToCategories","goToUsers","goToProps","goToPropOrders","ArrangerPage","goToArrangedEvents","goToEventArrangement","goToPropsMarket","goToOrderedProps","prototype","addDays","days","dat","valueOf","setDate","getDate","ArrangementProps","cart","daysMap","costTypeMap","piecesMap","activeTab","addToCart","removeFromCart","addToDays","removeFromDays","purchase","handlePiecesChange","getAllProps","clearCart","tab","propId","updatedCart","foundIndex","find","prop","splice","removeButton","addButton","isAddedToCart","toString","cost","costType","propType","totalCost","cartProps","daysArray","startDate","stopDate","dateArray","Array","currentDate","getDates","orderedDays","propOrders","order","orderedDate","toLocaleDateString","day","orderedButton","margin","removeFromDaysButton","addToDaysButton","orderedDaysAmount","piecesAmount","tabs","NavItem","NavLink","classnames","active","TabContent","TabPane","tabId","disabled","attributes","propDays","findIndex","comment","pieces","runErrorStringMessage","forceUpdate","amount","EventArrangement","arrangedEvent","admittedCategories","ArrangedEvents","InstantFormatter","instant","ParticipantMessageGenerator","number","pluralModifier","verb","participantsAmount","createMessageParts","thereAreNoParticipants","thereIsOneParticipant","thereAreManyParticipants","EventPage","comments","commentText","participantMessageGenerator","leaveComment","changeCommentText","Headers","response","json","commentsResponse","commentsBody","updatedComments","formatInstant","renderInfoSection","renderCommentSection","renderPhotosSection","arranger","participantMessage","make","ArrangedEventPage","startEvent","stopEvent","finishEvent","closeEvent","setPreview","eventInDto","ArrangedEventEdit","eventAction","GuestMePage","setUser","userUrl","GuestMeJoinedEvents","userJoinedEventsUrl","GuestMePhotos","GuestMeArrangedEvents","GuestPersonalPage","CreateProp","addProp","max","PropsPage","selectedProps","propEdit","editModeCost","editModeCostType","editModePropType","filterProps","saveProp","updatedProps","selectedUpdatedProps","propsList","types","typesEdit","PropEdit","MyProps","filteredPropOrders","infoMode","mode","sortCost","cancelBook","toggleMode","changeMode","filterPropOrders","changeSortCost","filtered","updatedPropOrders","modeView","propOrder","date","propOrderId","answer","MyPage","goToJoinedEvents","goToMessenger","goToPhotos","goToSettings","PropOrdersHandler","selectedPropOrders","answerMode","select","bulkAccept","bulkDelete","bulkDeliver","updateOrders","toggleAnswerMode","bulkRollback","delete","forEach","clear","propOrdersList","defaultValue","formatInstantMs","MySettings","MyPhotos","MyMessenger","MyJoinedEvents","DepositPage","CCnumber_deposit","CCcvc_deposit","CCname_deposit","CCexpiry_deposit","valid","bankClient","validateBankCardAndCents","container","formInputsNames","expiry","cvc","initialValues","classes","invalid","maxLength","deposit","WithdrawPage","CCnumber_withdraw","CCcvc_withdraw","CCname_withdraw","CCexpiry_withdraw","withdraw","BankClient","delta","post","DepositWithdrawPage","App","path","exact","component","RegistrationForm","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.6e5e561f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nlet thisObj;\r\n\r\nclass AllEventsBlock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: localStorage.getItem(\"login\"),\r\n            id: localStorage.getItem(\"id\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n            searchBarEnabled: false,\r\n            selectedValues: [],\r\n            options: [],\r\n            multiselectRefTracker: React.createRef()\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/events\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ options: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    toggleSearchBar() {\r\n        this.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n    }\r\n\r\n    render() {\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n            <Card>\r\n                {eventState}\r\n                <Card.Img variant=\"top\" src={photoSrc} />\r\n                <Card.Body>\r\n                    <Card.Title>{event.name}</Card.Title>\r\n                    <Card.Text>{event.description}</Card.Text>\r\n                    <div className='mb-3'>\r\n                        {categories}\r\n                    </div>\r\n                    <Link to={\"/events/\" + event.id}>View more</Link>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    <div>\r\n                        Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                    <div>\r\n                        Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n        });\r\n\r\n        let toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            <div class=\"input-group-prepend\">\r\n                <button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n            </div>\r\n        </div>\r\n\r\n        return (<div>\r\n            <Row>\r\n                {toggler}\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n                {this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n            </Row>\r\n            <Row xs={1} md={4} className=\"g-3 mt-3\">\r\n                {eventList}\r\n            </Row>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/homepage/events\",\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        // const target = event.target;\r\n        // let value = target.value\r\n\r\n        // if (value !== null && value !== \"\") {\r\n        //     this.setState({\r\n        //         categoriesNames: value.split(','),\r\n        //     });\r\n        // } else {\r\n        //     this.setState({ categoriesNames: [] })\r\n        // }\r\n\r\n        // setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n        this.setState({ selectedValues: [] });\r\n\t\tawait this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        categoriesNames.push(selectedItem.name);\r\n        this.setState({ categoriesNames: categoriesNames })\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        \r\n        categoriesNames = categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ categoriesNames: categoriesNames })\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n\r\n            <Button className=\"mb-3\"\r\n                onClick={this.clearFilter}\r\n                color=\"outline-secondary\">\r\n                Clear Filter\r\n            </Button>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n                <Multiselect\r\n                    options={this.state.options} // Options to display in the dropdown\r\n                    selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\r\n                    onSelect={this.onSelect} // Function will trigger on select event\r\n                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                    ref={this.state.multiselectRefTracker}\r\n                />\r\n                \r\n                {/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n            </div>\r\n\r\n            <FormGroup className=\"mb-3\">\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        eventState=\"WAITING_FOR_START\"\r\n                        variant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Waiting\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"STARTED\"\r\n                        variant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Started\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"FINISHED\"\r\n                        variant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Finished\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"CLOSED\"\r\n                        variant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Closed\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-3\" >\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortField=\"name\"\r\n                        variant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"description\"\r\n                        variant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Description\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"startInstant\"\r\n                        variant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Start Instant\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"endInstant\"\r\n                        variant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        End Instant\r\n                    </ToggleButton>\r\n                </div>\r\n\r\n                <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortOrder=\"ASC\"\r\n                        variant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Ascend\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortOrder=\"DESC\"\r\n                        variant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Descend\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n                    <div style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterField=\"name\"\r\n                            variant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterField=\"description\"\r\n                            variant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Description\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterOperation=\"LIKE\"\r\n                            variant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Like\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterOperation=\"EQUAL\"\r\n                            variant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Equal\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n                        placeholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n                </div>\r\n            </FormGroup>\r\n        </Form >\r\n    }\r\n}\r\n\r\nexport default withRouter(AllEventsBlock);","import $ from \"jquery\"\r\n\r\nvar showCounter = 0;\r\nvar successShowCounter = 0;\r\n\r\nclass ErrorHandler{\r\n\r\n    static runError(data){\r\n        const hideValue = ++showCounter\r\n        $(\"#alert-danger\").show();\r\n        if(data.status === 403){\r\n            $(\"#alert-danger\").html(\"Not authorized or blocked\")\r\n        } else {\r\n            if(data.responseJSON){\r\n                if(data.responseJSON.code){\r\n                    $(\"#alert-danger\").html(data.responseJSON.code)\r\n                } else {\r\n                    $(\"#alert-danger\").html(\"Check the data firtsly\")\r\n                }     \r\n            }\r\n            else {\r\n                $(\"#alert-danger\").html(\"No connection\")\r\n            }\r\n        }\r\n\r\n        setTimeout(function() { \r\n            if(showCounter == hideValue){\r\n                $(\"#alert-danger\").hide();\r\n            }\r\n        }, 3000);\r\n    }\r\n    \r\n    static runSuccess(data){\r\n        const hideValue = ++successShowCounter\r\n        $(\"#alert-success\").show();\r\n        $(\"#alert-success\").html(data.message)        \r\n\r\n        setTimeout(function() { \r\n            if(successShowCounter == hideValue){\r\n                $(\"#alert-success\").hide();\r\n            }\r\n        }, 3000);\r\n    }\r\n        \r\n    static runStringMessage(message){\r\n        const hideValue = ++successShowCounter\r\n        $(\"#alert-success\").show();\r\n        $(\"#alert-success\").html(message)        \r\n\r\n        setTimeout(function() { \r\n            if(successShowCounter == hideValue){\r\n                $(\"#alert-success\").hide();\r\n            }\r\n        }, 3000);\r\n    }\r\n    \r\n    static runErrorStringMessage(message){\r\n        const hideValue = ++successShowCounter\r\n        $(\"#alert-danger\").show();\r\n        $(\"#alert-danger\").html(message)        \r\n\r\n        setTimeout(function() { \r\n            if(successShowCounter == hideValue){\r\n                $(\"#alert-danger\").hide();\r\n            }\r\n        }, 3000);\r\n    }\r\n}\r\n\r\nexport default ErrorHandler;","class MoneyFormatter {\r\n    static fromatDollars(cents){\r\n        let dollars = cents/100\r\n        var formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n        })\r\n        return formatter.format(dollars)\r\n    }\r\n\r\n    static fromatByn(cents){\r\n        let rubles = cents/100\r\n        var formatter = new Intl.NumberFormat('by-BY', {\r\n            style: 'currency',\r\n            currency: 'BYN',\r\n        })\r\n        return formatter.format(rubles)\r\n    }\r\n}\r\n\r\nexport default MoneyFormatter","import $ from \"jquery\"\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\nconst roleUser = \"ROLE_USER\"\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\n\r\nclass Constants{\r\n\r\n    static getAdminRole(){\r\n        return roleAdmin\r\n    }\r\n\r\n    static getUserRole(){\r\n        return roleUser\r\n    }\r\n    \r\n    static getArrangerRole(){\r\n        return roleArranger\r\n    }\r\n\r\n    static isAnyRole(role){\r\n        return role === roleAdmin || role === roleUser || role === roleArranger\r\n    }\r\n    \r\n    static isArrangerOrHigher(role){\r\n        return role === roleAdmin || role === roleArranger\r\n    }\r\n    \r\n    static isAdmin(role){\r\n        return role === roleAdmin\r\n    }\r\n\r\n    static updateRole(role){\r\n        if(role.startsWith(\"ROLE_\")){\r\n            localStorage.setItem(\"role\", role);\r\n        } else {\r\n            localStorage.setItem(\"role\", \"ROLE_\" + role);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Constants;","import React, { Component } from 'react';\r\nimport { Button, Navbar, Container, Nav, Form, NavDropdown, FormControl } from 'react-bootstrap'\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport $ from \"jquery\"\r\nimport ErrorHandler from './Handler/ErrorHandler';\r\nimport axios from 'axios';\r\nimport MoneyFormatter from './Formatter/MoneyFormatter';\r\nimport Constants from './Const/Constants'\r\n\r\nvar Stomp = require('stompjs');\r\nvar SockJS = require(\"sockjs-client\");\r\n\r\nconst roleUser = \"ROLE_USER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\n\r\nclass AppNavbar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let fm = localStorage.getItem(\"fastMode\")\r\n        this.state = {\r\n            isOpen: false,\r\n            accountId: null,\r\n            cents: null,\r\n            fastMode: JSON.parse(fm) === true\r\n        };\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n        this.logout = this.logout.bind(this);\r\n        this.toggleFastMode = this.toggleFastMode.bind(this);\r\n    }\r\n\r\n    toggleFastMode() {\r\n\r\n        localStorage.setItem(\"fastMode\", !this.state.fastMode)\r\n        this.setState({ fastMode: !this.state.fastMode })\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"accessToken\")\r\n        localStorage.removeItem(\"tokenType\")\r\n        localStorage.removeItem(\"expiresIn\")\r\n\r\n        localStorage.removeItem(\"login\")\r\n        localStorage.removeItem(\"id\")\r\n        localStorage.removeItem(\"role\")\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let navItems;\r\n\r\n        <h4>\r\n            <span class=\"badge bg-success\">{MoneyFormatter.fromatDollars(this.state.cents)}</span>\r\n        </h4>\r\n\r\n        let nav;\r\n        if (this.state.fastMode) {\r\n            nav = <Nav\r\n                className=\"me-auto my-2 my-lg-0\"\r\n                style={{ maxHeight: '100px' }}\r\n                navbarScroll\r\n            >\r\n                {localStorage.getItem(\"role\") == null ? <Nav.Link href=\"/auth\">Auth</Nav.Link> : \"\"}\r\n                {localStorage.getItem(\"role\") == null ? <Nav.Link href=\"/registration\">Registration</Nav.Link> : \"\"}\r\n                {localStorage.getItem(\"role\") != null ? <Nav.Link href=\"/me\">Me</Nav.Link> : \"\"}\r\n                {Constants.isArrangerOrHigher(localStorage.getItem(\"role\")) ? <Nav.Link href=\"/arranger\">Arranger</Nav.Link> : \"\"}\r\n                {Constants.isAdmin(localStorage.getItem(\"role\")) ? <Nav.Link href=\"/admin\">Admin</Nav.Link> : \"\"}\r\n                {localStorage.getItem(\"role\") != null ? <Nav.Link href=\"/auth\" onClick={this.logout}>Logout</Nav.Link> : \"\"}\r\n            </Nav>\r\n        } else {\r\n            nav = <Nav\r\n                className=\"me-auto my-2 my-lg-0\"\r\n                style={{ maxHeight: '100px' }}\r\n                navbarScroll\r\n            >\r\n\r\n                {localStorage.getItem(\"role\") == null ? <Nav.Link href=\"/auth\">Auth</Nav.Link> : \"\"}\r\n                {localStorage.getItem(\"role\") == null ? <Nav.Link href=\"/registration\">Registration</Nav.Link> : \"\"}\r\n                {localStorage.getItem(\"role\") != null ?\r\n                    <NavDropdown title=\"Me\" id=\"navbarScrollingDropdown\">\r\n                        <NavDropdown.Item href=\"/me\">Console</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/me/events\">Events</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/me/joined\">Joined Events</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/me/messenger\">Messenger</NavDropdown.Item>\r\n                        <NavDropdown.Item href=\"/me/photos\">Photos</NavDropdown.Item>\r\n                        <NavDropdown.Divider />\r\n                        <NavDropdown.Item href=\"/me/settings\">Settings</NavDropdown.Item>\r\n                    </NavDropdown> : \"\"}\r\n                {Constants.isArrangerOrHigher(localStorage.getItem(\"role\")) ? <NavDropdown title=\"Arranger\" id=\"navbarScrollingDropdown\">\r\n                    <NavDropdown.Item href=\"/arranger\">Console</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"/arranger/arranged\">Arranged Events</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/arranger/arrangement\">Event Arrangement</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"/arranger/props/market\">Props Market</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/arranger/props/ordered\">Ordered Props</NavDropdown.Item>\r\n                </NavDropdown> : \"\"}\r\n                {Constants.isAdmin(localStorage.getItem(\"role\")) ? <NavDropdown title=\"Admin\" id=\"navbarScrollingDropdown\">\r\n                    <NavDropdown.Item href=\"/admin\">Console</NavDropdown.Item>\r\n                    <NavDropdown.Divider />\r\n                    <NavDropdown.Item href=\"/event-management/events\">Events</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/category-management/categories\">Categories</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/user-management/users\">Users</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/prop-management/props\">Props</NavDropdown.Item>\r\n                    <NavDropdown.Item href=\"/prop-management/propOrders\">Prop Orders</NavDropdown.Item>\r\n                </NavDropdown> : \"\"}\r\n                {localStorage.getItem(\"role\") != null ? <Nav.Link href=\"/auth\" onClick={this.logout}>Logout</Nav.Link> : \"\"}\r\n            </Nav>\r\n        }\r\n\r\n        return <Navbar bg=\"dark\" variant=\"dark\" expand=\"md\">\r\n            <Container fluid style={{ marginTop: \"0px\" }}>\r\n                <Navbar.Brand href=\"/\">EYFT</Navbar.Brand>\r\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                <Navbar.Collapse id=\"navbarScroll\">\r\n                    {nav}\r\n                    {localStorage.getItem(\"role\") != null ? <h4>\r\n                        <a href='/card'>\r\n                            <span class=\"badge bg-success\">{MoneyFormatter.fromatDollars(this.state.cents)}</span>\r\n                        </a>\r\n                    </h4> : \"\"}\r\n                    <Button variant={this.state.fastMode ? \"success\" : \"outline-success\"}\r\n                        className=\"mx-3\" onClick={this.toggleFastMode}>\r\n                        Fast Mode\r\n                    </Button>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    }\r\n\r\n    componentDidMount() {\r\n        let token = localStorage.getItem(\"accessToken\");\r\n        if (token) {\r\n            axios({\r\n                method: 'get',\r\n                url: '/me/balance',\r\n                headers: {\r\n                    'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                }\r\n            }).then((res) => {\r\n                this.setState({\r\n                    accountId: res.data.accountId,\r\n                    cents: res.data.cents\r\n                })\r\n                localStorage.setItem(\"accountId\", res.data.accountId)\r\n                localStorage.setItem(\"cents\", res.data.cents)\r\n            }).catch((err) => {\r\n                ErrorHandler.runStringMessage(\"Can't receive balance\")\r\n            })\r\n        }\r\n\r\n        if (localStorage.getItem(\"accessToken\")) {\r\n            var socket = new SockJS('/ws/messages');\r\n            let stompWebsocket = Stomp.over(socket);\r\n            this.websocket = stompWebsocket;\r\n\r\n            let thisObj = this;\r\n\r\n            this.websocket.connect({ \"X-Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\") }, function (frame) {\r\n                stompWebsocket.subscribe('/topic/users/' + localStorage.getItem(\"id\") + \"/balance\", function (data) {\r\n\r\n                    let balance = JSON.parse(data.body)\r\n                    localStorage.setItem(\"cents\", balance.cents)\r\n                    thisObj.setState({ cents: balance.cents })\r\n                });\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default AppNavbar","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport {Alert} from 'reactstrap';\r\n\r\nclass ErrorNotifier extends Component {\r\n  render() {\r\n    return (\r\n        <div class=\"fixed-bottom\">\r\n            <Alert className=\"sm mb-0\" color=\"danger\" id=\"alert-danger\" style={{display: 'none' }}>\r\n            </Alert>\r\n            \r\n            <Alert className=\"sm mb-0\" color=\"success\" id=\"alert-success\" style={{display: 'none' }}>\r\n            </Alert>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorNotifier;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\nimport AllEventsBlock from './AllEventsBlock';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppNavbar/>\r\n        <Container fluid>\r\n          <AllEventsBlock/>\r\n        </Container>\r\n        <ErrorNotifier/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import * as React from 'react';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport style from \"./style.css\"\r\nimport AppNavbar from \"./AppNavbar\"\r\n\r\nexport default function Waiter() {\r\n    return (\r\n        <div>\r\n            <AppNavbar />\r\n            <div id=\"waiter\">\r\n                <CircularProgress color=\"success\" />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table, Row } from 'reactstrap';\r\nimport { Badge } from 'react-bootstrap'\r\nimport { Form, Input, InputGroup, FormGroup, } from 'reactstrap';\r\nimport { ToggleButton } from 'react-bootstrap'\r\nimport AppNavbar from './AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorHandler from './Handler/ErrorHandler.js';\r\nimport ErrorNotifier from './Handler/ErrorNotifier.js';\r\nimport $ from \"jquery\"\r\nimport Waiter from './Waiter.js';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass UserList extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tusers: [],\r\n\t\t\tfilteredUsers: [],\r\n\t\t\tisLoading: true,\r\n\t\t\tfilterLogin: null,\r\n\t\t\tfilterEmail: null,\r\n\t\t\tfilterRole: null,\r\n\t\t\tfilterEnabled: null,\r\n\t\t\tfilterIsArrangerRoleRequested: null,\r\n\t\t};\r\n\t\tthis.remove = this.remove.bind(this);\r\n\t\tthis.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n\t\tthis.searchBar = this.searchBar.bind(this)\r\n\t\tthis.clearFilter = this.clearFilter.bind(this)\r\n\t\tthis.handleChangeValue = this.handleChangeValue.bind(this)\r\n\t\tthis.filter = this.filter.bind(this)\r\n\t\tthis.handleChangeValueBoolThrice = this.handleChangeValueBoolThrice.bind(this)\r\n\r\n\t\tthisObj = this\r\n\t}\r\n\r\n\ttoggleSearchBar() {\r\n\t\tthis.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: \"/user-management/users\",\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tthisObj.setState({ users: data.users, isLoading: false }, () => thisObj.filter());\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync remove(id) {\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: `/user-management/users/${id}`,\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tlet updatedUsers = [...thisObj.state.users].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ users: updatedUsers });\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t\tthisObj.filter()\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tacceptArrangerRequest(id) {\r\n\r\n\t\tlet dto = {\r\n\t\t\t\"accepted\": true\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: `/user-management/users/${id}/arrangerRequest`,\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tdata: JSON.stringify(dto),\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t\twindow.location.reload()\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdeclineArrangerRequest(id) {\r\n\r\n\t\tlet dto = {\r\n\t\t\t\"accepted\": false\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: `/user-management/users/${id}/arrangerRequest`,\r\n\t\t\tmethod: \"PUT\",\r\n\t\t\tcontentType: \"application/json\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tdata: JSON.stringify(dto),\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t\twindow.location.reload()\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isLoading } = this.state;\r\n\r\n\t\tlet users = this.state.filteredUsers;\r\n\r\n\t\tif (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n\t\t\treturn <ErrorNotifier />\r\n\t\t}\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <Waiter />;\r\n\t\t}\r\n\r\n\t\tconst userList = users.map(user => {\r\n\r\n\t\t\tlet role = \"\"\r\n\t\t\tif (user.role === \"ADMIN\") {\r\n\t\t\t\trole = <span class=\"badge bg-danger\" style={{ minWidth: \"100%\" }}>Admin</span>\r\n\t\t\t} else if (user.role === \"USER\") {\r\n\t\t\t\trole = <span class=\"badge bg-success\" style={{ minWidth: \"100%\" }}>User</span>\r\n\r\n\t\t\t} else if (user.role === \"ARRANGER\") {\r\n\t\t\t\trole = <span class=\"badge bg-warning text-dark\" style={{ minWidth: \"100%\" }}>Arranger</span>\r\n\t\t\t}\r\n\r\n\t\t\tlet enabled = user.enabled\r\n\t\t\t\t? <span class=\"badge bg-success\" style={{ minWidth: \"100%\" }}>Enabled</span>\r\n\t\t\t\t: <span class=\"badge bg-danger\" style={{ minWidth: \"100%\" }}>Disabled</span>\r\n\r\n\t\t\tlet arrangerRoleRequested = user.arrangerRoleRequested\r\n\t\t\t\t? <ButtonGroup style={{ minWidth: \"100%\" }}>\r\n\t\t\t\t\t<button size=\"sm\" style={{ minWidth: \"50%\" }} class=\"badge btn-success\" onClick={() => this.acceptArrangerRequest(user.id)}>Accept</button>\r\n\t\t\t\t\t<button size=\"sm\" style={{ minWidth: \"50%\" }} class=\"badge btn-danger\" onClick={() => this.declineArrangerRequest(user.id)}>Decline</button>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t\t: <span class=\"badge bg-danger\" style={{ minWidth: \"100%\" }}>Not Requested</span>\r\n\r\n\t\t\treturn <tr key={user.id}>\r\n\t\t\t\t<td>{user.login}</td>\r\n\t\t\t\t<td>{user.email}</td>\r\n\t\t\t\t<td>{role}</td>\r\n\t\t\t\t<td>{enabled}</td>\r\n\t\t\t\t<td>{arrangerRoleRequested}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<ButtonGroup style={{ minWidth: \"100%\" }}>\r\n\t\t\t\t\t\t<Button size=\"sm\" style={{ minWidth: \"33%\" }} color=\"dark\" tag={Link} to={`/guest/${user.login}`}>Review</Button>\r\n\t\t\t\t\t\t<Button size=\"sm\" style={{ minWidth: \"33%\" }} color=\"success\" tag={Link} to={\"/user-management/users/\" + user.id}>Edit</Button>\r\n\t\t\t\t\t\t<Button size=\"sm\" style={{ minWidth: \"33%\" }} color=\"danger\" onClick={() => this.remove(user.id)}>Delete</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t});\r\n\r\n\r\n\t\tlet toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t<button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row className=\"ps-3\">\r\n\t\t\t\t\t\t{toggler}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"p-3\">\r\n\t\t\t\t\t\t{this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div class=\"ps-3\">\r\n\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Login</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"40%\">Email</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Role</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"7%\">Is Enabled</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Is Arranger Role Requested</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"20%\">Operations</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{userList}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<ErrorNotifier />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tclearFilter() {\r\n\t\tthis.setState({\r\n\t\t\tfilterLogin: null,\r\n\t\t\tfilterEmail: null,\r\n\t\t\tfilterRole: null,\r\n\t\t\tfilterEnabled: null,\r\n\t\t\tfilterIsArrangerRoleRequested: null\r\n\t\t}, () => this.filter())\r\n\t}\r\n\r\n\thandleChangeValue(event) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.value\r\n\t\tconst name = target.name\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t}, () => this.filter());\r\n\t}\r\n\t\r\n\r\n\thandleChangeValueBoolThrice(event) {\r\n\t\tconst target = event.target;\r\n\t\tconst name = target.name\r\n\t\tconst value = this.state[name]\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: !value\r\n\t\t}, () => this.filter());\r\n\t}\r\n\r\n\tfilter() {\r\n\t\tlet users = this.state.users;\r\n\r\n\t\tusers = users.filter(user => {\r\n\t\t\treturn (this.state.filterLogin == null || user.login.includes(this.state.filterLogin))\r\n\t\t\t\t&& (this.state.filterEmail == null || user.email.includes(this.state.filterEmail))\r\n\t\t\t\t&& (this.state.filterRole == null || user.role == this.state.filterRole)\r\n\t\t\t\t&& (this.state.filterEnabled == null || user.enabled == this.state.filterEnabled)\r\n\t\t\t\t&& (this.state.filterIsArrangerRoleRequested == null || user.arrangerRoleRequested == this.state.filterIsArrangerRoleRequested)\r\n\t\t})\r\n\r\n\t\tthis.setState({ filteredUsers: users })\r\n\t}\r\n\r\n\tsearchBar() {\r\n\r\n\t\treturn <Form >\r\n\t\t\t<InputGroup>\r\n\t\t\t\t<Input placeholder='Login' style={{ maxWidth: \"30%\" }} value={this.state.filterLogin} onChange={this.handleChangeValue} name=\"filterLogin\"></Input>\r\n\t\t\t\t<Input placeholder='Email' style={{ maxWidth: \"70%\" }} value={this.state.filterEmail} onChange={this.handleChangeValue} name=\"filterEmail\"></Input>\r\n\t\t\t</InputGroup>\r\n\t\t\t<ButtonGroup className='mt-3'>\r\n\t\t\t\t<Button onClick={this.handleChangeValue} name=\"filterRole\" value=\"USER\" color={this.state.filterRole == \"USER\" ? \"success\" : \"outline-success\"}>User</Button>\r\n\t\t\t\t<Button onClick={this.handleChangeValue} name=\"filterRole\" value=\"ARRANGER\" color={this.state.filterRole == \"ARRANGER\" ? \"warning\" : \"outline-warning text-dark\"}>Arranger</Button>\r\n\t\t\t\t<Button onClick={this.handleChangeValue} name=\"filterRole\" value=\"ADMIN\" color={this.state.filterRole == \"ADMIN\" ? \"danger\" : \"outline-danger\"}>Admin</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t\t<ButtonGroup className='mt-3 ms-3'>\r\n\t\t\t\t<Button onClick={this.handleChangeValueBoolThrice} name=\"filterEnabled\"\r\n\t\t\t\t\tcolor={this.state.filterEnabled == null ? \"outline-success\" : this.state.filterEnabled ? \"success\" : \"danger\"}>\r\n\t\t\t\t\t{this.state.filterEnabled == null ? \"Is Enabled\" : this.state.filterEnabled ? \"Enabled\" : \"Disabled\"}\r\n\t\t\t\t</Button>\r\n\t\t\t\t<Button onClick={this.handleChangeValueBoolThrice} name=\"filterIsArrangerRoleRequested\"\r\n\t\t\t\t\tcolor={this.state.filterIsArrangerRoleRequested == null ? \"outline-success\" : this.state.filterIsArrangerRoleRequested ? \"success\" : \"danger\"}>\r\n\t\t\t\t\t{this.state.filterIsArrangerRoleRequested == null ? \"Is Requested\" : this.state.filterIsArrangerRoleRequested ? \"Requested\" : \"Not Requested\"}\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t<Button color=\"secondary\" onClick={this.clearFilter}>Clear Filter</Button>\r\n\t\t\t</ButtonGroup>\r\n\t\t</Form >\r\n\t}\r\n\r\n}\r\n\r\nexport default UserList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport ErrorHandler from './Handler/ErrorHandler';\r\nimport ErrorNotifier from './Handler/ErrorNotifier';\r\nimport $ from \"jquery\"\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass UserEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {}\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            url: `/user-management/users/${thisObj.props.match.params.id}`,\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ user: data, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let user = { ...this.state.user };\r\n\r\n        if (name === 'enabled') {\r\n            value = !user.enabled\r\n        }\r\n\r\n        user[name] = value;\r\n        this.setState({ user: user });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { user: user } = this.state;\r\n\r\n        $.ajax({\r\n            url: '/user-management/users/' + user.id,\r\n            method: \"PUT\",\r\n            data: JSON.stringify(user),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ users: data.users, isLoading: false });\r\n                thisObj.props.history.push('/user-management/users');\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { user: user } = this.state;\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div style={{ minWidth: '60%' }}>\r\n                    <Form onSubmit={this.handleSubmit} style={{ minWidth: '100%'}}>\r\n                        <FormGroup className=\"mt-3\">\r\n                            <Label for=\"email\">Email</Label>\r\n                            <Input type=\"text\" name=\"email\" id=\"email\" value={user.email || ''}\r\n                                onChange={this.handleChange} autoComplete=\"email\" />\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mt-3\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <div style={{ minWidth: \"49%\" }}>\r\n                                <Label for=\"firstName\">First Name</Label>\r\n                                <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={user.firstName || ''}\r\n                                    onChange={this.handleChange} autoComplete=\"firstName\" />\r\n                            </div>\r\n                            <div style={{ minWidth: \"49%\" }}>\r\n                                <Label for=\"lastName\">Last Name</Label>\r\n                                <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={user.lastName || ''}\r\n                                    onChange={this.handleChange} autoComplete=\"lastName\" />\r\n                            </div>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mt-5\" style={{ display: \"flex\", justifyContent: \"space-around\" }}>\r\n                            <Button onClick={this.handleChange} style={{minWidth: \"25%\"}} color={user.role == \"ADMIN\" ? 'danger' : 'outline-danger'} name=\"role\" value='ADMIN' >Admin</Button>\r\n                            <Button onClick={this.handleChange} style={{minWidth: \"25%\"}} color={user.role == \"USER\" ? 'success' : 'outline-success'} name=\"role\" value='USER' standalone checked={user.role == \"USER\"}>User</Button>\r\n                            <Button onClick={this.handleChange} style={{minWidth: \"25%\"}} color={user.role == \"ARRANGER\" ? 'warning' : 'outline-warning text-dark'} name=\"role\" value='ARRANGER' standalone checked={user.role == \"ARRANGER\"} >Arranger</Button>\r\n                            <Button name=\"enabled\" id=\"enabled\" style={{minWidth: \"25%\"}} color={this.state.user.enabled ? \"outline-success\": \"danger\"}\r\n                                onClick={this.handleChange} autoComplete=\"enabled\">{this.state.user.enabled ? \"Enabled\": \"Disabled\"}</Button>\r\n                        </FormGroup>\r\n                        <FormGroup className=\"mt-5\" style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                            <Button color=\"success\" style={{ minWidth: \"49%\" }} type=\"submit\">Save</Button>{' '}\r\n                            <Button color=\"secondary\" style={{ minWidth: \"49%\" }} tag={Link} to=\"/user-management/users\">Cancel</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </div>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(UserEdit);","import React from 'react';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\nimport AppNavbar from './AppNavbar'\r\nimport $ from 'jquery';\r\nimport ErrorHandler from './Handler/ErrorHandler';\r\nimport ErrorNotifier from './Handler/ErrorNotifier';\r\n\r\nvar history\r\n\r\nclass NameForm extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tfirstName: '',\r\n\t\t\tlastName: '',\r\n\t\t\tlogin: '',\r\n\t\t\tpassword: '',\r\n\t\t\temail: '',\r\n\t\t}\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\t\thistory = this.props.history;\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.value\r\n\t\tconst name = target.name\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n\thandleSubmit(event) {\r\n\t\t$.ajax({\r\n\t\t\turl: \"/registration\",\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"post\",\r\n\t\t\tdata: JSON.stringify(this.state),\r\n\t\t\tsuccess: function(data){\r\n\t\t\t\thistory.push(\"/auth\")\r\n\t\t\t},\r\n\t\t\terror: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n\t\t})\r\n\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar/>\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">First Name</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"firstName\" value={this.state.firstName} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Last Name</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"lastName\" value={this.state.lastName} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Login</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"login\" value={this.state.login} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Email</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"d-grid gap-2\">\r\n\t\t\t\t\t\t\t<input class=\"btn btn-success mt-3\" type=\"submit\" value=\"Register\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"mt-3\">\r\n\t\t\t\t\t\t<a href=\"/auth\">Already registered?</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                <ErrorNotifier />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default NameForm","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table, Form, Input, InputGroup, FormGroup, } from 'reactstrap';\r\nimport { ToggleButton, Row } from 'react-bootstrap'\r\nimport AppNavbar from '../../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport ErrorHandler from '../../Handler/ErrorHandler.js';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier'\r\nimport $ from \"jquery\"\r\nimport Waiter from '../../Waiter.js';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass EventList extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tevents: [],\r\n\t\t\tisLoading: true,\r\n\t\t\tselectedFilterCategories: [],\r\n\t\t\tselectedOptionCategories: [],\r\n\t\t\tfilterCategories: [],\r\n\t\t\townerLogin: \"\",\r\n\t\t\tmultiselectRefTracker: React.createRef()\r\n\t\t};\r\n\t\tthis.remove = this.remove.bind(this);\r\n\t\tthis.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n\t\tthis.setFilterValue = this.setFilterValue.bind(this)\r\n\t\tthis.setFilterOperation = this.setFilterOperation.bind(this)\r\n\t\tthis.setSortField = this.setSortField.bind(this);\r\n\t\tthis.setSortOrder = this.setSortOrder.bind(this);\r\n\t\tthis.setEventState = this.setEventState.bind(this);\r\n\t\tthis.clearFilter = this.clearFilter.bind(this)\r\n\t\tthis.onSelect = this.onSelect.bind(this);\r\n\t\tthis.onRemove = this.onRemove.bind(this);\r\n\t\tthis.seacrch = this.seacrch.bind(this);\r\n\t\tthis.handleChange = this.handleChange.bind(this)\r\n\r\n\t\tthisObj = this\r\n\t}\r\n\r\n\ttoggleSearchBar() {\r\n\t\tthis.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n\t}\r\n\r\n\r\n\tsetFilterValue(event) {\r\n\t\tthis.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tsetFilterOperation(event) {\r\n\t\tthis.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tsetSortOrder(event) {\r\n\t\tthis.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tsetSortField(event) {\r\n\t\tthis.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tsetEventState(event) {\r\n\t\tthis.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tasync clearFilter() {\r\n\r\n\t\tthis.setState({ filterField: null });\r\n\t\tthis.setState({ filterValue: \"\" });\r\n\t\tthis.setState({ filterOperation: null });\r\n\t\tthis.setState({ sortOrder: null });\r\n\t\tthis.setState({ sortField: null });\r\n\t\tthis.setState({ eventState: null });\r\n\t\tthis.setState({ selectedFilterCategories: [] });\r\n\t\tthis.setState({ selectedOptionCategories: [] });\r\n\t\tthis.setState({ ownerLogin: \"\"})\r\n\t\tawait this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\r\n\tonSelect(selectedList, selectedItem) {\r\n\t\tlet categoriesNames = this.state.selectedFilterCategories;\r\n\t\tcategoriesNames.push(selectedItem.name);\r\n\t\tthis.setState({ selectedFilterCategories: categoriesNames })\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tonRemove(selectedList, removedItem) {\r\n\t\tlet categoriesNames = this.state.selectedFilterCategories;\r\n\r\n\t\tcategoriesNames = categoriesNames.filter(item => {\r\n\t\t\treturn item != removedItem.name\r\n\t\t});\r\n\r\n\t\tthis.setState({ selectedFilterCategories: categoriesNames })\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\thandleChange(event) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.value\r\n\t\tconst name = target.name\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\r\n\t\tsetTimeout(this.seacrch, 100);\r\n\t}\r\n\r\n\tasync seacrch() {\r\n\t\tlet queryEventDto = {\r\n\t\t\tfilterField: this.state.filterField,\r\n\t\t\tfilterValue: this.state.filterValue,\r\n\t\t\tfilterOperation: this.state.filterOperation,\r\n\t\t\tsortField: this.state.sortField,\r\n\t\t\tsortOrder: this.state.sortOrder,\r\n\t\t\teventState: this.state.eventState,\r\n\t\t\tcategoriesNames: this.state.selectedFilterCategories.map(function (el) {\r\n\t\t\t\treturn el.trim();\r\n\t\t\t}).filter(function (el) {\r\n\t\t\t\treturn el !== \"\" && el !== null;\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tlet ownerLogin = this.state.ownerLogin;\r\n\r\n\t\t$.ajax({\r\n\t\t\tmethod: \"POST\",\r\n\t\t\turl: \"/event-management/events/filter\",\r\n\t\t\tdata: JSON.stringify(queryEventDto),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tlet events = data.events.filter(item => {\r\n\t\t\t\t\treturn item.userLogin.includes(ownerLogin)\r\n\t\t\t\t})\r\n\t\t\t\tthisObj.setState({ events: events, isLoading: false });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t$.ajax({\r\n\t\t\turl: \"/event-management/events\",\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tthisObj.setState({ events: data.events });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\t$.ajax({\r\n\t\t\tmethod: \"GET\",\r\n\t\t\turl: \"/categories\",\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tthisObj.setState({ filterCategories: data.categories, isLoading: false });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tasync remove(id) {\r\n\t\t$.ajax({\r\n\t\t\turl: `/event-management/events/${id}`,\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tlet updatedEvents = [...thisObj.state.events].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ events: updatedEvents });\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tsearchBar() {\r\n\r\n\t\tlet categoriesSelector = <Multiselect\r\n\t\t\toptions={this.state.filterCategories} // Options to display in the dropdown\r\n\t\t\tselectedValues={this.state.selectedOptionCategories} // Preselected value to persist in dropdown\r\n\t\t\tonSelect={this.onSelect} // Function will trigger on select event\r\n\t\t\tonRemove={this.onRemove} // Function will trigger on remove event\r\n\t\t\tdisplayValue=\"name\"  // Property name to display in the dropdown options\r\n\t\t\tref={this.state.multiselectRefTracker}\r\n\t\t/>\r\n\t\treturn <Form className=\"mb-3\">\r\n\r\n\t\t\t<Button className=\"mb-3\"\r\n\t\t\t\tonClick={this.clearFilter}\r\n\t\t\t\tcolor=\"outline-secondary\">\r\n\t\t\t\tClear Filter\r\n\t\t\t</Button>\r\n\r\n\t\t\t<div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n\t\t\t\t{categoriesSelector}\r\n\r\n\t\t\t\t{/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n\r\n\t\t\t\t<Input onChange={this.handleChange} name=\"ownerLogin\" value={this.state.ownerLogin}\r\n\t\t\t\t\tplaceholder=\"Owner Login\" style={{ maxWidth: \"20%\", display: \"inline\" }}></Input>\r\n\t\t\t</div>\r\n\r\n\t\t\t<FormGroup className=\"mb-3\">\r\n\t\t\t\t<div style={{ display: \"inline\" }}>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\teventState=\"WAITING_FOR_START\"\r\n\t\t\t\t\t\tvariant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setEventState}>\r\n\t\t\t\t\t\tWaiting\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\teventState=\"STARTED\"\r\n\t\t\t\t\t\tvariant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setEventState}>\r\n\t\t\t\t\t\tStarted\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\teventState=\"FINISHED\"\r\n\t\t\t\t\t\tvariant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setEventState}>\r\n\t\t\t\t\t\tFinished\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\teventState=\"CLOSED\"\r\n\t\t\t\t\t\tvariant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setEventState}>\r\n\t\t\t\t\t\tClosed\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t</div>\r\n\t\t\t</FormGroup>\r\n\r\n\t\t\t<FormGroup className=\"mb-3\" >\r\n\t\t\t\t<div style={{ display: \"inline\" }}>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortField=\"name\"\r\n\t\t\t\t\t\tvariant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortField}>\r\n\t\t\t\t\t\tName\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortField=\"description\"\r\n\t\t\t\t\t\tvariant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortField}>\r\n\t\t\t\t\t\tDescription\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortField=\"startInstant\"\r\n\t\t\t\t\t\tvariant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortField}>\r\n\t\t\t\t\t\tStart Instant\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortField=\"endInstant\"\r\n\t\t\t\t\t\tvariant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortField}>\r\n\t\t\t\t\t\tEnd Instant\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortOrder=\"ASC\"\r\n\t\t\t\t\t\tvariant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortOrder}>\r\n\t\t\t\t\t\tAscend\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\tsortOrder=\"DESC\"\r\n\t\t\t\t\t\tvariant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\tonClick={this.setSortOrder}>\r\n\t\t\t\t\t\tDescend\r\n\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t</div>\r\n\t\t\t</FormGroup>\r\n\r\n\t\t\t<FormGroup >\r\n\r\n\t\t\t\t<div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n\t\t\t\t\t<div style={{ display: \"inline\" }}>\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tfilterField=\"name\"\r\n\t\t\t\t\t\t\tvariant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\t\tonClick={this.setFilterValue}>\r\n\t\t\t\t\t\t\tName\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tfilterField=\"description\"\r\n\t\t\t\t\t\t\tvariant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\t\tonClick={this.setFilterValue}>\r\n\t\t\t\t\t\t\tDescription\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tfilterOperation=\"LIKE\"\r\n\t\t\t\t\t\t\tvariant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\t\tonClick={this.setFilterOperation}>\r\n\t\t\t\t\t\t\tLike\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t\t<ToggleButton\r\n\t\t\t\t\t\t\tfilterOperation=\"EQUAL\"\r\n\t\t\t\t\t\t\tvariant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n\t\t\t\t\t\t\tonClick={this.setFilterOperation}>\r\n\t\t\t\t\t\t\tEqual\r\n\t\t\t\t\t\t</ToggleButton>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n\t\t\t\t\t\tplaceholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n\t\t\t\t</div>\r\n\t\t\t</FormGroup>\r\n\t\t</Form >\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { events, isLoading } = this.state;\r\n\r\n\t\tif (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n\t\t\treturn <ErrorNotifier />\r\n\t\t}\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <Waiter />;\r\n\t\t}\r\n\r\n\t\tconst eventList = events.map(event => {\r\n\r\n\t\t\tvar startInstant = new Date(event.startInstant * 1000);\r\n\t\t\tstartInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n\t\t\tvar endInstant = new Date(event.endInstant * 1000);\r\n\t\t\tendInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n\t\t\tvar categories = event.categoriesNames.map(category => {\r\n\t\t\t\treturn <Badge className=\"bg-success ms-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n\t\t\t})\r\n\r\n\t\t\tvar state\r\n\t\t\tswitch (event.eventState) {\r\n\t\t\t\tcase \"WAITING_FOR_START\":\r\n\t\t\t\t\tstate = <Badge className=\"bg-warning text-dark\" style={{ minWidth: \"100%\" }}>Waiting</Badge>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"STARTED\":\r\n\t\t\t\t\tstate = <Badge className=\"bg-success\" style={{ minWidth: \"100%\" }}>Started</Badge>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"FINISHED\":\r\n\t\t\t\t\tstate = <Badge className=\"bg-danger\" style={{ minWidth: \"100%\" }}>Finished</Badge>\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase \"CLOSED\":\r\n\t\t\t\t\tstate = <Badge className=\"bg-dark\" style={{ minWidth: \"100%\" }}>Closed</Badge>\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\treturn <tr key={event.id}>\r\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}><Link to={`/events/${event.id}`}>{event.name}</Link></td>\r\n\t\t\t\t<td>{event.userLogin}</td>\r\n\t\t\t\t<td>{startInstant.toLocaleString('en-GB', { hour12: false })}</td>\r\n\t\t\t\t<td>{endInstant.toLocaleString('en-GB', { hour12: false })}</td>\r\n\t\t\t\t<td>{categories}</td>\r\n\t\t\t\t<td>{state}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<ButtonGroup style={{ minWidth: \"100%\" }}>\r\n\t\t\t\t\t\t<Button style={{ minWidth: \"50%\" }} size=\"sm\" color=\"success\" tag={Link} to={\"/event-management/events/\" + event.id} >Edit</Button>\r\n\t\t\t\t\t\t<Button style={{ minWidth: \"50%\" }} size=\"sm\" color=\"danger\" onClick={() => this.remove(event.id)}>Delete</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t});\r\n\r\n\r\n\t\tlet toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t<button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t<Row className=\"ps-3\">\r\n\t\t\t\t\t\t{toggler}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<Row className=\"ps-3 p-3\">\r\n\t\t\t\t\t\t{this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n\t\t\t\t\t</Row>\r\n\t\t\t\t\t<div class=\"ps-3\">\r\n\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Owner login</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Start Instant</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">End Instant</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"25%\">Category</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Event State</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"20%\">Operations</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{eventList}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<ErrorNotifier />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default EventList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, InputGroup, Row, Col } from 'reactstrap';\r\nimport AppNavbar from '../../AppNavbar';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass EventEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: {},\r\n            categories: [],\r\n            selectedValue: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeStartInstant = this.handleChangeStartInstant.bind(this);\r\n        this.handleChangeEndInstant = this.handleChangeEndInstant.bind(this);\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let event = this.state.event;\r\n        event.categoriesNames.push(selectedItem.name);\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let event = this.state.event;\r\n\r\n        event.categoriesNames = event.categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            url: `/event-management/events/${thisObj.props.match.params.id}`,\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                let event = data\r\n                event.startInstant *= 1000\r\n                event.endInstant *= 1000\r\n                let categories = event.categoriesNames.map(name => { return { name: name } });\r\n                thisObj.setState({ event: event, selectedValue: categories });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ categories: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n\r\n        let ev = { ...this.state.event };\r\n        ev[name] = value;\r\n\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    handleChangeStartInstant(event) {\r\n        let ev = { ...this.state.event };\r\n        ev.startInstant = event._d\r\n        console.log(ev.startInstant)\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    handleChangeEndInstant(event) {\r\n        let ev = { ...this.state.event };\r\n        ev.endInstant = event._d\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        let ev = this.state.event;\r\n\r\n        if (value !== null && value !== \"\") {\r\n            ev.categoriesNames = value.split(',')\r\n            this.setState({\r\n                event: ev\r\n            });\r\n        } else {\r\n            this.setState({ event: ev })\r\n        }\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { event: ev } = this.state;\r\n\r\n        if (typeof ev.startInstant === \"number\") {\r\n            ev.startInstant /= 1000;\r\n        }\r\n\r\n        if (typeof ev.endInstant === \"number\") {\r\n            ev.endInstant /= 1000;\r\n        }\r\n\r\n        ev.categoriesNames = ev.categoriesNames.map(function (el) {\r\n            return el.trim();\r\n        }).filter(function (el) {\r\n            return el !== \"\" && el !== null;\r\n        })\r\n\r\n        $.ajax({\r\n            url: '/event-management/events/' + ev.id,\r\n            method: 'PUT',\r\n            data: JSON.stringify(ev),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.props.history.push('/event-management/events');\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ev.endInstant *= 1000;\r\n                ev.startInstant *= 1000;\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { event: ev } = this.state;\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={ev.name || ''}\r\n                            onChange={this.handleChange} autoComplete=\"name\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={ev.description || ''}\r\n                            onChange={this.handleChange} autoComplete=\"description\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"place\">Place</Label>\r\n                        <Input type=\"text\" name=\"place\" id=\"place\" value={ev.place || ''}\r\n                            onChange={this.handleChange} autoComplete=\"place\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Button onClick={this.handleChange} className=\"me-3\" name=\"eventState\" value='WAITING_FOR_START' color={ev.eventState == \"WAITING_FOR_START\" ? \"warning\" : \"outline-warning text-dark\"} >Waiting</Button>\r\n                        <Button onClick={this.handleChange} className=\"me-3\" name=\"eventState\" value='STARTED' color={ev.eventState == \"STARTED\" ? \"success\" : \"outline-success\"} >Started</Button>\r\n                        <Button onClick={this.handleChange} className=\"me-3\" name=\"eventState\" value='FINISHED' color={ev.eventState == \"FINISHED\" ? \"danger\" : \"outline-danger\"} >Finished</Button>\r\n                        <Button onClick={this.handleChange} className=\"me-3\" name=\"eventState\" value='CLOSED' color={ev.eventState == \"CLOSED\" ? \"dark\" : \"outline-dark\"} >Closed</Button>\r\n                    </FormGroup>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <FormGroup className=\"mt-3\">\r\n                                <div>\r\n                                    <Label>Categories</Label>\r\n                                    <Multiselect\r\n                                        options={this.state.categories} // Options to display in the dropdown\r\n                                        selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                                        onSelect={this.onSelect} // Function will trigger on select event\r\n                                        onRemove={this.onRemove} // Function will trigger on remove event\r\n                                        displayValue=\"name\"  // Property name to display in the dropdown options\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{ \"display\": \"flex\", justifyContent: \"right\" }}>\r\n                                    <Label for=\"startInstant\">Starts at</Label>\r\n                                    <DatePicker className='ms-5'\r\n                                        value={this.state.event.startInstant}\r\n                                        name=\"startInstant\"\r\n                                        dateFormat=\"DD-MM-YYYY\"\r\n                                        timeFormat=\"HH:mm\"\r\n                                        onChange={this.handleChangeStartInstant}>\r\n                                    </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{ \"display\": \"flex\", justifyContent: \"right\" }}>\r\n                                    <Label for=\"endInstant\">Finishes at</Label>\r\n                                    <DatePicker className='ms-5'\r\n                                        value={this.state.event.endInstant}\r\n                                        name=\"endInstant\"\r\n                                        dateFormat=\"DD-MM-YYYY\"\r\n                                        timeFormat=\"HH:mm\"\r\n                                        onChange={this.handleChangeEndInstant}>\r\n\r\n                                    </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup className=\"mt-3\" style={{ minWidth: \"100%\", display: \"flex\", justifyContent: \"space-between\" }}>\r\n                        <Button color=\"success\" type=\"submit\" style={{ minWidth: \"48%\" }}>Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/event-management/events\" style={{ minWidth: \"48%\" }}>Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(EventEdit);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label,  } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport $ from 'jquery';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport style from \"../style.css\"\r\n\r\nconst address = \"/category-management/categories\"\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass CreateCategoryForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            category: {\r\n                name: \"\",\r\n                description: \"\",\r\n            }\r\n        }\r\n\r\n        this.toggleCreateMode = props.toggle;\r\n        this.addCategory = props.addCategory;\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let category = { ...this.state.category };\r\n\r\n        category[name] = value;\r\n        this.setState({ category: category });\r\n\t}\r\n\r\n    handleSubmit(event) {\r\n\t\t$.ajax({\r\n\t\t\turl: address,\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"post\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n\t\t\tdata: JSON.stringify(this.state.category),\r\n            success: function(data){\r\n                thisObj.addCategory(data)\r\n                thisObj.setState({\r\n                    category: {\r\n                        name: \"\",\r\n                        description: \"\",\r\n                    }\r\n                })\r\n                thisObj.toggleCreateMode()\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n\t\t})\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n    render(){\r\n        const { category: category } = this.state;\r\n\r\n        if(localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        return <div>\r\n        <Container className=\"createCategoryFormContainer\">\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input type=\"text\" name=\"name\" id=\"name\" value={category.name || ''}\r\n                        onChange={this.handleChange} autoComplete=\"event\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"description\">Description</Label>\r\n                    <Input type=\"text\" name=\"description\" id=\"description\" value={category.description || ''}\r\n                        onChange={this.handleChange} autoComplete=\"description\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-4\">\r\n                    <div class=\"saveCancelCategoryButtons\">\r\n                        <Button color=\"success\" className='saveCategoryButton' type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" className='cancelCategoryButton' onClick={this.toggleCreateMode}>Cancel</Button>\r\n                    </div>\r\n                </FormGroup>\r\n            </Form>\r\n        </Container>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default CreateCategoryForm","import React, { Component } from 'react';\r\nimport { Button, ButtonGroup, Container, Table } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier.js';\r\nimport ErrorHandler from '../Handler/ErrorHandler.js';\r\nimport $ from \"jquery\"\r\nimport style from \"../style.css\"\r\nimport CreateCategoryForm from './CreateCategoryForm.js';\r\nimport Waiter from '../Waiter.js';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass CategoryList extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcategories: [],\r\n\t\t\tselectedCategories: [],\r\n\t\t\tisLoading: true,\r\n\t\t\teditModeId: null,\r\n\t\t\teditModeName: null,\r\n\t\t\teditModeDescription: null,\r\n\t\t\tcreateMode: false,\r\n\t\t\tfilterValue: \"\"\r\n\t\t};\r\n\r\n\t\tthis.remove = this.remove.bind(this);\r\n\t\tthis.filterCategories = this.filterCategories.bind(this)\r\n\t\tthis.editMode = this.editMode.bind(this)\r\n\t\tthis.editModeChangeValue = this.editModeChangeValue.bind(this)\r\n\t\tthis.saveCategory = this.saveCategory.bind(this)\r\n\t\tthis.toggleCreateMode = this.toggleCreateMode.bind(this)\r\n\t\tthis.addCategory = this.addCategory.bind(this)\r\n\t\tthis.cancelEditing = this.cancelEditing.bind(this)\r\n\r\n\t\tthisObj = this\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t$.ajax({\r\n\t\t\turl: \"/category-management/categories\",\r\n\t\t\tmethod: \"GET\",\r\n\t\t\tdata: JSON.stringify(this.state.category),\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tthisObj.setState({ categories: data.categories, selectedCategories: data.categories, isLoading: false });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tasync remove(id) {\r\n\t\t$.ajax({\r\n\t\t\turl: `/category-management/categories/${id}`,\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\tdata: JSON.stringify(this.state.category),\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tlet updatedCategories = [...thisObj.state.categories].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ categories: updatedCategories });\r\n\t\t\t\tlet updatedSelectedCategories = [...thisObj.state.selectedCategories].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ selectedCategories: updatedSelectedCategories });\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleCreateMode() {\r\n\t\tthis.setState({ createMode: !this.state.createMode })\r\n\t}\r\n\r\n\tcancelEditing() {\r\n\t\tthisObj.setState({\r\n\t\t\teditModeId: null\r\n\t\t})\r\n\t}\r\n\r\n\taddCategory(category) {\r\n\t\tlet categories = this.state.categories\r\n\t\tcategories.push(category)\r\n\t\tthis.setState({ categories: categories }, () => {\r\n\t\t\tlet updatedCategories = [...thisObj.state.categories];\r\n\t\t\tthisObj.setState({ categories: updatedCategories });\r\n\r\n\t\t\tlet selectedCategories = [...thisObj.state.categories].filter((category) => {\r\n\t\t\t\treturn category.name.includes(thisObj.state.filterValue);\r\n\t\t\t})\r\n\r\n\t\t\tthisObj.setState({ selectedCategories: selectedCategories });\r\n\t\t})\r\n\t}\r\n\r\n\tfilterCategories(e) {\r\n\t\tlet value = e.target.value;\r\n\t\tlet selectedCategories = [...this.state.categories].filter((category) => {\r\n\t\t\treturn category.name.includes(value);\r\n\t\t})\r\n\r\n\t\tthis.setState({ selectedCategories: selectedCategories, filterValue: value });\r\n\t}\r\n\r\n\teditMode(category) {\r\n\t\tthis.setState({\r\n\t\t\teditModeId: category.id,\r\n\t\t\teditModeName: category.name,\r\n\t\t\teditModeDescription: category.description\r\n\t\t});\r\n\t}\r\n\r\n\teditModeChangeValue(e) {\r\n\t\tlet target = e.target;\r\n\t\tlet name = target.name;\r\n\t\tlet value = target.value;\r\n\r\n\t\tlet state = this.state\r\n\t\tstate[name] = value;\r\n\t\tthis.setState(state);\r\n\t}\r\n\r\n\tsaveCategory(category) {\r\n\t\tlet dto = {\r\n\t\t\tid: this.state.editModeId,\r\n\t\t\tname: this.state.editModeName,\r\n\t\t\tdescription: this.state.editModeDescription,\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: `/category-management/categories/${this.props.match.params.id}`,\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"put\",\r\n\t\t\tdata: JSON.stringify(dto),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\t// thisObj.props.history.push('/category-management/categories');\t\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t\tthisObj.setState({ editModeId: null })\r\n\t\t\t\tcategory.name = thisObj.state.editModeName\r\n\t\t\t\tcategory.description = thisObj.state.editModeDescription\r\n\r\n\t\t\t\tlet updatedCategories = [...thisObj.state.categories];\r\n\t\t\t\tthisObj.setState({ categories: updatedCategories });\r\n\t\t\t\tlet selectedCategories = [...thisObj.state.categories].filter((category) => {\r\n\t\t\t\t\treturn category.name.includes(thisObj.state.filterValue);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthisObj.setState({ selectedCategories: selectedCategories });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isLoading } = this.state;\r\n\t\tconst categories = this.state.selectedCategories;\r\n\r\n\t\tif (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n\t\t\treturn <ErrorNotifier />\r\n\t\t}\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <Waiter />;\r\n\t\t}\r\n\r\n\t\tconst categoryList = categories.map(category => {\r\n\t\t\treturn <tr key={category.id}>\r\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{this.state.editModeId == category.id ? <input value={this.state.editModeName} name=\"editModeName\" onChange={this.editModeChangeValue}></input> : category.name}</td>\r\n\t\t\t\t<td>{this.state.editModeId == category.id ? <input value={this.state.editModeDescription} name=\"editModeDescription\" style={{ minWidth: \"100%\" }} onChange={this.editModeChangeValue}></input> : category.description}</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<ButtonGroup style={{ minWidth: \"100%\" }}>\r\n\t\t\t\t\t\t{this.state.editModeId == category.id\r\n\t\t\t\t\t\t\t? <ButtonGroup style={{ minWidth: \"50%\" }}>\r\n\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"warning\" style={{ minWidth: \"50%\" }} onClick={() => this.saveCategory(category)} >Save</Button>\r\n\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"success\" style={{ minWidth: \"50%\" }} onClick={() => this.cancelEditing()} >Cancel</Button>\r\n\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t: <Button size=\"sm\" color=\"success\" style={{ minWidth: \"50%\" }} onClick={() => this.editMode(category)} >Quick Edit</Button>}\r\n\t\t\t\t\t\t<Button size=\"sm\" color=\"danger\" style={{ minWidth: \"50%\" }} onClick={() => this.remove(category.id)}>Delete</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar />\r\n\t\t\t\t<Container fluid >\r\n\t\t\t\t\t{this.state.createMode ? <CreateCategoryForm addCategory={this.addCategory} toggle={this.toggleCreateMode} /> :\r\n\t\t\t\t\t\t<div class=\"categoriesList mt-3 p-3\">\r\n\t\t\t\t\t\t\t<Button color='success' onClick={this.toggleCreateMode} >Create Category</Button>\r\n\t\t\t\t\t\t\t<div class=\"input-group categoryNameInput\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">🔎</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" value={this.state.filterValue} onChange={this.filterCategories} placeholder=\"Category Name\" aria-label=\"Category Name\" aria-describedby=\"basic-addon1\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<div class=\"mt-3 p-3\">\r\n\t\t\t\t\t\t<Table >\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th width=\"15%\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"65%\">Description</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"20%\">Operations</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{categoryList}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<ErrorNotifier />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default CategoryList;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card} from 'react-bootstrap'\r\nimport {Input} from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport style from \"../style.css\"\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj; \r\n\r\nclass MePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login : localStorage.getItem(\"login\"),\r\n            id : localStorage.getItem(\"id\"),\r\n            role : localStorage.getItem(\"role\"),\r\n            user: null,\r\n            isLoading: true,\r\n            }\r\n\r\n            this.logout = this.logout.bind(this)\r\n            this.joinEvents = this.joinEvents.bind(this)\r\n            \r\n            thisObj = this\r\n        }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"Get\",\r\n            url: \"/me\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n              },\r\n            success: function(data){\r\n                thisObj.setState({ user: data, isLoading: false  });\r\n                \r\n                Constants.updateRole(data.role)\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem(\"accessToken\")\r\n        localStorage.removeItem(\"tokenType\")\r\n        localStorage.removeItem(\"expiresIn\")\r\n        \r\n        localStorage.removeItem(\"login\")\r\n        localStorage.removeItem(\"id\")\r\n        localStorage.removeItem(\"role\")\r\n\r\n        this.props.history.push('/auth');\r\n    }\r\n\r\n    joinEvents() {\r\n        this.props.history.push('/me/join-events');\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n\t\tconst { user, isLoading } = this.state;\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <p>Loading...</p>;\r\n\t\t}\r\n\r\n        if(this.state.login == null || this.state.role == null || this.state.id == null){\r\n            return <div><h1>Unauthorized</h1></div>\r\n        }\r\n\r\n\r\n        const avatar = user.avatar !== null ?   <Card > \r\n                                                    <Card.Img src={\"/resources/users/\" + user.id + \"/photos/\" + user.avatar.id}/>\r\n                                                </Card> \r\n                                                : \"\"\r\n\r\n        return <div className=\"d-grid gap-2\">\r\n                    {avatar}\r\n                    <h1>{this.state.login}</h1>\r\n                    <Button variant=\"success\" onClick={this.joinEvents}>\r\n                        Join Events\r\n                    </Button>\r\n                    <Button variant=\"warning\" onClick={this.logout}>\r\n                        Logout\r\n                    </Button>\r\n                    \r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(MePage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $, { post } from 'jquery';\r\nimport { ScrollSpy } from 'bootstrap';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\n\r\nlet thisObj; \r\n\r\nclass MeJoinedEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login : localStorage.getItem(\"login\"),\r\n            id : localStorage.getItem(\"id\"),\r\n            role : localStorage.getItem(\"role\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/me/joined\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(data){\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    leave(eventId) {\r\n\r\n        $.ajax({\r\n            method: \"PUT\",\r\n            url: \"/events/\" + eventId + \"/leave\",\r\n            contentType: \"application/json\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function () {\r\n                window.location.reload();\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n            <Card>\r\n                {eventState}\r\n                <Card.Img variant=\"top\" src={photoSrc} />\r\n                <Card.Body>\r\n                    <Card.Title>{event.name}</Card.Title>\r\n                    <Card.Text>{event.description}</Card.Text>\r\n                    <div className='mb-3'>\r\n                        {categories}\r\n                    </div>\r\n                    <Link to={\"/arranger/arranged/\" + event.id}>View more</Link>\r\n                    <Button color=\"outline-warning\" onClick={() => this.leave(event.id)} className=\"mt-3\" style={{minWidth:\"100%\"}}>Leave</Button>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    <div>\r\n                        Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                    <div>\r\n                        Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n        });\r\n\r\n        return (<div>\r\n            {this.searchBar()}\r\n            <Row xs={1} md={3} className=\"g-4\">\r\n                {eventList}\r\n            </Row>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n              }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n              })\r\n        }\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/me/joined\",\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(data){\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n            <FormGroup className=\"ms-3 mb-3\" >\r\n                <Label>Filter</Label>\r\n                <ButtonGroup className=\"ms-3\">\r\n                    <ToggleButton\r\n                        filterField=\"name\"\r\n                        variant={this.state.filterField === \"name\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterValue}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        filterField=\"description\"\r\n                        variant={this.state.filterField === \"description\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterValue}>\r\n                        Description\r\n                    </ToggleButton>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup className=\"ms-3\">\r\n                    <ToggleButton\r\n                        filterOperation=\"LIKE\"\r\n                        variant={this.state.filterOperation === \"LIKE\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterOperation}>\r\n                        Like\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        filterOperation=\"EQUAL\"\r\n                        variant={this.state.filterOperation === \"EQUAL\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterOperation}>\r\n                        Equal\r\n                    </ToggleButton>\r\n                </ButtonGroup>\r\n                </FormGroup>\r\n                <FormGroup className=\"ms-3 mb-3\" >\r\n                    <Label>Sorting</Label>\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton\r\n                            sortField=\"name\"\r\n                            variant={this.state.sortField === \"name\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"description\"\r\n                            variant={this.state.sortField === \"description\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Description\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"startInstant\"\r\n                            variant={this.state.sortField === \"startInstant\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Start Instant\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"endInstant\"\r\n                            variant={this.state.sortField === \"endInstant\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            End Instant\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton\r\n                            sortOrder=\"ASC\"\r\n                            variant={this.state.sortOrder === \"ASC\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortOrder}>\r\n                            Ascend\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortOrder=\"DESC\"\r\n                            variant={this.state.sortOrder === \"DESC\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortOrder}>\r\n                            Descend\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n                </FormGroup>\r\n                <FormGroup className=\"ms-3 mb-3\" >\r\n                    <Label>State</Label>\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton \r\n                            eventState=\"WAITING_FOR_START\"\r\n                            variant={this.state.eventState === \"WAITING_FOR_START\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Waiting for start\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"STARTED\"\r\n                            variant={this.state.eventState === \"STARTED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Started\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"FINISHED\"\r\n                            variant={this.state.eventState === \"FINISHED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Finished\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"CLOSED\"\r\n                            variant={this.state.eventState == \"CLOSED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Closed\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n\r\n                <Button className=\" ms-3\"\r\n                    onClick={this.clearFilter}\r\n                    color=\"outline-secondary\">\r\n                    Clear Filter\r\n                </Button>\r\n\r\n            </FormGroup>\r\n            <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue}\r\n                className=\"mb-3\" placeholder=\"Search\"></Input>\r\n            <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                placeholder=\"Enter categories separated by comma\"></Input>\r\n            <Button color=\"info\" className=\"mt-3\" onClick={this.seacrch}>Search</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nexport default withRouter(MeJoinedEvents);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport MoneyFormatter from '../Formatter/MoneyFormatter';\r\n\r\n\r\nlet thisObj;\r\n\r\nclass MeEventsToJoin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: localStorage.getItem(\"login\"),\r\n            id: localStorage.getItem(\"id\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n            searchBarEnabled: false,\r\n            selectedValues: [],\r\n            options: [],\r\n            multiselectRefTracker: React.createRef()\r\n        }\r\n        this.join = this.join.bind(this)\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    toggleSearchBar() {\r\n        this.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        categoriesNames.push(selectedItem.name);\r\n        this.setState({ categoriesNames: categoriesNames })\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n\r\n        categoriesNames = categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ categoriesNames: categoriesNames })\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/me/to-join\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ options: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    join(eventId) {\r\n\r\n        $.ajax({\r\n            method: \"PUT\",\r\n            url: \"/events/\" + eventId + \"/join\",\r\n            contentType: \"application/json\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                let events = thisObj.state.events.filter(item => item.id != eventId);\r\n\r\n                thisObj.setState({ events: events })\r\n\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isAnyRole((localStorage.getItem(\"role\")))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n                <Card>\r\n                    {eventState}\r\n                    <Card.Img variant=\"top\" src={photoSrc} />\r\n                    <Card.Body>\r\n                        <Card.Title>{event.name}</Card.Title>\r\n                        <Card.Text>{event.description}</Card.Text>\r\n                        <div className='mb-3'>\r\n                            {categories}\r\n                        </div>\r\n                        <Link to={\"/events/\" + event.id}>View more</Link>\r\n                        <Button color=\"outline-success\" onClick={() => this.join(event.id)} className=\"mt-3\" style={{ minWidth: \"100%\" }}>Join {event.price ? MoneyFormatter.fromatDollars(event.price):\"Free\"}</Button>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">\r\n                        <div>\r\n                            Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                        </div>\r\n                        <div>\r\n                            Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Col>\r\n\r\n        });\r\n\r\n        let toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            <div class=\"input-group-prepend\">\r\n                <button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n            </div>\r\n        </div>\r\n\r\n        return (<div>\r\n            <Row>\r\n                {toggler}\r\n            </Row>\r\n            <Row className=\"mt-3\">\r\n                {this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n            </Row>\r\n            <Row xs={1} md={4} className=\"g-3\">\r\n                {eventList}\r\n            </Row>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/me/to-join\",\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n        await this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n\r\n            <Button className=\"mb-3\"\r\n                onClick={this.clearFilter}\r\n                color=\"outline-secondary\">\r\n                Clear Filter\r\n            </Button>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n                <Multiselect\r\n                    options={this.state.options} // Options to display in the dropdown\r\n                    selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\r\n                    onSelect={this.onSelect} // Function will trigger on select event\r\n                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                    ref={this.state.multiselectRefTracker}\r\n                />\r\n\r\n                {/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n            </div>\r\n\r\n            <FormGroup className=\"mb-3\">\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        eventState=\"WAITING_FOR_START\"\r\n                        variant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Waiting\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"STARTED\"\r\n                        variant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Started\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"FINISHED\"\r\n                        variant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Finished\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"CLOSED\"\r\n                        variant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Closed\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-3\" >\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortField=\"name\"\r\n                        variant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"description\"\r\n                        variant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Description\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"startInstant\"\r\n                        variant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Start Instant\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"endInstant\"\r\n                        variant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        End Instant\r\n                    </ToggleButton>\r\n                </div>\r\n\r\n                <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortOrder=\"ASC\"\r\n                        variant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Ascend\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortOrder=\"DESC\"\r\n                        variant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Descend\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n                    <div style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterField=\"name\"\r\n                            variant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterField=\"description\"\r\n                            variant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Description\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterOperation=\"LIKE\"\r\n                            variant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Like\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterOperation=\"EQUAL\"\r\n                            variant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Equal\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n                        placeholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n                </div>\r\n            </FormGroup>\r\n        </Form >\r\n    }\r\n}\r\n\r\nexport default withRouter(MeEventsToJoin);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card, Row} from 'react-bootstrap'\r\nimport {Input} from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj; \r\n\r\nclass MePhotos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login : localStorage.getItem(\"login\"),\r\n            id : localStorage.getItem(\"id\"),\r\n            role : localStorage.getItem(\"role\"),\r\n            user: null,\r\n            isLoading: true,\r\n            }\r\n\r\n            this.upload = this.upload.bind(this)\r\n            this.setAvatar = this.setAvatar.bind(this)\r\n            this.removePhoto = this.removePhoto.bind(this)\r\n            \r\n            thisObj = this\r\n        }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"Get\",\r\n            url: \"/me\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n              },\r\n            success: function(data){\r\n                thisObj.setState({ user: data, isLoading: false  });\r\n                \r\n                Constants.updateRole(data.role)\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    setAvatar(event){\r\n        let photoInDto = {\r\n            id: event.target.getAttribute(\"photoId\")\r\n        }\r\n\r\n        $.ajax({\r\n            url: \"/me/avatar\",\r\n            method: \"PUT\",\r\n            data: JSON.stringify(photoInDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(){\r\n                window.location.reload ();\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n    }\r\n    \r\n    removePhoto(event){\r\n        let photoInDto = {\r\n            id: event.target.getAttribute(\"photoId\")\r\n        }\r\n\r\n        $.ajax({\r\n            url: \"/me/photos\",\r\n            method: \"DELETE\",\r\n            data: JSON.stringify(photoInDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(){\r\n                window.location.reload ();\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n\tupload(event) {\r\n\t\tlet target = event.target\r\n\t\tconsole.log(target)\r\n\t\tconst fileInput = document.querySelector(\"#userImages\");\r\n\t\tconst formData = new FormData();\r\n\r\n        for(let photo of fileInput.files){\r\n            formData.append('photos', photo);\r\n        }\r\n\t\r\n\t\tfetch(\"/resources/users/\" + this.state.id, {\r\n\t\t\tmethod: \"POST\",\r\n\t\t\tbody: formData,\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t}\r\n\t\t}).then(function(){\r\n            window.location.reload ();\r\n        });\r\n\t}\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n\t\tconst { user, isLoading } = this.state;\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <p>Loading...</p>;\r\n\t\t}\r\n\r\n        console.log(Boolean(this.state.login))\r\n        if(this.state.login == null || this.state.role == null || this.state.id == null){\r\n            return <div><h1>Unauthorized</h1></div>\r\n        }\r\n\r\n        console.log(this.state.user)\r\n\r\n\t\tconst photosList = this.state.user.photos.map(photo => {\r\n            return <Card border=\"light\"> \r\n                        <Card.Img src={\"/resources/users/\" + this.state.user.id + \"/photos/\" + photo.id} />\r\n                        <Button onClick={this.setAvatar} photoId={photo.id} variant=\"success\" className=\"mt-1\">Set as Avatar</Button>\r\n                        <Button onClick={this.removePhoto} photoId={photo.id} variant=\"danger\" className=\"mt-1\">Remove</Button>\r\n                    </Card>\r\n        })\r\n\r\n        const avatar = user.avatar !== null ?   <Card> \r\n                                                    <Card.Img src={\"/resources/users/\" + user.id + \"/photos/\" + user.avatar.id}/>\r\n                                                </Card> \r\n                                                : \"\"\r\n\r\n        return <div>\r\n                    <Input color=\"primary\" type=\"file\" name=\"image\" id={\"userImages\"} multiple/>\r\n                    <Button onClick={this.upload}> Upload</Button>\r\n                    <Row xs={1} md={3} className=\"g-4\">\r\n                        {photosList}\r\n                    </Row>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(MePhotos);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from \"jquery\"\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\n\r\nlet thisObj\r\n\r\nclass MeChangePersonalData extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            oldPassword: null,\r\n            newPassword: null,\r\n            newPasswordRepeat: null,\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.becomeArranger = this.becomeArranger.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n        $.ajax({\r\n            url: '/me/personalData',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(data){\r\n                thisObj.setState({ user: data });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let user = { ...this.state.user };\r\n\r\n        if(name === 'enabled'){\r\n            value = target.checked\r\n        }\r\n\r\n        user[name] = value;\r\n        this.setState({ user: user });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            firstName : this.state.user.firstName,\r\n            lastName :  this.state.user.lastName,\r\n            email : this.state.user.email\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/me/personalData',\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(data),\r\n            success: function(data){\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    becomeArranger() {\r\n        $.ajax({\r\n            url:\"/me/becomeArranger\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n              },\r\n            success: function(data){\r\n                ErrorHandler.runSuccess(data)\r\n                let waitingNotifier = \"<div class=\\\"badge bg-success\\\">Waiting for an approval of arranger becoming</div>\"\r\n                $(\"#arrangerBecoming\").html(waitingNotifier)\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    \r\n    handlePasswordChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n    \r\n    async handlePasswordSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            oldPassword : this.state.oldPassword,\r\n            newPassword :  this.state.newPassword,\r\n            newPasswordRepeat : this.state.newPasswordRepeat\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/me/password',\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(data),\r\n            success: function(data){\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        const { user: user } = this.state;\r\n        const title = <h2>Edit User {user.id}</h2>;\r\n\r\n        let arrangerBecoming = user.arrangerRoleRequested \r\n            ? <div class=\"badge bg-success\">Waiting for an approval of arranger becoming</div>\r\n            : Constants.isArrangerOrHigher(localStorage.getItem(\"role\")) ? \"\" : <Button color=\"success\" onClick={this.becomeArranger}>Become Arranger</Button>\r\n\r\n        return <div>\r\n            <Container>\r\n                {title}\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"email\">Email</Label>\r\n                        <Input type=\"text\" name=\"email\" id=\"email\" value={user.email || ''}\r\n                            onChange={this.handleChange} autoComplete=\"email\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"firstName\">First Name</Label>\r\n                        <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={user.firstName || ''}\r\n                            onChange={this.handleChange} autoComplete=\"firstName\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"lastName\">Last Name</Label>\r\n                        <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={user.lastName || ''}\r\n                            onChange={this.handleChange} autoComplete=\"lastName\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Button color=\"success\" type=\"submit\">Save</Button>{' '}\r\n                    </FormGroup>\r\n                </Form>\r\n                <Form onSubmit={this.handlePasswordSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"oldPassword\">Old Password</Label>\r\n                        <Input type=\"password\" name=\"oldPassword\" id=\"oldPassword\" value={this.state.oldPassword || ''}\r\n                            onChange={this.handlePasswordChange} autoComplete=\"oldPassword\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"newPassword\">New password</Label>\r\n                        <Input type=\"password\" name=\"newPassword\" id=\"newPassword\" value={this.state.newPassword || ''}\r\n                            onChange={this.handlePasswordChange} autoComplete=\"newPassword\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"newPasswordRepeat\">New Password Repeat</Label>\r\n                        <Input type=\"password\" name=\"newPasswordRepeat\" id=\"newPasswordRepeat\" value={this.state.newPasswordRepeat || ''}\r\n                            onChange={this.handlePasswordChange} autoComplete=\"newPasswordRepeat\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Button color=\"success\" type=\"submit\">Change password</Button>{' '}\r\n                    </FormGroup>\r\n                </Form>\r\n                <div class=\"mt-3\" id=\"arrangerBecoming\">\r\n                    {arrangerBecoming}\r\n                </div>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(MeChangePersonalData);","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nimport { Container, Alert, Input, Label } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport { Card } from 'react-bootstrap'\r\nimport $ from 'jquery'\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport { minWidth } from '@mui/system';\r\n\r\nvar Stomp = require('stompjs');\r\nvar SockJS = require(\"sockjs-client\");\r\n\r\nlet thisObj;\r\n\r\nclass MessengerCore extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            allMessages: [],\r\n            receivers: [],\r\n            filteredReceivers: [],\r\n            currentMessagesControls: [],\r\n            currentReceiver: null,\r\n            loginToIdMap: new Map(),\r\n            messageText: '',\r\n            filterName: \"\"\r\n        }\r\n\r\n        thisObj = this;\r\n        this.websocket = null;\r\n\r\n        this.pickDialog = this.pickDialog.bind(this);\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.changeFilterName = this.changeFilterName.bind(this);\r\n        this.filterReceivers = this.filterReceivers.bind(this);\r\n    }\r\n\r\n    filterReceivers() {\r\n        let filteredReceivers = this.state.receivers;\r\n\r\n        filteredReceivers = filteredReceivers.filter(item => {\r\n            return item.login.includes(this.state.filterName)\r\n        })\r\n\r\n        this.setState({ filteredReceivers: filteredReceivers })\r\n    }\r\n\r\n    changeFilterName(event) {\r\n        let value = event.target.value;\r\n        this.setState({ filterName: value }, () => this.filterReceivers())\r\n    }\r\n\r\n    render() {\r\n\r\n        let receiversControls = this.state.filteredReceivers.map(receiver => {\r\n\r\n            const avatar = receiver.avatarId !== null ? <div class=\"image-cropper\">\r\n                <img class='rounded' src={\"/resources/users/\" + receiver.id + \"/photos/\" + receiver.avatarId} />\r\n            </div>\r\n                : false\r\n            return <li class=\"nav-item m-1\">\r\n                <button style={{ minWidth: \"100%\", display: \"flex\", alignItems: \"center\", flexDirection: \"column\" }}\r\n                    class={receiver.login == this.state.currentReceiver ? \"btn btn-success\" : \"btn btn-outline-success\"} onClick={() => this.pickDialog(receiver.login)}>{avatar}{receiver.login}</button>\r\n            </li>\r\n        });\r\n\r\n        return <Container fluid>\r\n            <Row>\r\n                <Col md=\"2\" className='border p-3'>\r\n                    <Label className='mb-1'>Receivers</Label>\r\n                    <Input onChange={this.changeFilterName} className=\"mb-3\" placeholder='Login'></Input>\r\n                    <div class=\"receiversScroller border\">\r\n                        <ul class=\"nav flex-column flex-nowrap\">\r\n                            {receiversControls}\r\n                        </ul>\r\n                    </div>\r\n                </Col>\r\n                <Col className='border p-3 ms-3'>\r\n                    <h3><Link className=\"text-success\" to={`/guest/${this.state.currentReceiver}`}>{this.state.currentReceiver}</Link></h3>\r\n                    <div class=\"messagesScroller border\" >\r\n                        <ul class=\"nav flex-column\">\r\n                            {this.state.currentMessagesControls}\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"input-group\">\r\n                        <input type=\"text\" class=\"form-control\" name=\"messageText\" value={this.state.messageText} onChange={this.handleChange}\r\n                            onKeyPress={event => {\r\n                                if (event.key === 'Enter') {\r\n                                    this.sendMessage()\r\n                                }\r\n                            }} />\r\n                        <div class=\"input-group-append\" style={{minWidth:\"20%\"}}>\r\n                            <button type=\"button\" class=\"btn btn-outline-success\" style={{minWidth:\"100%\"}} onClick={this.sendMessage}>Send</button>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </Container >\r\n    }\r\n\r\n    componentDidMount() {\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }\r\n\r\n        axios.get('/message/receivers', config)\r\n            .then(res => {\r\n\r\n                res.data.receivers.map(receiver => {\r\n                    this.state.loginToIdMap.set(receiver.login, receiver.id)\r\n                })\r\n\r\n\r\n                this.setState({ receivers: res.data.receivers }, () => this.filterReceivers())\r\n\r\n            })\r\n\r\n        axios.get('/message', config)\r\n            .then(res => {\r\n                this.setState({\r\n                    allMessages: res.data.messages\r\n                })\r\n            })\r\n\r\n        var socket = new SockJS('/ws/messages');\r\n        let stompWebsocket = Stomp.over(socket);\r\n        this.websocket = stompWebsocket;\r\n\r\n        this.websocket.connect({ \"X-Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\") }, function (frame) {\r\n            stompWebsocket.subscribe('/topic/users/' + localStorage.getItem(\"id\"), function (data) {\r\n                let messages = thisObj.state.allMessages;\r\n\r\n                let message = JSON.parse(data.body);\r\n                message.creationTime = new Date(message.creationTime).getTime() / 1000;\r\n                messages.push(message)\r\n\r\n\r\n                thisObj.setState({ allMessages: messages })\r\n                thisObj.pickDialog(thisObj.state.currentReceiver)\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    sendMessage() {\r\n        let config = {\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }\r\n        console.log(this.state.loginToIdMap)\r\n\r\n        const dto = {\r\n            text: this.state.messageText\r\n        }\r\n\r\n        this.websocket.send(\"/app/receivers/\" + this.state.loginToIdMap.get(this.state.currentReceiver), {}, JSON.stringify(dto))\r\n\r\n        // ErrorHandler.runStringMessage(\"Message was sent to \" + this.state.currentReceiver);\r\n\r\n        this.setState({ messageText: '' }, () => {\r\n            let messages = thisObj.state.allMessages;\r\n            let newMessage = {\r\n                text: dto.text,\r\n                receiver: {\r\n                    login: thisObj.state.currentReceiver\r\n                },\r\n                sender: {\r\n                    login: localStorage.getItem(\"login\")\r\n                },\r\n                creationTime: new Date().getTime() / 1000\r\n            }\r\n\r\n            console.log(newMessage)\r\n            console.log(messages)\r\n            messages.push(newMessage)\r\n            thisObj.setState({ allMessages: messages }, () => {\r\n                thisObj.pickDialog(thisObj.state.currentReceiver)\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    pickDialog(anotherUserLogin) {\r\n        console.log(\"dialog was picked\")\r\n        const currentMessagesControls = this.state.allMessages\r\n            .filter(message => {\r\n                return (message.receiver.login == anotherUserLogin && message.sender.login == localStorage.getItem(\"login\")\r\n                    || message.sender.login == anotherUserLogin && message.receiver.login == localStorage.getItem(\"login\"))\r\n\r\n            })\r\n            .sort((a, b) => a.creationTime - b.creationTime)\r\n            .map(message => {\r\n                let creationTime = new Date(message.creationTime * 1000);\r\n\r\n\r\n                return <li class=\"nav-item mt-1\">\r\n                    {message.receiver.login == anotherUserLogin\r\n                        ?\r\n                        <div class=\"border-bottom p-2\" style={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                            <div>\r\n                                <div class=\"text-secondary\" style={{ display: \"flex\", justifyContent: \"right\" }}>\r\n                                    <span>{creationTime.toLocaleString()}</span>\r\n                                </div>\r\n                                <div>\r\n                                    <span >{message.text}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div class=\"border-bottom p-2\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n                            <div>\r\n                                <span class=\"text-secondary\">{creationTime.toLocaleString()}</span>\r\n                                <div>\r\n                                    <span >{message.text}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                </li>\r\n            });\r\n\r\n\r\n        this.setState({\r\n            currentMessagesControls: currentMessagesControls,\r\n            currentReceiver: anotherUserLogin,\r\n        }, () => {\r\n            let scroller = document.getElementsByClassName(\"messagesScroller\")[0];\r\n            scroller.scrollTop = scroller.scrollHeight;\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n}\r\n\r\nexport default MessengerCore","import React from \"react\";\r\nimport $ from 'jquery';\r\nimport AppNavbar from \"./AppNavbar\";\r\nimport ErrorHandler from './Handler/ErrorHandler';\r\nimport ErrorNotifier from \"./Handler/ErrorNotifier\";\r\nimport { Button } from \"reactstrap\";\r\n\r\nvar jwt = require('jsonwebtoken');\r\nconst roleUser = \"ROLE_USER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\n\r\nconst authAddress = \"/auth\"\r\n\r\nclass AuthForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            login: \"\",\r\n            password: \"\",\r\n\t\t\trecoverMode: false\r\n        }\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n\t\tthis.recoverPassword = this.recoverPassword.bind(this);\r\n    }\r\n\r\n    handleChange(event) {\r\n\t\tconst target = event.target;\r\n\t\tconst value = target.value\r\n\t\tconst name = target.name\r\n\r\n\t\tthis.setState({\r\n\t\t\t[name]: value\r\n\t\t});\r\n\t}\r\n\r\n    handleSubmit(event) {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tif(this.state.recoverMode){\r\n\t\t\tlet data = {\r\n\t\t\t\tlogin: this.state.login,\r\n\t\t\t\ttype: \"FORGOTTEN_PASSWORD\"\r\n\t\t\t}\r\n\r\n\t\t\t$.ajax({\r\n\t\t\t\tmethod: \"POST\",\r\n\t\t\t\turl: \"/support\",\r\n\t\t\t\tcontentType: \"application/json\",\r\n\t\t\t\tdata: JSON.stringify(data),\r\n\t\t\t\tsuccess: function(data){\r\n\t\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t\t},\r\n\t\t\t\terror: function(data){\r\n\t\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\r\n\t\tlet props = this.props;\r\n\t\t\r\n\t\t$.ajax({\r\n\t\t\turl: authAddress,\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"post\",\r\n\t\t\tdata: JSON.stringify(this.state),\r\n            statusCode: {\r\n                200: function(data, textStatus, xhr){\r\n                    localStorage.setItem('accessToken', data.accessToken);\r\n                    localStorage.setItem('tokenType', data.tokenType);\r\n                    localStorage.setItem('expiresIn', data.expiresIn);\r\n\r\n\t\t\t\t\tlet decodedToken = jwt.decode(data.accessToken);\r\n\t\t\t\t\tconsole.log(decodedToken)\r\n                    localStorage.setItem('login', decodedToken.sub);\r\n                    localStorage.setItem('role', decodedToken.role);\r\n                    localStorage.setItem('id', decodedToken.id);\r\n\r\n\t\t\t\t\tif(localStorage.getItem('role') === roleUser){\r\n\t\t\t\t\t\tprops.history.push('/me');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(localStorage.getItem('role') === roleAdmin){\r\n\t\t\t\t\t\tprops.history.push('/admin');\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif(localStorage.getItem('role') === roleArranger){\r\n\t\t\t\t\t\tprops.history.push('/arranger');\r\n\t\t\t\t\t}\r\n                }\r\n            },\r\n\t\t\terror: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n\t\t})\r\n\t}\r\n\r\n\trecoverPassword(){\r\n\t\tthis.setState({recoverMode: !this.state.recoverMode})\r\n\t}\r\n\r\n    render(){\r\n        \r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar/>\r\n\t\t\t\t<div class=\"container\">\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit}>\t\t\t\t\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Login</label>\r\n\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"login\" value={this.state.login} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t{this.state.recoverMode? \"\":\r\n\t\t\t\t\t\t<div class=\"form-group mb-2\">\r\n\t\t\t\t\t\t\t<label class=\"form-label\">Password</label>\r\n\t\t\t\t\t\t\t<input type=\"password\" class=\"form-control\"\r\n\t\t\t\t\t\t\t\tname=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n\t\t\t\t\t\t</div>}\r\n\r\n\t\t\t\t\t\t<div className=\"d-grid gap-2\">\r\n\t\t\t\t\t\t\t<Button class=\"btn btn-success mt-3\" color=\"success\">{this.state.recoverMode? \"Send email\" : \"Log in\"}</Button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div className=\"d-grid gap-2 mt-3\" id=\"passwordRecoveringStart\">\r\n\t\t\t\t\t\t<button class=\"btn btn-warning\" onClick={this.recoverPassword}>{this.state.recoverMode? \"Have you remind your password?\" \r\n\t\t\t\t\t\t: \"Have you forgotten your password?\"}</button>\r\n\t\t\t\t\t\t{this.state.recoverMode?\r\n\t\t\t\t\t\t<span class='badge bg-success mt-3'>Enter your login and a message will be sent to your email</span>\r\n\t\t\t\t\t\t: \"\"}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n                <ErrorNotifier />\r\n\t\t\t</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AuthForm","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label,  } from 'reactstrap';\r\nimport AppNavbar from './AppNavbar';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport $ from 'jquery';\r\nimport ErrorNotifier from './Handler/ErrorNotifier';\r\nimport Constants from './Const/Constants';\r\n\r\nconst address = \"/events/arrange\"\r\n\r\nclass CreateEventForm extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            event: {\r\n                name: \"\",\r\n                description: \"\",\r\n                place: \"\",\r\n                categoriesNames: [\"\"],\r\n                startInstant: \"\",\r\n                endInstant: \"\",\r\n            }\r\n        }\r\n\r\n\t\tthis.handleChange = this.handleChange.bind(this);\r\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let event = { ...this.state.event };\r\n\r\n        if(name == \"categoriesNames\"){\r\n            value = value.split(',')\r\n        }\r\n\r\n        event[name] = value;\r\n        this.setState({ event: event });\r\n\t}\r\n\r\n    handleSubmit(event) {\r\n\t\t$.ajax({\r\n\t\t\turl: address,\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"post\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n              },\r\n\t\t\tdata: JSON.stringify(this.state.event),\r\n\t\t})\r\n\t\tevent.preventDefault();\r\n\t}\r\n\r\n    render(){\r\n        const { event: event } = this.state;\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isArrangerOrHigher((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        return <div>\r\n        <AppNavbar />\r\n        <Container>\r\n            <Form onSubmit={this.handleSubmit}>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"name\">Name</Label>\r\n                    <Input type=\"text\" name=\"name\" id=\"name\" value={event.name || ''}\r\n                        onChange={this.handleChange} autoComplete=\"event\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"description\">Description</Label>\r\n                    <Input type=\"text\" name=\"description\" id=\"description\" value={event.description || ''}\r\n                        onChange={this.handleChange} autoComplete=\"description\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"place\">Place</Label>\r\n                    <Input type=\"text\" name=\"place\" id=\"place\" value={event.place || ''}\r\n                        onChange={this.handleChange} autoComplete=\"place\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"categoriesNames\">Categories (separated by comma ',' )</Label>\r\n                    <Input type=\"text\" name=\"categoriesNames\" id=\"categoriesNames\" value={event.categoriesNames || ''}\r\n                        onChange={this.handleChange} autoComplete=\"categoriesNames\" />\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"startInstant\">Starts at</Label>\r\n                    <DatePicker\r\n                            name = \"startInstant\"\r\n                            dateFormat=\"DD-MM-YYYY\"\r\n                            timeFormat=\"HH:mm\"\r\n                            onChange={val => this.state.event.startInstant = val}>\r\n\r\n                            </DatePicker>\r\n                </FormGroup>\r\n                <FormGroup className=\"mt-3\">\r\n                    <Label for=\"endInstant\">Finishes at</Label>\r\n                    <DatePicker\r\n                            name = \"endInstant\"\r\n                            dateFormat=\"DD-MM-YYYY\"\r\n                            timeFormat=\"HH:mm\"\r\n                            onChange={val => this.state.event.endInstant = val}>\r\n\r\n                            </DatePicker>\r\n                </FormGroup>\r\n                \r\n                <FormGroup className=\"mt-3\">\r\n                    <Button color=\"primary\" type=\"submit\">Save</Button>{' '}\r\n                    <Button color=\"secondary\" tag={Link} to=\"/\">Cancel</Button>\r\n                </FormGroup>\r\n            </Form>\r\n        </Container>\r\n    </div>\r\n    }\r\n}\r\n\r\nexport default CreateEventForm","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport {Badge, Button} from 'react-bootstrap';\r\nimport MeEventsToJoin from './MeEventsToJoin';\r\nimport {Container} from 'react-bootstrap'\r\nimport $ from 'jquery';\r\nimport AppNavbar from '../AppNavbar';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\n\r\nclass JoinEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n        return (\r\n            <div>\r\n                <AppNavbar/>\r\n                <Container fluid>\r\n                    <MeEventsToJoin/>\r\n                </Container>\r\n                <ErrorNotifier/>\r\n            </div>\r\n\t\t);\r\n    }\r\n}\r\n\r\nexport default withRouter(JoinEvents);","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Alert } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport MePage from './MePage';\r\nimport MeJoinedEvents from './MeJoinedEvents';\r\nimport MeEventsToJoin from './MeEventsToJoin';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport MePhotos from './MePhotos';\r\nimport MeChangePresonalData from './MeChangePresonalData';\r\nimport MessengerCore from '../Messanger/MessengerCore';\r\n\r\nclass PersonalPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: '1'\r\n        };\r\n        \r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs=\"4\">\r\n                            <MePage />\r\n                        </Col>\r\n\r\n                        <Col xs=\"8\">\r\n                            <div>\r\n                                <Nav tabs>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '1' })}\r\n                                            onClick={() => { this.toggle('1'); }}\r\n                                        >\r\n                                            Joined Events\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                                            onClick={() => { this.toggle('2'); }}\r\n                                        >\r\n                                            Events To Join\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '3' })}\r\n                                            onClick={() => { this.toggle('3'); }}\r\n                                        >\r\n                                            Photos\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '4' })}\r\n                                            onClick={() => { this.toggle('4'); }}\r\n                                        >\r\n                                            Personal Data\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '5' })}\r\n                                            onClick={() => { this.toggle('5'); }}\r\n                                        >\r\n                                            Messenger\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <TabContent activeTab={this.state.activeTab}>\r\n                                    <TabPane tabId=\"1\">\r\n                                        <MeJoinedEvents/>\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"2\">\r\n                                        <MeEventsToJoin/>\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"3\">\r\n                                        <MePhotos/>\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"4\">\r\n                                        <MeChangePresonalData/>\r\n                                    </TabPane>\r\n                                    <TabPane tabId=\"5\">\r\n                                        <MessengerCore/>\r\n                                    </TabPane>\r\n                                </TabContent>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <ErrorNotifier />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PersonalPage;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Col, Row } from 'react-bootstrap';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport style from \"../style.css\"\r\nimport { Card, CardGroup, Alert, ToggleButton } from 'react-bootstrap'\r\n\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nclass AdminPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToEvents = this.goToEvents.bind(this);\r\n        this.goToCategories = this.goToCategories.bind(this);\r\n        this.goToUsers = this.goToUsers.bind(this);\r\n        this.goToProps = this.goToProps.bind(this);\r\n        this.goToPropOrders = this.goToPropOrders.bind(this);\r\n    }\r\n\r\n    goToEvents() {\r\n        this.props.history.push('/event-management/events')\r\n    }\r\n\r\n    goToCategories() {\r\n        this.props.history.push('/category-management/categories')\r\n    }\r\n\r\n    goToUsers() {\r\n        this.props.history.push('/user-management/users')\r\n    }\r\n\r\n    goToProps() {\r\n        this.props.history.push('/prop-management/props')\r\n    }\r\n\r\n    goToPropOrders() {\r\n        this.props.history.push('/prop-management/propOrders')\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <div class=\"adminConsole\">\r\n                        <Card onClick={this.goToEvents}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/party.jpg\"} className=\"mt-0 events\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Events</Card.Title>\r\n                                <Card.Text>A section where you can administrate events</Card.Text>\r\n                                {/* <Button variant=\"outline-success\" onClick={this.goToEvents} style={{minWidth: \"100%\"}}>\r\n                                    Events\r\n                                </Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToCategories}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/wordCloud.png\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Categories</Card.Title>\r\n                                <Card.Text>Want to add a category? Here we go!</Card.Text>\r\n                                {/* <Button variant=\"outline-success\" onClick={this.goToCategories} style={{minWidth: \"100%\"}}>\r\n                                    Categories\r\n                                </Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToUsers}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/people.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Users</Card.Title>\r\n                                <Card.Text>Did you really think that you would not find it here? Eh?</Card.Text>\r\n                                {/* <Button variant=\"outline-success\" onClick={this.goToUsers} style={{minWidth: \"100%\"}}>\r\n                                    Users\r\n                                </Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToProps}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/props.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Props</Card.Title>\r\n                                <Card.Text>Props, Stormtroopers, Paratroopers so on and so on...</Card.Text>\r\n                                {/* <Button variant=\"outline-success\" onClick={this.goToProps} style={{minWidth: \"100%\"}}>\r\n                                    Props\r\n                                </Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToPropOrders}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/orders.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Prop Orders</Card.Title>\r\n                                <Card.Text>Smooth routine is going to be here</Card.Text>\r\n                                {/* <Button variant=\"outline-success\" onClick={this.goToProps} style={{minWidth: \"100%\"}}>\r\n                                    Props\r\n                                </Button> */}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AdminPage;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container, Col, Row} from 'react-bootstrap';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport { Card, CardGroup, Alert, ToggleButton } from 'react-bootstrap'\r\n\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nclass ArrangerPage extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.goToArrangedEvents = this.goToArrangedEvents.bind(this);\r\n        this.goToEventArrangement = this.goToEventArrangement.bind(this);\r\n        this.goToPropsMarket = this.goToPropsMarket.bind(this)\r\n        this.goToOrderedProps = this.goToOrderedProps.bind(this)\r\n    }\r\n\r\n    goToArrangedEvents(){\r\n        this.props.history.push('/arranger/arranged')\r\n    }\r\n\r\n    goToEventArrangement(){\r\n        this.props.history.push('/arranger/arrangement')\r\n    }\r\n\r\n    goToPropsMarket(){\r\n        this.props.history.push('/arranger/props/market')\r\n    }\r\n    \r\n    goToOrderedProps(){\r\n        this.props.history.push('/arranger/props/ordered')\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || (localStorage.getItem(\"role\") !== roleArranger && localStorage.getItem(\"role\") !== roleAdmin) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n        \r\n        return (\r\n        <div>\r\n            <AppNavbar/>\r\n            <Container fluid>\r\n            <div class=\"adminConsole\">\r\n                        <Card onClick={this.goToArrangedEvents}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/arrangedEvents.png\"} className=\"mt-0 events\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Arranged Events</Card.Title>\r\n                                <Card.Text>Events you decided to arrange, hm...</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToEventArrangement}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/arrangement.webp\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Event arrangement</Card.Title>\r\n                                <Card.Text>Do you want to arrange a new event, Eh?</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToPropsMarket}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/market.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Props Market</Card.Title>\r\n                                <Card.Text>Bits and pieces</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToOrderedProps}>\r\n                            <Card.Img variant=\"top\" style={{minWidth: \"100%\"}} src={\"/orderedProps.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Ordered Props</Card.Title>\r\n                                <Card.Text>Your props, at your service!</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                    {/* <div className=\"d-grid gap-2\">\r\n                        <Button variant=\"success\" onClick={this.goToArrengedEvents}>\r\n                            Arranged events\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.goToEventArrangement}>\r\n                            Arrange Event\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.goToPropsMarket}>\r\n                            Props Market\r\n                        </Button>\r\n                        <Button variant=\"success\" onClick={this.goToOrderedProps}>\r\n                            Ordered Props\r\n                        </Button>\r\n                    </div> */}\r\n            </Container>\r\n            <ErrorNotifier/>\r\n        </div>\r\n        );\r\n  }\r\n}\r\n\r\nexport default ArrangerPage;","import axios from \"axios\"\r\nimport { map } from \"jquery\"\r\nimport React from \"react\"\r\nimport { Table, Button, Input, Container, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap'\r\nimport AppNavbar from '../../AppNavbar'\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier'\r\nimport { useHistory } from 'react-router-dom';\r\nimport MoneyFormatter from '../../Formatter/MoneyFormatter'\r\nimport ErrorHandler from \"../../Handler/ErrorHandler\"\r\nimport classnames from 'classnames';\r\nimport $ from \"jquery\"\r\nimport Waiter from \"../../Waiter\"\r\nimport { toHaveStyle } from \"@testing-library/jest-dom/dist/matchers\"\r\n\r\nDate.prototype.addDays = function (days) {\r\n    var dat = new Date(this.valueOf())\r\n    dat.setDate(dat.getDate() + days);\r\n    return dat;\r\n}\r\n\r\nfunction getDates(startDate, stopDate) {\r\n    var dateArray = new Array();\r\n    var currentDate = startDate;\r\n    while (currentDate <= stopDate) {\r\n        dateArray.push(currentDate)\r\n        currentDate = currentDate.addDays(1);\r\n    }\r\n    return dateArray;\r\n}\r\n\r\nclass ArrangementProps extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            props: [],\r\n            isLoading: true,\r\n            cart: [],\r\n            daysMap: new Map(),\r\n            costTypeMap: new Map(),\r\n            piecesMap: new Map(),\r\n            activeTab: \"1\"\r\n        }\r\n\r\n        this.addToCart = this.addToCart.bind(this)\r\n        this.removeFromCart = this.removeFromCart.bind(this)\r\n        this.addToDays = this.addToDays.bind(this)\r\n        this.removeFromDays = this.removeFromDays.bind(this)\r\n        this.purchase = this.purchase.bind(this)\r\n        this.handlePiecesChange = this.handlePiecesChange.bind(this)\r\n        this.getAllProps = this.getAllProps.bind(this)\r\n        this.toggle = this.toggle.bind(this);\r\n        this.clearCart = this.clearCart.bind(this);\r\n    }\r\n\r\n    clearCart() {\r\n        this.setState({\r\n            cart: []\r\n        })\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    addToCart(event) {\r\n        let propId = event.target.value;\r\n        let updatedCart = this.state.cart;\r\n        updatedCart.push(propId);\r\n        this.setState({ cart: updatedCart })\r\n    }\r\n\r\n    removeFromCart(event) {\r\n        let propId = event.target.value;\r\n        let updatedCart = this.state.cart;\r\n        let foundIndex = updatedCart.find((prop) => {\r\n            return prop.id == propId;\r\n        })\r\n        updatedCart.splice(foundIndex, 1)\r\n        this.setState({ cart: updatedCart })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <Waiter />\r\n        }\r\n\r\n        let props = this.state.props.map((prop) => {\r\n            let removeButton = <Button style={{ minWidth: \"100%\" }}\r\n                color=\"danger\" value={prop.id} onClick={this.removeFromCart}>\r\n                Remove from cart\r\n            </Button>\r\n\r\n            let addButton = <Button style={{ minWidth: \"100%\" }}\r\n                color=\"success\" value={prop.id} onClick={this.addToCart}>\r\n                Add to cart\r\n            </Button>\r\n\r\n            let isAddedToCart = this.state.cart.includes(prop.id.toString())\r\n\r\n            return <tr key={prop.id}>\r\n                <td style={{ whiteSpace: 'nowrap' }}>{prop.name}</td>\r\n                <td>{prop.description}</td>\r\n                <td>{MoneyFormatter.fromatDollars(prop.cost)}</td>\r\n                <td><span style={{ minWidth: \"100%\" }} class={\"badge \" + (prop.costType == \"PIECE\" ? \"bg-success\" : \"bg-warning text-dark\")}>{prop.costType}</span></td>\r\n                <td><span style={{ minWidth: \"100%\" }} class={\"badge \" + (prop.propType == \"PLACE\" ? \"bg-success\" : \"bg-warning text-dark\")}>{prop.propType}</span></td>\r\n                <td>{isAddedToCart ? removeButton : addButton}</td>\r\n            </tr>\r\n        })\r\n\r\n        let totalCost = 0;\r\n\r\n        let cartProps = this.state.cart\r\n            .map((propId) => {\r\n                return this.state.props.find(prop => prop.id == propId);\r\n            })\r\n            .map((prop) => {\r\n                let now = new Date();\r\n\r\n                let daysArray = getDates(new Date(), new Date().addDays(31))\r\n\r\n                let orderedDays = prop.propOrders.map((order) => new Date(order.orderedDate).toLocaleDateString())\r\n\r\n                let days = daysArray.map((day) => {\r\n                    let orderedButton = <Button propId={prop.id} color=\"danger\" style={{ margin: 1 }}>{day.toLocaleDateString()}</Button>\r\n                    let removeFromDaysButton = <Button propId={prop.id} color=\"success\" style={{ margin: 1 }} onClick={this.removeFromDays} value={day.toLocaleDateString()}>{day.toLocaleDateString()}</Button>;\r\n                    let addToDaysButton = <Button propId={prop.id} color=\"warning\" style={{ margin: 1 }} onClick={this.addToDays} value={day.toLocaleDateString()}>{day.toLocaleDateString()}</Button>\r\n\r\n                    if (orderedDays.includes(day.toLocaleDateString())) {\r\n                        return orderedButton\r\n                    }\r\n\r\n                    if (!this.state.daysMap.get(prop.id.toString())) {\r\n                        return addToDaysButton\r\n                    }\r\n\r\n                    return this.state.daysMap.get(prop.id.toString()).includes(day.toLocaleDateString())\r\n                        ? removeFromDaysButton\r\n                        : addToDaysButton\r\n                })\r\n\r\n                let orderedDaysAmount = this.state.daysMap.get(prop.id.toString());\r\n                if (orderedDaysAmount) {\r\n                    orderedDaysAmount = orderedDaysAmount.length\r\n                } else {\r\n                    orderedDaysAmount = 0\r\n                }\r\n\r\n                let piecesAmount = this.state.piecesMap.get(prop.id.toString());\r\n                if (!piecesAmount) {\r\n                    piecesAmount = 0\r\n                }\r\n\r\n                totalCost += prop.costType == \"DAY\" ? prop.cost * orderedDaysAmount : prop.cost * piecesAmount\r\n                return <tr key={prop.id}>\r\n                    <td style={{ whiteSpace: 'nowrap' }}>{prop.name}</td>\r\n                    <td>{MoneyFormatter.fromatDollars(prop.cost)}</td>\r\n                    <td><span class={\"badge \" + (prop.costType == \"PIECE\" ? \"bg-success\" : \"bg-warning\")}>{prop.costType}</span></td>\r\n                    <td><Input propId={prop.id} placeholder=\"Comment\" id={`comment-${prop.id}`}></Input></td>\r\n                    {prop.costType == \"DAY\" ? <td>{days}</td> : <td><Input onChange={this.handlePiecesChange} propId={prop.id}\r\n                        value={this.state.piecesMap.get(prop.id.toString())} placeholder=\"Amount\"></Input></td>}\r\n                </tr>\r\n            })\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <div className=\"p-3\">\r\n                    <Nav tabs >\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                onClick={() => { this.toggle('1'); }}\r\n                            >\r\n                                Market 🏪\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '2' })}\r\n                                onClick={() => { this.toggle('2'); }}\r\n                            >\r\n                                Cart 🛒\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <TabContent activeTab={this.state.activeTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            <Table className=\"mt-4\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th width=\"15%\">Name</th>\r\n                                        <th width=\"40%\">Description</th>\r\n                                        <th width=\"10%\">Cost</th>\r\n                                        <th width=\"10%\">Cost Type</th>\r\n                                        <th width=\"10%\">Prop Type</th>\r\n                                        <th width=\"20%\">Operations</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {props}\r\n                                </tbody>\r\n                            </Table>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <h3 className=\"mt-4\">Total cost {MoneyFormatter.fromatDollars(totalCost)}</h3>\r\n                            <Table className=\"mt-1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th width=\"10%\">Name</th>\r\n                                        <th width=\"7%\">Cost</th>\r\n                                        <th width=\"5%\">Pay for</th>\r\n                                        <th width=\"20%\">Comment</th>\r\n                                        <th width=\"35%\">Order</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {cartProps}\r\n                                </tbody>\r\n                            </Table>\r\n                            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mt-3\">\r\n                                <Button className=\"\" style={{ minWidth: \"45%\" }}\r\n                                    color=\"success\" onClick={this.purchase} disabled={totalCost == 0 || totalCost > localStorage.getItem(\"cents\")}>Purchase</Button>\r\n                                <Button className=\"ms-3\" style={{ minWidth: \"45%\" }}\r\n                                    color=\"warning\" onClick={this.clearCart} disabled={this.state.cart.length == 0}>Clear Cart</Button>\r\n                            </div>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </div>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAllProps();\r\n    }\r\n\r\n    getAllProps() {\r\n        axios({\r\n            method: 'get',\r\n            url: '/props',\r\n            headers: {\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then((res) => {\r\n            res.data.props.map(prop => {\r\n                this.state.costTypeMap.set(prop.id.toString(), prop.costType)\r\n            })\r\n\r\n            this.setState({ props: res.data.props, isLoading: false })\r\n        })\r\n    }\r\n\r\n    addToDays(event) {\r\n        let day = event.target.value;\r\n        let propId = event.target.attributes.propId.value;\r\n        let daysMap = this.state.daysMap;\r\n\r\n        let propDays = daysMap.get(propId)\r\n        if (propDays == null) {\r\n            propDays = [day];\r\n        } else {\r\n            propDays.push(day);\r\n        }\r\n        daysMap.set(propId, propDays)\r\n        this.setState({ daysMap: daysMap })\r\n    }\r\n\r\n    removeFromDays(event) {\r\n        let day = event.target.value;\r\n        let propId = event.target.attributes.propId.value;\r\n        let daysMap = this.state.daysMap\r\n        let foundIndex = daysMap.get(propId).findIndex((item) => {\r\n            return item == day\r\n        });\r\n\r\n        daysMap.get(propId).splice(foundIndex, 1)\r\n\r\n        this.setState({ daysMap: daysMap })\r\n    }\r\n\r\n    purchase() {\r\n        this.state.cart.map(id => {\r\n            let dto\r\n            if (this.state.costTypeMap.get(id) == \"DAY\") {\r\n                dto = {\r\n                    orderedDays: this.state.daysMap.get(id),\r\n                    comment: $(`#comment-${id}`).val()\r\n                }\r\n                if (!dto.orderedDays) {\r\n                    return;\r\n                }\r\n            }\r\n            if (this.state.costTypeMap.get(id) == \"PIECE\") {\r\n                dto = {\r\n                    pieces: this.state.piecesMap.get(id),\r\n                    comment: $(`#comment-${id}`).val()\r\n                }\r\n                if (!dto.pieces) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            axios({\r\n                method: 'post',\r\n                url: `/props/${id}/orders`,\r\n                headers: {\r\n                    'Content-Type': \"application/json\",\r\n                    'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                },\r\n                data: JSON.stringify(dto)\r\n            }).then((res) => {\r\n                // window.location.replace(\"/arranger/props/ordered\")\r\n            }).catch((err) => {\r\n                ErrorHandler.runErrorStringMessage(\"Not enough amount of money\")\r\n            })\r\n        })\r\n\r\n        this.forceUpdate()\r\n    }\r\n\r\n    handlePiecesChange(event) {\r\n        let amount = event.target.value;\r\n        let propId = event.target.attributes.propId.value;\r\n        let map = this.state.piecesMap;\r\n        map.set(propId, amount)\r\n\r\n        this.setState({ piecesMap: map })\r\n    }\r\n}\r\n\r\nexport default ArrangementProps","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, TabContent, TabPane, Nav, NavItem, NavLink, InputGroup, Row, Col } from 'reactstrap';\r\nimport { Badge } from \"react-bootstrap\"\r\nimport AppNavbar from '../AppNavbar';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport classnames from 'classnames';\r\nimport ArrangementProps from './PropsForArrangement/ArrangementProps';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nconst address = \"/arranger/arrangement\"\r\n\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass EventArrangement extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: {\r\n                name: \"\",\r\n                description: \"\",\r\n                place: \"\",\r\n                categoriesNames: [],\r\n                startInstant: \"\",\r\n                endInstant: \"\",\r\n            },\r\n            categories: [],\r\n            props: [],\r\n            activeTab: '1'\r\n        }\r\n\r\n        thisObj = this\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.addCategory = this.addCategory.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ categories: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let event = { ...this.state.event };\r\n\r\n        if (name == \"categoriesNames\") {\r\n            value = value.split(',')\r\n        }\r\n\r\n        event[name] = value;\r\n        this.setState({ event: event });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let arrangedEvent = {\r\n            name: this.state.event.name,\r\n            description: this.state.event.description,\r\n            place: this.state.event.place,\r\n            startInstant: this.state.event.startInstant,\r\n            endInstant: this.state.event.endInstant,\r\n            price: this.state.event.price,\r\n            categoriesNames: this.state.event.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        $.ajax({\r\n            url: address,\r\n            contentType: \"application/json; charset=UTF-8\",\r\n            method: \"post\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(arrangedEvent),\r\n            success: function (data) {\r\n                thisObj.props.history.push('/arranger')\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    addCategory(name) {\r\n        let event = this.state.event\r\n        event.categoriesNames.push(name)\r\n\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let event = this.state.event;\r\n        event.categoriesNames.push(selectedItem.name);\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let event = this.state.event;\r\n\r\n        event.categoriesNames = event.categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || (localStorage.getItem(\"role\") !== roleArranger && localStorage.getItem(\"role\") !== roleAdmin)\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const { event: event } = this.state;\r\n\r\n        const admittedCategories = this.state.categories.map(category => {\r\n            return <Badge className=\"bg bg-info m-1\" onClick={() => this.addCategory(category.name)}>{category.name}</Badge>\r\n        });\r\n\r\n        console.log(admittedCategories)\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={event.name || ''}\r\n                            onChange={this.handleChange} autoComplete=\"event\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={event.description || ''}\r\n                            onChange={this.handleChange} autoComplete=\"description\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"place\">Place</Label>\r\n                        <Input type=\"text\" name=\"place\" id=\"place\" value={event.place || ''}\r\n                            onChange={this.handleChange} autoComplete=\"place\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"price\">Price in Cents</Label>\r\n                        <Input type=\"number\" name=\"price\" id=\"price\" value={event.price || ''}\r\n                            onChange={this.handleChange} autoComplete=\"price\" />\r\n                    </FormGroup>\r\n                    <Row>\r\n                        <Col md=\"8\">\r\n                            <FormGroup className=\"mt-3\">\r\n                                <div>\r\n                                <Label>Categories</Label>\r\n                                <Multiselect\r\n                                    options={this.state.categories} // Options to display in the dropdown\r\n                                    selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                                    onSelect={this.onSelect} // Function will trigger on select event\r\n                                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                                />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{\"display\":\"flex\", justifyContent:\"right\"}}>\r\n                                        <Label for=\"startInstant\">Starts at</Label>\r\n                                        <DatePicker className='ms-5'\r\n                                            name=\"startInstant\"\r\n                                            dateFormat=\"DD-MM-YYYY\"\r\n                                            timeFormat=\"HH:mm\"\r\n                                            onChange={val => this.state.event.startInstant = val}>\r\n                                        </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{\"display\":\"flex\", justifyContent:\"right\"}}>\r\n                                    <Label for=\"endInstant\">Finishes at</Label>\r\n                                    <DatePicker className='ms-5'\r\n                                        name=\"endInstant\"\r\n                                        dateFormat=\"DD-MM-YYYY\"\r\n                                        timeFormat=\"HH:mm\"\r\n                                        onChange={val => this.state.event.endInstant = val}>\r\n\r\n                                    </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <FormGroup className=\"mt-3\" style={{minWidth:\"100%\", display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Button color=\"success\" type=\"submit\" style={{minWidth:\"48%\"}}>Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/arranger\" style={{minWidth:\"48%\"}}>Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EventArrangement","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton, ListGroup } from 'react-bootstrap'\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler'\r\nimport ErrorNotifier from '../Handler/ErrorNotifier'\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nlet thisObj;\r\n\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nclass ArrangedEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: localStorage.getItem(\"id\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n            searchBarEnabled: false,\r\n            selectedValues: [],\r\n            options: [],\r\n            multiselectRefTracker: React.createRef()\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n\r\n        thisObj = this;\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        categoriesNames.push(selectedItem.name);\r\n        this.setState({ categoriesNames: categoriesNames })\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n\r\n        categoriesNames = categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ categoriesNames: categoriesNames })\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    toggleSearchBar() {\r\n        this.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        $.ajax({\r\n            url: \"/arranger/arranged\",\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ options: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || (localStorage.getItem(\"role\") !== roleArranger && localStorage.getItem(\"role\") !== roleAdmin)\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n                <Card>\r\n                    {eventState}\r\n                    <Card.Img variant=\"top\" src={photoSrc} />\r\n                    <Card.Body>\r\n                        <Card.Title>{event.name}</Card.Title>\r\n                        <Card.Text>{event.description}</Card.Text>\r\n                        <div className='mb-3'>\r\n                            {categories}\r\n                        </div>\r\n                        <Link to={\"/arranger/arranged/\" + event.id}>View more</Link>\r\n                    </Card.Body>\r\n                    <Card.Footer className=\"text-muted\">\r\n                        <div>\r\n                            Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                        </div>\r\n                        <div>\r\n                            Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                        </div>\r\n                    </Card.Footer>\r\n                </Card>\r\n            </Col>\r\n        });\r\n\r\n        let toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            <div class=\"input-group-prepend\">\r\n                <button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <div class=\"ms-3\">\r\n                        <Row>\r\n                            {toggler}\r\n                        </Row>\r\n                        <Row className=\"mt-3\">\r\n                            {this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n                        </Row>\r\n                        <Row xs={1} md={4} className=\"g-3 mt-3\">\r\n                            {eventList}\r\n                        </Row>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        const userJoinedEventsUrl = `/arranger/arranged`;\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: userJoinedEventsUrl,\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n\t\tawait this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n\r\n            <Button className=\"mb-3\"\r\n                onClick={this.clearFilter}\r\n                color=\"outline-secondary\">\r\n                Clear Filter\r\n            </Button>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n                <Multiselect\r\n                    options={this.state.options} // Options to display in the dropdown\r\n                    selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\r\n                    onSelect={this.onSelect} // Function will trigger on select event\r\n                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                    ref={this.state.multiselectRefTracker}\r\n                />\r\n\r\n                {/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n            </div>\r\n\r\n            <FormGroup className=\"mb-3\">\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        eventState=\"WAITING_FOR_START\"\r\n                        variant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Waiting\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"STARTED\"\r\n                        variant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Started\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"FINISHED\"\r\n                        variant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Finished\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"CLOSED\"\r\n                        variant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Closed\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-3\" >\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortField=\"name\"\r\n                        variant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"description\"\r\n                        variant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Description\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"startInstant\"\r\n                        variant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Start Instant\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"endInstant\"\r\n                        variant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        End Instant\r\n                    </ToggleButton>\r\n                </div>\r\n\r\n                <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortOrder=\"ASC\"\r\n                        variant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Ascend\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortOrder=\"DESC\"\r\n                        variant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Descend\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n                    <div style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterField=\"name\"\r\n                            variant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterField=\"description\"\r\n                            variant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Description\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterOperation=\"LIKE\"\r\n                            variant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Like\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterOperation=\"EQUAL\"\r\n                            variant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Equal\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n                        placeholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n                </div>\r\n            </FormGroup>\r\n        </Form >\r\n    }\r\n}\r\n\r\nexport default withRouter(ArrangedEvents);\r\n","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Input, InputGroup, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Image } from 'react-bootstrap'\r\nimport $ from 'jquery'\r\nimport css from './style.css'\r\nimport classnames from 'classnames';\r\n\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AppNavbar from './AppNavbar';\r\nimport ErrorNotifier from './Handler/ErrorNotifier';\r\nimport ErrorHandler from './Handler/ErrorHandler';\r\nimport Constants from './Const/Constants';\r\nimport InstantFormatter from './Formatter/InstantFormatter'\r\nimport ParticipantMessageGenerator from './ParticipantMessageGenerator'\r\n\r\nlet thisObj\r\n\r\nclass EventPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: localStorage.getItem(\"id\"),\r\n            event: null,\r\n            isLoading: true,\r\n            comments: [],\r\n            commentText: \"\",\r\n            activeTab: '1'\r\n        }\r\n\r\n        this.participantMessageGenerator = new ParticipantMessageGenerator()\r\n\r\n        thisObj = this;\r\n\r\n        this.leaveComment = this.leaveComment.bind(this);\r\n        this.changeCommentText = this.changeCommentText.bind(this);\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetch(`/events/${this.props.match.params.id}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            })\r\n        });\r\n\r\n        const body = await response.json();\r\n        this.setState({ event: body });\r\n\r\n        const commentsResponse = await fetch(`/comments/event/${this.props.match.params.id}`, {\r\n            method: \"GET\",\r\n            headers: new Headers({\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            })\r\n        });\r\n\r\n        const commentsBody = await commentsResponse.json();\r\n        this.setState({ comments: commentsBody.comments, isLoading: false });\r\n    }\r\n\r\n    leaveComment() {\r\n\r\n        const dto = {\r\n            text: this.state.commentText\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/comments/event/' + this.state.event.id,\r\n            contentType: \"application/json; charset=UTF-8\",\r\n            method: \"post\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(dto),\r\n            success: function (data) {\r\n                let updatedComments = [...thisObj.state.comments];\r\n                updatedComments.push({\r\n                    user: {\r\n                        login: localStorage.getItem(\"login\"),\r\n                        id: localStorage.getItem(\"id\"),\r\n                    },\r\n                    text: dto.text,\r\n                    creationTime: new Date() / 1000\r\n                })\r\n                thisObj.setState({ comments: updatedComments, commentText: \"\" });\r\n                // ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    changeCommentText(e) {\r\n        let target = e.target;\r\n\r\n        this.setState({\r\n            commentText: target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { event, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        let photosLength = event.photos.length\r\n        let photoSrc = \"\"\r\n        if (photosLength > 0) {\r\n            photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.photos[0].id;\r\n        }\r\n\r\n        const photosList = event.photos.map(photo => {\r\n            return <Card border=\"light\">\r\n                <Card.Img src={\"/resources/events/\" + event.id + \"/photos/\" + photo.id} />\r\n            </Card>\r\n        })\r\n\r\n        const preview = event.preview !== null ? <Card >\r\n            <Card.Img src={\"/resources/events/\" + event.id + \"/photos/\" + event.preview.id} />\r\n        </Card>\r\n            : \"\"\r\n\r\n        const comments = this.state.comments.map(comment => {\r\n            return <div class=\"border-bottom p-2\">\r\n                <div>\r\n                    <span class=\"text-secondary me-1\">{comment.user.login} at</span>\r\n                    <span class=\"text-secondary\">{InstantFormatter.formatInstant(comment.creationTime)}</span>\r\n                </div>\r\n                <div>\r\n                    {comment.text}\r\n                </div>\r\n            </div>\r\n        })\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs=\"4\">\r\n                        {preview}\r\n                        <hr class=\"solid\" />\r\n                        <h2 className='text-center'>{event.name}</h2>\r\n                        <hr class=\"solid\" />\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                        <div>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '1' })}\r\n                                        onClick={() => { this.toggle('1'); }}\r\n                                    >\r\n                                        Information 📊\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '2' })}\r\n                                        onClick={() => { this.toggle('2'); }}\r\n                                    >\r\n                                        Comments 💬\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '3' })}\r\n                                        onClick={() => { this.toggle('3'); }}\r\n                                    >\r\n                                        Photos 📷\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    {this.renderInfoSection.bind(this)(event)}\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    {this.renderCommentSection.bind(this)(comments)}\r\n                                </TabPane>\r\n                                <TabPane tabId=\"3\">\r\n                                    {this.renderPhotosSection.bind(this)(photosList, event)}\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n\r\n    renderInfoSection(event) {\r\n        let arranger = \"\"\r\n        if (event.userLogin !== null) {\r\n            arranger = <Link to={`/guest/${event.userLogin}`}>{event.userLogin}</Link>\r\n        } else {\r\n            arranger = \"No owner\"\r\n        }\r\n\r\n        var startInstant = new Date(event.startInstant * 1000);\r\n        startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n        var endInstant = new Date(event.endInstant * 1000);\r\n        endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n        var categories = event.categoriesNames.map(category => {\r\n            return <Badge className=\"bg bg-success me-1\" style={{ minWidth: \"24%\" }}>{category}</Badge>\r\n        })\r\n\r\n        var state\r\n        switch (event.eventState) {\r\n            case \"WAITING_FOR_START\":\r\n                state = <Badge className=\"bg-warning text-dark\" style={{ minWidth: \"100%\" }}>Waiting</Badge>\r\n                break;\r\n            case \"STARTED\":\r\n                state = <Badge className=\"bg-success\" style={{ minWidth: \"100%\" }}>Started</Badge>\r\n                break;\r\n            case \"FINISHED\":\r\n                state = <Badge className=\"bg-danger\" style={{ minWidth: \"100%\" }}>Finished</Badge>\r\n                break;\r\n            case \"CLOSED\":\r\n                state = <Badge className=\"bg-dark\" style={{ minWidth: \"100%\" }}>Closed</Badge>\r\n                break;\r\n        }\r\n\r\n        let participantMessage = this.participantMessageGenerator.make(event.participantsAmount);\r\n\r\n        return (<div>\r\n            <div>{event.description}</div>\r\n            <div>\r\n                <h5>\r\n                    {categories}\r\n                </h5>\r\n            </div>\r\n            <div>Arranged by {arranger} nearby {event.place}</div>\r\n            <div>{participantMessage}</div>\r\n            <div>\r\n                Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n            </div>\r\n            <div>\r\n                Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n            </div>\r\n            <div>\r\n                <h5>\r\n                    {state}\r\n                </h5>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n    renderCommentSection(comments) {\r\n        return (<div>\r\n            <div>\r\n                {localStorage.getItem(\"login\") == null ? \"\" :\r\n                    <InputGroup className=\"my-1\">\r\n                        <Input placeholder='Leave a comment' onChange={this.changeCommentText} value={this.state.commentText} />\r\n                        <Button onClick={this.leaveComment} color='success'>Send</Button>\r\n                    </InputGroup>\r\n                }\r\n            </div>\r\n            <div>\r\n                <div class=\"messagesScroller\" >\r\n                    {comments}\r\n                </div>\r\n            </div>\r\n        </div>)\r\n    }\r\n\r\n    renderPhotosSection(photosList) {\r\n        return (<div>\r\n            <Row xs={1} md={3} className=\"g-4\">\r\n                {photosList}\r\n            </Row>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(EventPage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, InputGroup, Row, Col } from 'reactstrap';\r\nimport { Badge } from 'react-bootstrap'\r\nimport AppNavbar from '../AppNavbar';\r\nimport DatePicker from 'react-datetime';\r\nimport moment from 'moment';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass ArrangedEventPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            event: {},\r\n            categories: [],\r\n            selectedValue: []\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChangeStartInstant = this.handleChangeStartInstant.bind(this);\r\n        this.handleChangeEndInstant = this.handleChangeEndInstant.bind(this);\r\n        this.onSelect = this.onSelect.bind(this);\r\n        this.onRemove = this.onRemove.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let event = this.state.event;\r\n        event.categoriesNames.push(selectedItem.name);\r\n        this.setState({ event: event })\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let event = this.state.event;\r\n\r\n        event.categoriesNames = event.categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ event: event })\r\n    }\r\n\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            url: `/arranger/arranged/${thisObj.props.match.params.id}`,\r\n            method: \"GET\",\r\n            headers: {\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                let event = data\r\n                event.startInstant *= 1000\r\n                event.endInstant *= 1000\r\n                let categories = event.categoriesNames.map(name => { return { name: name } });\r\n                thisObj.setState({ event: event, selectedValue: categories });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ categories: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n\r\n        let ev = { ...this.state.event };\r\n        ev[name] = value;\r\n\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    handleChangeStartInstant(event) {\r\n        let ev = { ...this.state.event };\r\n        ev.startInstant = event._d\r\n        console.log(ev.startInstant)\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    handleChangeEndInstant(event) {\r\n        let ev = { ...this.state.event };\r\n        ev.endInstant = event._d\r\n        this.setState({ event: ev });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n        const { event: ev } = this.state;\r\n\r\n        if (typeof ev.startInstant === \"number\") {\r\n            ev.startInstant /= 1000;\r\n        }\r\n\r\n        if (typeof ev.endInstant === \"number\") {\r\n            ev.endInstant /= 1000;\r\n        }\r\n\r\n        ev.categoriesNames = ev.categoriesNames.map(function (el) {\r\n            return el.trim();\r\n        }).filter(function (el) {\r\n            return el !== \"\" && el !== null;\r\n        })\r\n\r\n        $.ajax({\r\n            url: '/arranger/arranged/' + ev.id,\r\n            method: 'PUT',\r\n            data: JSON.stringify(ev),\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                ErrorHandler.runSuccess(data)\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ev.endInstant *= 1000;\r\n                ev.startInstant *= 1000;\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { event: event } = this.state;\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isArrangerOrHigher(localStorage.getItem(\"role\"))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return <div>\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={event.name || ''}\r\n                            onChange={this.handleChange} autoComplete=\"event\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={event.description || ''}\r\n                            onChange={this.handleChange} autoComplete=\"description\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"place\">Place</Label>\r\n                        <Input type=\"text\" name=\"place\" id=\"place\" value={event.place || ''}\r\n                            onChange={this.handleChange} autoComplete=\"place\" />\r\n                    </FormGroup>\r\n                    <Row>\r\n                        <Col md=\"6\">\r\n                            <FormGroup className=\"mt-3\">\r\n                                <div>\r\n                                    <Label>Categories</Label>\r\n                                    <Multiselect\r\n                                        options={this.state.categories} // Options to display in the dropdown\r\n                                        selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n                                        onSelect={this.onSelect} // Function will trigger on select event\r\n                                        onRemove={this.onRemove} // Function will trigger on remove event\r\n                                        displayValue=\"name\"  // Property name to display in the dropdown options\r\n                                    />\r\n                                </div>\r\n                            </FormGroup>\r\n                        </Col>\r\n                        <Col>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{ \"display\": \"flex\", justifyContent: \"right\" }}>\r\n                                    <Label for=\"startInstant\">Starts at</Label>\r\n                                    <DatePicker className='ms-5'\r\n                                        value={this.state.event.startInstant}\r\n                                        name=\"startInstant\"\r\n                                        dateFormat=\"DD-MM-YYYY\"\r\n                                        timeFormat=\"HH:mm\"\r\n                                        onChange={this.handleChangeStartInstant}>\r\n                                    </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                            <FormGroup className=\"mt-3\">\r\n                                <InputGroup style={{ \"display\": \"flex\", justifyContent: \"right\" }}>\r\n                                    <Label for=\"endInstant\">Finishes at</Label>\r\n                                    <DatePicker className='ms-5'\r\n                                        value={this.state.event.endInstant}\r\n                                        name=\"endInstant\"\r\n                                        dateFormat=\"DD-MM-YYYY\"\r\n                                        timeFormat=\"HH:mm\"\r\n                                        onChange={this.handleChangeEndInstant}>\r\n\r\n                                    </DatePicker>\r\n                                </InputGroup>\r\n                            </FormGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <FormGroup className=\"mt-3\" style={{minWidth:\"100%\", display:\"flex\", justifyContent:\"space-between\"}}>\r\n                        <Button color=\"success\" type=\"submit\" style={{minWidth:\"48%\"}}>Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/arranger/arranged\" style={{minWidth:\"48%\"}}>Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(ArrangedEventPage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, ButtonGroup, Table, Input, TabContent, TabPane, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Button, Card, CardGroup, Col, Row, Image } from 'react-bootstrap'\r\nimport classnames from 'classnames';\r\n\r\nimport { Badge } from 'react-bootstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport $ from \"jquery\"\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ArrangedEventEdit from './ArrangedEventEdit';\r\nimport InstantFormatter from '../Formatter/InstantFormatter';\r\nimport Waiter from '../Waiter';\r\nimport ParticipantMessageGenerator from '../ParticipantMessageGenerator'\r\n\r\nconst roleArranger = \"ROLE_ARRANGER\"\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass ArrangedEventPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: localStorage.getItem(\"id\"),\r\n            event: null,\r\n            comments: [],\r\n            isLoading: true,\r\n            activeTab: '1'\r\n        }\r\n\r\n        this.participantMessageGenerator = new ParticipantMessageGenerator()\r\n\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n        this.startEvent = this.startEvent.bind(this);\r\n        this.stopEvent = this.stopEvent.bind(this);\r\n        this.finishEvent = this.finishEvent.bind(this);\r\n        this.closeEvent = this.closeEvent.bind(this);\r\n        this.setPreview = this.setPreview.bind(this);\r\n        this.removePhoto = this.removePhoto.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        $.ajax({\r\n            url: `/events/${thisObj.props.match.params.id}`,\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: async function (data) {\r\n                thisObj.setState({ event: data });\r\n\r\n                const commentsResponse = await fetch(`/comments/event/${thisObj.props.match.params.id}`, {\r\n                    method: \"GET\",\r\n                    headers: new Headers({\r\n                        \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                    })\r\n                });\r\n\r\n                const commentsBody = await commentsResponse.json();\r\n                thisObj.setState({ comments: commentsBody.comments, isLoading: false });\r\n\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    upload(event) {\r\n        let target = event.target\r\n\r\n        const fileInput = document.querySelector(\"#eventImages\" + target.getAttribute(\"eventId\"));\r\n        const formData = new FormData();\r\n\r\n        for (let photo of fileInput.files) {\r\n            formData.append('photos', photo);\r\n        }\r\n\r\n        fetch(\"/resources/events/\" + target.getAttribute(\"eventId\"), {\r\n            method: \"POST\",\r\n            body: formData,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then(function (event) {\r\n            window.location.reload()\r\n        })\r\n    }\r\n\r\n    startEvent(event) {\r\n\r\n        $.ajax({\r\n            url: \"/events/\" + event.target.getAttribute(\"eventId\") + \"/start\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    stopEvent(event) {\r\n\r\n        $.ajax({\r\n            url: \"/events/\" + event.target.getAttribute(\"eventId\") + \"/stop\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    finishEvent(event) {\r\n\r\n\r\n        $.ajax({\r\n            url: \"/events/\" + event.target.getAttribute(\"eventId\") + \"/finish\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    closeEvent(event) {\r\n        $.ajax({\r\n            url: \"/events/\" + event.target.getAttribute(\"eventId\") + \"/close\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    setPreview(event) {\r\n        let eventInDto = {\r\n            id: event.target.getAttribute(\"photoId\")\r\n        }\r\n\r\n        $.ajax({\r\n            url: \"/arranger/arranged/\" + event.target.getAttribute(\"eventId\") + \"/preview\",\r\n            method: \"PUT\",\r\n            data: JSON.stringify(eventInDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                window.location.reload()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    removePhoto(event) {\r\n        $.ajax({\r\n            url: `/arranger/arranged/${event.target.getAttribute(\"eventId\")}/photos/${event.target.getAttribute(\"photoId\")}`,\r\n            method: \"DELETE\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function () {\r\n                window.location.reload();\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || (localStorage.getItem(\"role\") !== roleArranger && localStorage.getItem(\"role\") !== roleAdmin)\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const { event, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <Waiter />;\r\n        }\r\n\r\n        let photosLength = event.photos.length\r\n        let photoSrc = \"\"\r\n        if (photosLength > 0) {\r\n            photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.photos[0].id;\r\n        }\r\n\r\n        const photosList = event.photos.map(photo => {\r\n            return <Card border=\"light\">\r\n                <Card.Img src={\"/resources/events/\" + event.id + \"/photos/\" + photo.id} />\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    {this.state.event.preview.id == photo.id ? <span className='mt-3 border-bottom border-success' style={{ minWidth: \"79%\" }}>Current Preview</span> :\r\n                        <Button onClick={this.setPreview} eventId={event.id} photoId={photo.id} variant=\"outline-success\" className=\"mt-1\" style={{ minWidth: \"79%\" }}>Set as preview</Button>\r\n                    }\r\n                    <Button onClick={this.removePhoto} eventId={event.id} photoId={photo.id} variant=\"outline-danger\" className=\"mt-1\" style={{ minWidth: \"20%\" }}>❌</Button>\r\n                </div>\r\n            </Card>\r\n        })\r\n\r\n        const preview = event.preview !== null ? <Card >\r\n            <Card.Img src={\"/resources/events/\" + event.id + \"/photos/\" + event.preview.id} />\r\n        </Card>\r\n            : \"\"\r\n\r\n        const comments = this.state.comments.map(comment => {\r\n            return <div class=\"border-bottom p-2\">\r\n                <div>\r\n                    <span class=\"text-secondary me-1\">{comment.user.login} at</span>\r\n                    <span class=\"text-secondary\">{InstantFormatter.formatInstant(comment.creationTime)}</span>\r\n                </div>\r\n                <div>\r\n                    {comment.text}\r\n                </div>\r\n            </div>\r\n        })\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs=\"4\">\r\n                        {preview}\r\n                        <hr class=\"solid\" />\r\n                        <h2 className='text-center'>{event.name}</h2>\r\n                        <hr class=\"solid\" />\r\n\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                        <div>\r\n                            <Nav tabs>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '1' })}\r\n                                        onClick={() => { this.toggle('1'); }}\r\n                                    >\r\n                                        Information 📊\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                {event.eventState == \"WAITING_FOR_START\" || event.eventState == \"STARTED\" ?\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                                            onClick={() => { this.toggle('2'); }}\r\n                                        >\r\n                                            Edit ✏️\r\n                                        </NavLink>\r\n                                    </NavItem> : \"\"}\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '3' })}\r\n                                        onClick={() => { this.toggle('3'); }}\r\n                                    >\r\n                                        Comments 💬\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink\r\n                                        className={classnames({ active: this.state.activeTab === '4' })}\r\n                                        onClick={() => { this.toggle('4'); }}\r\n                                    >\r\n                                        Photos 📷\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <TabContent activeTab={this.state.activeTab}>\r\n                                <TabPane tabId=\"1\">\r\n                                    {this.renderInfoSection.bind(this)(event)}\r\n                                </TabPane>\r\n                                <TabPane tabId=\"2\">\r\n                                    <ArrangedEventEdit />\r\n                                </TabPane>\r\n                                <TabPane tabId=\"3\">\r\n                                    <div class=\"messagesScroller\" >\r\n                                        {comments}\r\n                                    </div>\r\n                                </TabPane>\r\n                                <TabPane tabId=\"4\">\r\n                                    <div className='my-2'>\r\n                                        <Input variant=\"primary\" type=\"file\" name=\"image\" id={\"eventImages\" + event.id} multiple />\r\n                                        <Button onClick={this.upload} eventId={event.id} variant=\"success\">Upload</Button>\r\n                                    </div>\r\n                                    <Row xs={1} md={3} className=\"g-4\">\r\n                                        {photosList}\r\n                                    </Row>\r\n                                </TabPane>\r\n                            </TabContent>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n\r\n    renderInfoSection(event) {\r\n        let participantMessage = this.participantMessageGenerator.make(event.participantsAmount);\r\n\r\n        var state\r\n        switch (event.eventState) {\r\n            case \"WAITING_FOR_START\":\r\n                state = <Badge className=\"bg-warning\" style={{ minWidth: \"100%\" }}>Waiting</Badge>\r\n                break;\r\n            case \"STARTED\":\r\n                state = <Badge className=\"bg-success\" style={{ minWidth: \"100%\" }}>Started</Badge>\r\n                break;\r\n            case \"FINISHED\":\r\n                state = <Badge className=\"bg-danger\" style={{ minWidth: \"100%\" }}>Finished</Badge>\r\n                break;\r\n            case \"CLOSED\":\r\n                state = <Badge className=\"bg-dark\" style={{ minWidth: \"100%\" }}>Closed</Badge>\r\n                break;\r\n        }\r\n\r\n        let eventAction = \"\"\r\n        if (event.eventState == \"WAITING_FOR_START\") {\r\n            eventAction =\r\n                <div className=\"d-grid gap-2 mt-2\">\r\n                    <Button variant=\"success\" onClick={this.startEvent} eventId={event.id}>Start</Button>\r\n                    <Button variant=\"dark\" onClick={this.closeEvent} eventId={event.id}>Close</Button>\r\n                </div>\r\n        } else if (event.eventState == \"STARTED\") {\r\n            eventAction =\r\n                <div className=\"d-grid gap-2 mt-2\">\r\n                    <Button variant=\"warning\" onClick={this.stopEvent} eventId={event.id}>Roll back</Button>\r\n                    <Button variant=\"danger\" onClick={this.finishEvent} eventId={event.id}>Finish</Button>\r\n                    <Button variant=\"dark\" onClick={this.closeEvent} eventId={event.id}>Close</Button>\r\n                </div>\r\n        } else if (event.eventState == \"FINISHED\") {\r\n            eventAction =\r\n                <div className=\"d-grid gap-2 mt-2\">\r\n                    <Button variant=\"dark\" onClick={this.closeEvent} eventId={event.id}>Close</Button>\r\n                </div>\r\n        }\r\n\r\n\r\n        var startInstant = new Date(event.startInstant * 1000);\r\n        startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n        var endInstant = new Date(event.endInstant * 1000);\r\n        endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n        var categories = event.categoriesNames.map(category => {\r\n            return <Badge className=\"bg bg-success me-1\" style={{ minWidth: \"24%\" }}>{category}</Badge>\r\n        })\r\n\r\n        return (<div>\r\n            <div>{event.description}</div>\r\n            <div>\r\n                <h5>\r\n                    {categories}\r\n                </h5>\r\n            </div>\r\n            <div>Nearby {event.place}</div>\r\n            <div>{event.participantsAmount} participants have already joined the event</div>\r\n            <div>\r\n                Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n            </div>\r\n            <div>\r\n                Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n            </div>\r\n            <div>\r\n                <h5>\r\n                    {state}\r\n                </h5>\r\n            </div>\r\n\r\n            {this.state.event.eventState != \"CLOSED\" ?\r\n                <div><hr class=\"solid\" />\r\n                    <h5 className='text-center'>Actions</h5>\r\n                    <hr class=\"solid\" />\r\n                    {eventAction}\r\n                </div> : \"\"}\r\n        </div>)\r\n    }\r\n}\r\n\r\nexport default withRouter(ArrangedEventPage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card } from 'react-bootstrap'\r\nimport { Input } from 'reactstrap';\r\nimport AppNavbar from '../../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier';\r\nimport Constants from '../../Const/Constants';\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj;\r\n\r\nclass GuestMePage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            isLoading: true,\r\n            setUser: props.setUser\r\n        }\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        const userUrl = `/guest/${this.props.match.params.login}`;\r\n\r\n        $.ajax({\r\n            method: \"Get\",\r\n            url: userUrl,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ user: data, isLoading: false });\r\n                thisObj.state.setUser(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { user, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <p>Loading...</p>;\r\n        }\r\n\r\n        const avatar = user.avatar !== null ? <Card >\r\n            <Card.Img src={\"/resources/users/\" + user.id + \"/photos/\" + user.avatar.id} />\r\n        </Card>\r\n            : \"\"\r\n\r\n        return <div className=\"d-grid gap-2\">\r\n            {avatar}\r\n            <hr class=\"solid\" />\r\n            <h2 className='text-center'>{user.login}</h2>\r\n            <hr class=\"solid\" />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(GuestMePage);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AppNavbar from '../../AppNavbar';\r\nimport $, { post } from 'jquery';\r\nimport { ScrollSpy } from 'bootstrap';\r\nimport ErrorHandler from '../../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier';\r\nimport Constants from '../../Const/Constants'\r\n\r\nlet thisObj; \r\n\r\nclass GuestMeJoinedEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login : localStorage.getItem(\"login\"),\r\n            id : localStorage.getItem(\"id\"),\r\n            role : localStorage.getItem(\"role\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const userUrl = `/guest/${this.props.match.params.login}/joined`;\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: userUrl,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(data){\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n                <Card>\r\n                    {eventState}\r\n                    <Card.Img variant=\"top\" src={photoSrc} className=\"mt-0\"/>\r\n                    <Card.Body>\r\n                        <Card.Title>{event.name}</Card.Title>\r\n                        <Card.Text>{event.description}</Card.Text>\r\n                        <div>\r\n                            Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                        </div>\r\n                        <Link to={\"/events/\" + event.id}>more</Link>\r\n                    </Card.Body>\r\n                </Card>\r\n            </Col>\r\n        });\r\n\r\n        return (<div>\r\n            {this.searchBar()}\r\n            <Row xs={1} md={3} className=\"g-4\">\r\n                {eventList}\r\n            </Row>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n              }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n              })\r\n        }\r\n\r\n        const userJoinedEventsUrl = `/guest/${this.props.match.params.login}/joined`;\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: userJoinedEventsUrl,\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function(data){\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n            <FormGroup className=\"ms-3 mb-3\" >\r\n                <Label>Filter</Label>\r\n                <ButtonGroup className=\"ms-3\">\r\n                    <ToggleButton\r\n                        filterField=\"name\"\r\n                        variant={this.state.filterField === \"name\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterValue}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        filterField=\"description\"\r\n                        variant={this.state.filterField === \"description\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterValue}>\r\n                        Description\r\n                    </ToggleButton>\r\n                </ButtonGroup>\r\n\r\n                <ButtonGroup className=\"ms-3\">\r\n                    <ToggleButton\r\n                        filterOperation=\"LIKE\"\r\n                        variant={this.state.filterOperation === \"LIKE\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterOperation}>\r\n                        Like\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        filterOperation=\"EQUAL\"\r\n                        variant={this.state.filterOperation === \"EQUAL\" ? \"info\" : \"outline-info\"}\r\n                        onClick={this.setFilterOperation}>\r\n                        Equal\r\n                    </ToggleButton>\r\n                </ButtonGroup>\r\n                </FormGroup>\r\n                <FormGroup className=\"ms-3 mb-3\" >\r\n                    <Label>Sorting</Label>\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton\r\n                            sortField=\"name\"\r\n                            variant={this.state.sortField === \"name\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"description\"\r\n                            variant={this.state.sortField === \"description\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Description\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"startInstant\"\r\n                            variant={this.state.sortField === \"startInstant\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            Start Instant\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortField=\"endInstant\"\r\n                            variant={this.state.sortField === \"endInstant\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortField}>\r\n                            End Instant\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton\r\n                            sortOrder=\"ASC\"\r\n                            variant={this.state.sortOrder === \"ASC\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortOrder}>\r\n                            Ascend\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            sortOrder=\"DESC\"\r\n                            variant={this.state.sortOrder === \"DESC\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setSortOrder}>\r\n                            Descend\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n                </FormGroup>\r\n                <FormGroup className=\"ms-3 mb-3\" >\r\n                    <Label>State</Label>\r\n                    <ButtonGroup className=\"ms-3\">\r\n                        <ToggleButton \r\n                            eventState=\"WAITING_FOR_START\"\r\n                            variant={this.state.eventState === \"WAITING_FOR_START\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Waiting for start\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"STARTED\"\r\n                            variant={this.state.eventState === \"STARTED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Started\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"FINISHED\"\r\n                            variant={this.state.eventState === \"FINISHED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Finished\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            eventState=\"CLOSED\"\r\n                            variant={this.state.eventState == \"CLOSED\" ? \"info\" : \"outline-info\"}\r\n                            onClick={this.setEventState}>\r\n                            Closed\r\n                        </ToggleButton>\r\n                    </ButtonGroup>\r\n\r\n                <Button className=\" ms-3\"\r\n                    onClick={this.clearFilter}\r\n                    color=\"outline-secondary\">\r\n                    Clear Filter\r\n                </Button>\r\n\r\n            </FormGroup>\r\n            <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue}\r\n                className=\"mb-3\" placeholder=\"Search\"></Input>\r\n            <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                placeholder=\"Enter categories separated by comma\"></Input>\r\n            <Button color=\"info\" className=\"mt-3\" onClick={this.seacrch}>Search</Button>\r\n        </Form>\r\n    }\r\n}\r\n\r\nexport default withRouter(GuestMeJoinedEvents);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card, Row} from 'react-bootstrap'\r\nimport {Input} from 'reactstrap';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier';\r\nimport Constants from '../../Const/Constants';\r\nimport Waiter from '../../Waiter';\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj; \r\n\r\nclass GuestMePhotos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: null,\r\n            isLoading: true,\r\n            }\r\n            \r\n            thisObj = this\r\n        }\r\n\r\n    async componentDidMount() {\r\n        const userUrl = `/guest/${this.props.match.params.login}`;\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: userUrl,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n              },\r\n            success: function(data){\r\n                thisObj.setState({ user: data, isLoading: false  });\r\n            },\r\n            error: function(data){\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n\t\tconst { user, isLoading } = this.state;\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <p>Loading ...</p>;\r\n\t\t}\r\n\r\n\t\tconst photosList = this.state.user.photos.map(photo => {\r\n            return <Card border=\"light\"> \r\n                        <Card.Img src={\"/resources/users/\" + this.state.user.id + \"/photos/\" + photo.id} />\r\n                    </Card>\r\n        })\r\n\r\n        const avatar = user.avatar !== null ?   <Card> \r\n                                                    <Card.Img src={\"/resources/users/\" + user.id + \"/photos/\" + user.avatar.id}/>\r\n                                                </Card> \r\n                                                : \"\"\r\n\r\n        return <div>\r\n                    <Row xs={1} md={3} className=\"g-4\">\r\n                        {photosList}\r\n                    </Row>\r\n                </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(GuestMePhotos);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport $ from 'jquery';\r\nimport ErrorNotifier from \"../../Handler/ErrorNotifier\"\r\nimport ErrorHandler from '../../Handler/ErrorHandler'\r\nimport Constants from '../../Const/Constants';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\n\r\nlet thisObj;\r\n\r\nclass GuestMeArrangedEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: localStorage.getItem(\"id\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n            searchBarEnabled: false,\r\n            selectedValues: [],\r\n            options: [],\r\n            multiselectRefTracker: React.createRef()\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n\r\n        thisObj = this;\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        categoriesNames.push(selectedItem.name);\r\n        this.setState({ categoriesNames: categoriesNames })\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n\r\n        categoriesNames = categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ categoriesNames: categoriesNames })\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    toggleSearchBar() {\r\n        this.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const userUrl = `/guest/${this.props.match.params.login}/arranged`;\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: userUrl,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ options: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n            <Card>\r\n                {eventState}\r\n                <Card.Img variant=\"top\" src={photoSrc} />\r\n                <Card.Body>\r\n                    <Card.Title>{event.name}</Card.Title>\r\n                    <Card.Text>{event.description}</Card.Text>\r\n                    <div className='mb-3'>\r\n                        {categories}\r\n                    </div>\r\n                    <Link to={\"/events/\" + event.id}>View more</Link>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    <div>\r\n                        Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                    <div>\r\n                        Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n        });\r\n\r\n        let toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            <div class=\"input-group-prepend\">\r\n                <button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n            </div>\r\n        </div>\r\n\r\n        return (\r\n            <div>\r\n                <Row className=\"mt-3\">\r\n                    {toggler}\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    {this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n                </Row>\r\n                <Row xs={1} md={3} className=\"g-2\">\r\n                    {eventList}\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        const userJoinedEventsUrl = `/guest/${this.props.match.params.login}/arranged`;\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: userJoinedEventsUrl,\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n        await this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n\r\n            <Button className=\"mb-3\"\r\n                onClick={this.clearFilter}\r\n                color=\"outline-secondary\">\r\n                Clear Filter\r\n            </Button>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n                <Multiselect\r\n                    options={this.state.options} // Options to display in the dropdown\r\n                    selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\r\n                    onSelect={this.onSelect} // Function will trigger on select event\r\n                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                    ref={this.state.multiselectRefTracker}\r\n                />\r\n\r\n                {/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n            </div>\r\n\r\n            <FormGroup className=\"mb-3\">\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        eventState=\"WAITING_FOR_START\"\r\n                        variant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Waiting\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"STARTED\"\r\n                        variant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Started\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"FINISHED\"\r\n                        variant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Finished\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"CLOSED\"\r\n                        variant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Closed\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-3\" >\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortField=\"name\"\r\n                        variant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"description\"\r\n                        variant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Description\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"startInstant\"\r\n                        variant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Start Instant\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"endInstant\"\r\n                        variant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        End Instant\r\n                    </ToggleButton>\r\n                </div>\r\n\r\n                <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortOrder=\"ASC\"\r\n                        variant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Ascend\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortOrder=\"DESC\"\r\n                        variant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Descend\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n                    <div style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterField=\"name\"\r\n                            variant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterField=\"description\"\r\n                            variant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Description\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterOperation=\"LIKE\"\r\n                            variant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Like\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterOperation=\"EQUAL\"\r\n                            variant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Equal\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n                        placeholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n                </div>\r\n            </FormGroup>\r\n        </Form >\r\n    }\r\n}\r\n\r\nexport default withRouter(GuestMeArrangedEvents);\r\n","import React from 'react';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../../Handler/ErrorHandler'\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, ButtonGroup } from 'reactstrap';\r\nimport AppNavbar from '../../AppNavbar';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj;\r\n\r\nclass CreateProp extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            prop: {\r\n                name: null,\r\n                description: null,\r\n                propType: \"THING\",\r\n                cost: null,\r\n                costType: \"PIECE\",\r\n            }\r\n        }\r\n\r\n        this.toggleCreateMode = props.toggle;\r\n        this.addProp = props.addProp;\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        thisObj = this;\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let prop = { ...this.state.prop };\r\n\r\n        prop[name] = value;\r\n        this.setState({ prop: prop });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        $.ajax({\r\n            url: '/prop-management/props',\r\n            contentType: \"application/json; charset=UTF-8\",\r\n            method: \"post\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(this.state.prop),\r\n            success: function (data) {\r\n                thisObj.addProp(data)\r\n                thisObj.setState({\r\n                    prop: {\r\n                        name: null,\r\n                        description: null,\r\n                        propType: \"THING\",\r\n                        cost: null,\r\n                        costType: \"PIECE\",\r\n                    }\r\n                })\r\n                thisObj.toggleCreateMode()\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const { prop: prop } = this.state;\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return <div>\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={prop.name || ''}\r\n                            onChange={this.handleChange} autoComplete=\"event\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={prop.description || ''}\r\n                            onChange={this.handleChange} autoComplete=\"description\" />\r\n                    </FormGroup>\r\n                    <div class=\"mt-3 createPropCostAndTypes\">\r\n                        <FormGroup>\r\n                            <Label for=\"description\">Prop Type</Label><br />\r\n                            <ButtonGroup>\r\n                                <Button color={this.state.prop.propType == \"THING\" ? \"success\" : \"outline-success\"}\r\n                                    onClick={this.handleChange} name=\"propType\" value=\"THING\" >Thing</Button>\r\n                                <Button color={this.state.prop.propType == \"PLACE\" ? \"success\" : \"outline-success\"}\r\n                                    onClick={this.handleChange} name=\"propType\" value=\"PLACE\" >Place</Button>\r\n                            </ButtonGroup>\r\n                        </FormGroup>\r\n                        <FormGroup >\r\n                            <Label for=\"cost\">Cost (Cents)</Label>\r\n                            <Input type=\"number\" name=\"cost\" id=\"cost\" value={prop.cost || ''}\r\n                                onChange={this.handleChange} autoComplete=\"cost\" max={9223372036854775807} />\r\n                        </FormGroup>\r\n                        <FormGroup >\r\n                            <Label for=\"description\">Cost Type</Label><br />\r\n                            <ButtonGroup>\r\n                                <Button color={this.state.prop.costType == \"PIECE\" ? \"success\" : \"outline-success\"}\r\n                                    onClick={this.handleChange} name=\"costType\" value=\"PIECE\" >Piece</Button>\r\n                                <Button color={this.state.prop.costType == \"DAY\" ? \"success\" : \"outline-success\"}\r\n                                    onClick={this.handleChange} name=\"costType\" value=\"DAY\" >Day</Button>\r\n                            </ButtonGroup>\r\n                        </FormGroup>\r\n                    </div>\r\n                    <FormGroup className=\"mt-5\">\r\n                        <div class=\"saveCancelPropButtons\">\r\n                            <Button color=\"success\" type=\"submit\" className='savePropButton'>Save</Button>{' '}\r\n                            <Button color=\"secondary\" className='cancelPropButton' onClick={this.toggleCreateMode}>Cancel</Button>\r\n                        </div>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default CreateProp","import React, { Component } from 'react';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier.js';\r\nimport ErrorHandler from '../../Handler/ErrorHandler.js';\r\nimport AppNavbar from '../../AppNavbar.js';\r\nimport { Container, Alert } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport { ButtonGroup, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport $ from \"jquery\"\r\nimport MoneyFormatter from '../../Formatter/MoneyFormatter.js';\r\nimport Waiter from '../../Waiter.js';\r\nimport CreateProp from \"./CreateProp\"\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass PropsPage extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tprops: [],\r\n\t\t\tselectedProps: [],\r\n\t\t\tisLoading: true,\r\n\t\t\tfilterValue: \"\",\r\n\t\t\tcreateMode: false,\r\n\t\t\tpropEdit: {\r\n\t\t\t\teditModeId: null,\r\n\t\t\t\teditModeName: null,\r\n\t\t\t\teditModeDescription: null,\r\n\t\t\t\teditModeCost: null,\r\n\t\t\t\teditModeCostType: null,\r\n\t\t\t\teditModePropType: null,\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthisObj = this;\r\n\r\n\t\tthis.filterProps = this.filterProps.bind(this);\r\n\t\tthis.toggleCreateMode = this.toggleCreateMode.bind(this);\r\n\t\tthis.addProp = this.addProp.bind(this)\r\n\t\tthis.editMode = this.editMode.bind(this)\r\n\t\tthis.saveProp = this.saveProp.bind(this)\r\n\t\tthis.editModeChangeValue = this.editModeChangeValue.bind(this)\r\n\t\tthis.cancelEditing = this.cancelEditing.bind(this)\r\n\t}\r\n\r\n\tfilterProps(e) {\r\n\t\tlet value = e.target.value;\r\n\t\tlet selectedProps = [...this.state.props].filter((prop) => {\r\n\t\t\treturn prop.name.includes(value);\r\n\t\t})\r\n\r\n\t\tthis.setState({ selectedProps: selectedProps, filterValue: value });\r\n\t}\r\n\r\n\tasync remove(id) {\r\n\t\t$.ajax({\r\n\t\t\turl: `/prop-management/props/${id}`,\r\n\t\t\tmethod: \"DELETE\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tlet updatedProps = [...thisObj.state.props].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ props: updatedProps });\r\n\t\t\t\tlet selectedUpdatedProps = [...thisObj.state.selectedProps].filter(i => i.id !== id);\r\n\t\t\t\tthisObj.setState({ selectedProps: selectedUpdatedProps });\r\n\t\t\t\tErrorHandler.runSuccess(data)\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\ttoggleCreateMode() {\r\n\t\tthis.setState({ createMode: !this.state.createMode })\r\n\t}\r\n\r\n\taddProp(prop) {\r\n\t\tlet props = this.state.props\r\n\t\tprops.push(prop)\r\n\t\tthis.setState({ props: props }, () => {\r\n\t\t\tlet selectedProps = [...thisObj.state.props].filter((prop) => {\r\n\t\t\t\tconsole.log(\"ALKERT \" + prop.name.includes(thisObj.state.filterValue) + \" + \" + prop + \" + \" + thisObj.state.filterValue)\r\n\t\t\t\treturn prop.name.includes(thisObj.state.filterValue);\r\n\t\t\t})\r\n\r\n\t\t\tthisObj.setState({ selectedProps: selectedProps });\r\n\t\t})\r\n\t}\r\n\r\n\teditMode(prop) {\r\n\t\tthis.setState({\r\n\t\t\tpropEdit: {\r\n\t\t\t\teditModeId: prop.id,\r\n\t\t\t\teditModeName: prop.name,\r\n\t\t\t\teditModeDescription: prop.description,\r\n\t\t\t\teditModeCost: prop.cost,\r\n\t\t\t\teditModeCostType: prop.costType,\r\n\t\t\t\teditModePropType: prop.propType,\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tcancelEditing(){\r\n\t\tthisObj.setState({\r\n\t\t\tpropEdit: {\r\n\t\t\t\teditModeId: null\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tsaveProp(prop) {\r\n\t\tlet dto = {\r\n\t\t\tid: this.state.propEdit.editModeId,\r\n\t\t\tname: this.state.propEdit.editModeName,\r\n\t\t\tdescription: this.state.propEdit.editModeDescription,\r\n\t\t\tcost: this.state.propEdit.editModeCost,\r\n\t\t\tcostType: this.state.propEdit.editModeCostType,\r\n\t\t\tpropType: this.state.propEdit.editModePropType,\r\n\t\t}\r\n\r\n\t\t$.ajax({\r\n\t\t\turl: `/prop-management/props/${this.state.propEdit.editModeId}`,\r\n\t\t\tcontentType: \"application/json; charset=UTF-8\",\r\n\t\t\tmethod: \"put\",\r\n\t\t\tdata: JSON.stringify(dto),\r\n\t\t\theaders: {\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tErrorHandler.runStringMessage(\"Prop was changed\")\r\n\t\t\t\tthisObj.setState({\r\n\t\t\t\t\tpropEdit: {\r\n\t\t\t\t\t\teditModeId: null\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t\tprop.name = dto.name\r\n\t\t\t\tprop.description = dto.description\r\n\t\t\t\tprop.cost = dto.cost\r\n\t\t\t\tprop.costType = dto.costType\r\n\t\t\t\tprop.propType = dto.propType\r\n\r\n\t\t\t\tlet updatedProps = [...thisObj.state.props];\r\n\t\t\t\tthisObj.setState({ props: updatedProps });\r\n\t\t\t\tlet selectedProps = [...thisObj.state.props].filter((prop) => {\r\n\t\t\t\t\treturn prop.name.includes(thisObj.state.filterValue);\r\n\t\t\t\t})\r\n\r\n\t\t\t\tthisObj.setState({ selectedProps: selectedProps });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\teditModeChangeValue(e) {\r\n\t\tlet target = e.target\r\n\t\tlet propEdit = this.state.propEdit;\r\n\r\n\t\tif (target.name == \"editModeCostType\") {\r\n\t\t\ttarget.value = this.state.propEdit.editModeCostType == \"PIECE\" ? \"DAY\" : \"PIECE\";\r\n\t\t} else if (target.name == \"editModePropType\") {\r\n\t\t\ttarget.value = this.state.propEdit.editModePropType == \"PLACE\" ? \"THING\" : \"PLACE\"\r\n\t\t}\r\n\r\n\t\tpropEdit[target.name] = target.value;\r\n\r\n\t\tthis.setState({ propEdit: propEdit })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { isLoading } = this.state;\r\n\t\tlet props = this.state.selectedProps\r\n\r\n\t\tif (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n\t\t\treturn <ErrorNotifier />\r\n\t\t}\r\n\r\n\t\tif (isLoading) {\r\n\t\t\treturn <Waiter />;\r\n\t\t}\r\n\r\n\t\tconst propsList = props.map(prop => {\r\n\t\t\tlet types = <div>\r\n\t\t\t\t<span style={{ minWidth: \"50%\" }} class={\"badge \" + (prop.costType == \"PIECE\" ? \"bg-success\" : \"bg-warning text-dark\")}>{prop.costType}</span>\r\n\t\t\t\t<span style={{ minWidth: \"50%\" }} class={\"badge \" + (prop.propType == \"PLACE\" ? \"bg-success\" : \"bg-warning text-dark\")}>{prop.propType}</span>\r\n\t\t\t</div>\r\n\r\n\t\t\tlet typesEdit = <div>\r\n\t\t\t\t<button onClick={this.editModeChangeValue} name=\"editModeCostType\" style={{ minWidth: \"50%\" }} class={\"badge \" + (this.state.propEdit.editModeCostType == \"PIECE\" ? \"btn-success\" : \"btn-warning text-dark\")}>{this.state.propEdit.editModeCostType}</button>\r\n\t\t\t\t<button onClick={this.editModeChangeValue} name=\"editModePropType\" style={{ minWidth: \"50%\" }} class={\"badge \" + (this.state.propEdit.editModePropType == \"PLACE\" ? \"btn-success\" : \"btn-warning text-dark\")}>{this.state.propEdit.editModePropType}</button>\r\n\t\t\t</div>\r\n\r\n\t\t\treturn <tr key={prop.id}>\r\n\t\t\t\t<td style={{ whiteSpace: 'nowrap' }}>{this.state.propEdit.editModeId == prop.id ? <input value={this.state.propEdit.editModeName} name=\"editModeName\" onChange={this.editModeChangeValue}></input> : prop.name}</td>\r\n\t\t\t\t<td>{this.state.propEdit.editModeId == prop.id ? <input value={this.state.propEdit.editModeDescription} name=\"editModeDescription\" style={{ minWidth: \"100%\" }} onChange={this.editModeChangeValue}></input> : prop.description}</td>\r\n\t\t\t\t<td>{this.state.propEdit.editModeId == prop.id ? <input value={this.state.propEdit.editModeCost} name=\"editModeCost\" onChange={this.editModeChangeValue} type=\"number\"></input> : MoneyFormatter.fromatDollars(prop.cost)}</td>\r\n\t\t\t\t<td>{this.state.propEdit.editModeId == prop.id ? typesEdit : types}\r\n\t\t\t\t</td>\r\n\t\t\t\t<td>\r\n\t\t\t\t\t<ButtonGroup style={{ minWidth: \"100%\" }}>\r\n\r\n\t\t\t\t\t\t{this.state.propEdit.editModeId == prop.id\r\n\t\t\t\t\t\t\t? <ButtonGroup style={{ minWidth: \"50%\" }}><Button size=\"sm\" color=\"warning\" style={{ minWidth: \"50%\" }} onClick={() => this.saveProp(prop)} >Save</Button>\r\n\t\t\t\t\t\t\t\t<Button size=\"sm\" color=\"success\" style={{ minWidth: \"50%\" }} onClick={() => this.cancelEditing()} >Cancel</Button>\r\n\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t: <Button size=\"sm\" color=\"success\" style={{ minWidth: \"50%\" }} onClick={() => this.editMode(prop)}>Quick Edit</Button>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t<Button size=\"sm\" color=\"danger\" style={{ minWidth: \"50%\" }} onClick={() => this.remove(prop.id)}>Delete</Button>\r\n\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t</td>\r\n\t\t\t</tr>\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<AppNavbar />\r\n\t\t\t\t<Container fluid>\r\n\t\t\t\t\t{this.state.createMode ? <CreateProp addProp={this.addProp} toggle={this.toggleCreateMode} /> :\r\n\t\t\t\t\t\t<div class=\"propsList mt-3 p-3\">\r\n\t\t\t\t\t\t\t<Button color='success' onClick={this.toggleCreateMode} >Create Prop</Button>\r\n\t\t\t\t\t\t\t<div class=\"input-group propNameInput\">\r\n\t\t\t\t\t\t\t\t<div class=\"input-group-prepend\">\r\n\t\t\t\t\t\t\t\t\t<span class=\"input-group-text\" id=\"basic-addon1\">🔎</span>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" value={this.state.filterValue} onChange={this.filterProps} placeholder=\"Prop Name\" aria-label=\"Prop Name\" aria-describedby=\"basic-addon1\" />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t<div class=\"mt-3 p-3\">\r\n\t\t\t\t\t\t<Table>\r\n\t\t\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<th width=\"15%\">Name</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"40%\">Description</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Cost</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"10%\">Type</th>\r\n\t\t\t\t\t\t\t\t\t<th width=\"25%\">Operations</th>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</thead>\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{propsList}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</Table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<ErrorNotifier />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\tasync componentDidMount() {\r\n\t\t$.ajax({\r\n\t\t\turl: \"/prop-management/props\",\r\n\t\t\tmethod: \"GET\",\r\n\t\t\theaders: {\r\n\t\t\t\t'Accept': 'application/json',\r\n\t\t\t\t'Content-Type': 'application/json',\r\n\t\t\t\t\"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n\t\t\t},\r\n\t\t\tsuccess: function (data) {\r\n\t\t\t\tthisObj.setState({ props: data.props, selectedProps: data.props, isLoading: false });\r\n\t\t\t},\r\n\t\t\terror: function (data) {\r\n\t\t\t\tErrorHandler.runError(data)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n}\r\n\r\nexport default PropsPage","import React from 'react';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../../Handler/ErrorHandler'\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier'\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, ButtonGroup } from 'reactstrap';\r\nimport AppNavbar from '../../AppNavbar';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass PropEdit extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            prop: {\r\n                id: \"\",\r\n                name: \"\",\r\n                description: \"\",\r\n                propType: \"\",\r\n                cost: \"\",\r\n                costType: \"\"\r\n            }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            url: `/prop-management/props/${this.props.match.params.id}`,\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ prop: data });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        const target = e.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let prop = { ...this.state.prop };\r\n\r\n        prop[name] = value;\r\n        this.setState({ prop: prop });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        $.ajax({\r\n            url: `/prop-management/props/${this.props.match.params.id}`,\r\n            contentType: \"application/json; charset=UTF-8\",\r\n            method: \"put\",\r\n            data: JSON.stringify(this.state.prop),\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.props.history.push('/prop-management/props');\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        const { prop: prop } = this.state;\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container>\r\n                <Form onSubmit={this.handleSubmit}>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"name\">Name</Label>\r\n                        <Input type=\"text\" name=\"name\" id=\"name\" value={prop.name || ''}\r\n                            onChange={this.handleChange} autoComplete=\"event\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Description</Label>\r\n                        <Input type=\"text\" name=\"description\" id=\"description\" value={prop.description || ''}\r\n                            onChange={this.handleChange} autoComplete=\"description\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"cost\">Cost (Cents)</Label>\r\n                        <Input type=\"number\" name=\"cost\" id=\"cost\" value={prop.cost || ''}\r\n                            onChange={this.handleChange} autoComplete=\"cost\" />\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Prop Type</Label><br />\r\n                        <ButtonGroup>\r\n                            <Button color={this.state.prop.propType == \"THING\" ? \"success\" : \"outline-success\"}\r\n                                onClick={this.handleChange} name=\"propType\" value=\"THING\" >Thing</Button>\r\n                            <Button color={this.state.prop.propType == \"PLACE\" ? \"success\" : \"outline-success\"}\r\n                                onClick={this.handleChange} name=\"propType\" value=\"PLACE\" >Place</Button>\r\n                        </ButtonGroup>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Label for=\"description\">Cost Type</Label><br />\r\n                        <ButtonGroup>\r\n                            <Button color={this.state.prop.costType == \"PIECE\" ? \"success\" : \"outline-success\"}\r\n                                onClick={this.handleChange} name=\"costType\" value=\"PIECE\" >Piece</Button>\r\n                            <Button color={this.state.prop.costType == \"DAY\" ? \"success\" : \"outline-success\"}\r\n                                onClick={this.handleChange} name=\"costType\" value=\"DAY\" >Day</Button>\r\n                        </ButtonGroup>\r\n                    </FormGroup>\r\n                    <FormGroup className=\"mt-3\">\r\n                        <Button color=\"success\" type=\"submit\">Save</Button>{' '}\r\n                        <Button color=\"secondary\" tag={Link} to=\"/prop-management/props\">Cancel</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default PropEdit","import axios from \"axios\"\r\nimport { map } from \"jquery\"\r\nimport React from \"react\"\r\nimport { Table, Button, Input, Container, Badge, ButtonGroup } from 'reactstrap'\r\nimport AppNavbar from '../../AppNavbar'\r\nimport ErrorHandler from '../../Handler/ErrorHandler'\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier'\r\nimport MoneyFormatter from '../../Formatter/MoneyFormatter'\r\nimport Waiter from '../../Waiter'\r\n\r\nlet thisObj\r\n\r\nclass MyProps extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            propOrders: [],\r\n            filteredPropOrders: [],\r\n            isLoading: true,\r\n            infoMode: true,\r\n            mode: \"ALL\",\r\n            filterName: \"\",\r\n            sortCost: \"None\"\r\n        }\r\n\r\n        this.cancelBook = this.cancelBook.bind(this)\r\n        this.toggleMode = this.toggleMode.bind(this)\r\n        this.changeMode = this.changeMode.bind(this)\r\n        this.filterPropOrders = this.filterPropOrders.bind(this)\r\n        this.changeFilterName = this.changeFilterName.bind(this)\r\n        this.changeSortCost = this.changeSortCost.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    changeSortCost() {\r\n        let value = this.state.sortCost;\r\n        switch (value) {\r\n            case \"None\": value = \"Asc\"\r\n                break;\r\n            case \"Asc\": value = \"Desc\"\r\n                break;\r\n            case \"Desc\": value = \"None\"\r\n                break;\r\n            default: value = \"def\"\r\n                break;\r\n        }\r\n\r\n        this.setState({ sortCost: value }, () => this.filterPropOrders())\r\n    }\r\n\r\n    changeFilterName(event) {\r\n        let value = event.target.value;\r\n\r\n        this.setState({ filterName: value }, () => this.filterPropOrders());\r\n    }\r\n\r\n    filterPropOrders() {\r\n        let filtered = this.state.propOrders;\r\n\r\n        if (this.state.mode != \"ALL\") {\r\n            filtered = filtered.filter(item => {\r\n                return item.status == this.state.mode\r\n            })\r\n        }\r\n\r\n        filtered = filtered.filter(item => {\r\n            return item.prop.name.includes(this.state.filterName)\r\n        })\r\n\r\n        if (this.state.sortCost == \"Asc\")\r\n            filtered = filtered.sort((a, b) => a.cost - b.cost)\r\n        else if (this.state.sortCost == \"Desc\")\r\n            filtered = filtered.sort((a, b) => b.cost - a.cost)\r\n\r\n        this.setState({ filteredPropOrders: filtered })\r\n    }\r\n\r\n    changeMode(event) {\r\n        let target = event.target;\r\n        this.setState({ mode: target.value }, () => { thisObj.filterPropOrders() })\r\n    }\r\n\r\n    cancelBook(id) {\r\n        axios({\r\n            method: 'delete',\r\n            url: `/arranger/props/ordered/${id}`,\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then((res) => {\r\n            let propOrders = this.state.propOrders;\r\n            let updatedPropOrders = propOrders.filter((item) => item.id != id);\r\n            this.setState({ propOrders: updatedPropOrders }, () => this.filterPropOrders())\r\n            ErrorHandler.runSuccess(res.data)\r\n        }).catch((err) => {\r\n            ErrorHandler.runStringMessage(\"Already deleted\")\r\n        })\r\n    }\r\n\r\n    toggleMode() {\r\n        this.setState({ infoMode: !this.state.infoMode })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoading) {\r\n            return <Waiter />\r\n        }\r\n\r\n        let propOrders = this.state.filteredPropOrders.map((propOrder) => {\r\n            let date;\r\n            let pieces;\r\n            let costType;\r\n            if (propOrder.orderedDate) {\r\n                date = new Date(propOrder.orderedDate).toLocaleDateString();\r\n                costType = \"DAY\"\r\n            } else {\r\n                pieces = propOrder.pieces\r\n                costType = \"PIECES\"\r\n            }\r\n\r\n            let status = null;\r\n            if (propOrder.status == \"ORDERED\") {\r\n                status = <span style={{ minWidth: \"100%\" }} class=\"badge bg-warning text-dark\">Ordered</span>\r\n            }\r\n            if (propOrder.status == \"ACCEPTED\") {\r\n                status = <span style={{ minWidth: \"100%\" }} class=\"badge bg-success\">Accepted</span>\r\n            }\r\n            if (propOrder.status == \"DELIVERED\") {\r\n                status = <span style={{ minWidth: \"100%\" }} class=\"badge bg-secondary\">Delivered</span>\r\n            }\r\n\r\n            if (this.state.infoMode) {\r\n                return <tr>\r\n                    <td>{propOrder.prop.name}</td>\r\n                    <td>{costType == \"DAY\" ? date : pieces}</td>\r\n                    <td>{MoneyFormatter.fromatDollars(propOrder.cost)}</td>\r\n                    <td>{status}</td>\r\n                    <td><Button color=\"danger\" propOrderId={propOrder.id} onClick={() => this.cancelBook(propOrder.id)}\r\n                        disabled={propOrder.status != \"ORDERED\"} style={{ minWidth: \"100%\" }}>\r\n                        Cancel booking\r\n                    </Button></td>\r\n                </tr>\r\n            }\r\n            return <tr>\r\n                <td>{propOrder.prop.name}</td>\r\n                <td>{propOrder.comment}</td>\r\n                <td>{propOrder.answer}</td>\r\n                <td><Button color=\"danger\" propOrderId={propOrder.id} onClick={() => this.cancelBook(propOrder.id)}\r\n                    disabled={propOrder.status != \"ORDERED\"} style={{ minWidth: \"100%\" }}>\r\n                    Cancel booking\r\n                </Button></td>\r\n            </tr>\r\n        })\r\n\r\n        let modeView;\r\n\r\n        if (this.state.infoMode) {\r\n            modeView = <tr>\r\n                <th width=\"20%\">Prop Name</th>\r\n                <th width=\"20%\">Pieces</th>\r\n                <th width=\"20%\">Total Cost</th>\r\n                <th width=\"20%\">Status</th>\r\n                <th width=\"20%\">Operations</th>\r\n            </tr>\r\n        } else {\r\n            modeView = <tr>\r\n                <th width=\"20%\">Prop name</th>\r\n                <th width=\"40%\">Comment</th>\r\n                <th width=\"40%\">Answer</th>\r\n                <th width=\"20%\">Operations</th>\r\n            </tr>\r\n        }\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <div class=\"mt-3 ms-3\">\r\n                    <Button style={{ minWidth: '15%' }}\r\n                        onClick={this.toggleMode} color={this.state.infoMode ? \"success\" : \"warning\"}>\r\n                        {this.state.infoMode ? \"Info Mode\" : \"Comment Mode\"}\r\n                    </Button>\r\n                </div>\r\n                <div class=\"mt-3 ms-3\" style={{ \"display\": \"flex\" }}>\r\n                    <div class=\"input-group\" style={{ maxWidth: '55%' }}>\r\n                        <div class=\"input-group-prepend\">\r\n                            <span class=\"input-group-text\" id=\"basic-addon1\">🔎</span>\r\n                        </div>\r\n                        <input type=\"text\" class=\"form-control\" value={this.state.filterName} onChange={this.changeFilterName} placeholder=\"Prop Name\" aria-label=\"Category Name\" aria-describedby=\"basic-addon1\" />\r\n                    </div>\r\n                    <ButtonGroup className='ms-3'>\r\n                        <Button onClick={this.changeMode} color={this.state.mode == \"ALL\" ? \"success\" : \"outline-success\"} value=\"ALL\" >All</Button>\r\n                        <Button onClick={this.changeMode} color={this.state.mode == \"ORDERED\" ? \"success\" : \"outline-success\"} value=\"ORDERED\">Ordered</Button>\r\n                        <Button onClick={this.changeMode} color={this.state.mode == \"ACCEPTED\" ? \"success\" : \"outline-success\"} value=\"ACCEPTED\">Accepted</Button>\r\n                        <Button onClick={this.changeMode} color={this.state.mode == \"DELIVERED\" ? \"success\" : \"outline-success\"} value=\"DELIVERED\">Delivered</Button>\r\n                    </ButtonGroup>\r\n                    <Button className=\"ms-3\"\r\n                        onClick={this.changeSortCost}\r\n                        color={this.state.sortCost == \"None\" ? \"outline-success\" : \"success\"}>\r\n                        Cost Sort {this.state.sortCost == \"None\" ? \"\" : this.state.sortCost == \"Asc\" ? \"🔺\": \"🔻\"}\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Table className=\"mt-4 ms-3\">\r\n                        <thead>\r\n                            {modeView}\r\n                        </thead>\r\n                        <tbody>\r\n                            {propOrders}\r\n                        </tbody>\r\n                    </Table>\r\n                </div>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios({\r\n            method: 'get',\r\n            url: `/arranger/props/ordered`,\r\n            headers: {\r\n                'Content-Type': \"application/json\",\r\n                'Authorization': localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n        }).then((res) => {\r\n            this.setState({ propOrders: res.data.propOrders, isLoading: false }, () => this.filterPropOrders())\r\n        })\r\n    }\r\n}\r\n\r\nexport default MyProps","import React, { Component } from 'react';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier.js';\r\nimport ErrorHandler from '../../Handler/ErrorHandler.js';\r\nimport AppNavbar from '../../AppNavbar.js';\r\nimport { Container, Alert } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col, Input } from 'reactstrap';\r\nimport { ButtonGroup, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport $ from \"jquery\"\r\nimport MoneyFormatter from '../../Formatter/MoneyFormatter.js';\r\nimport Waiter from '../../Waiter.js';\r\nimport CreateProp from \"./CreateProp\"\r\nimport InstantFormatter from '../../Formatter/InstantFormatter.js';\r\n\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nlet thisObj\r\n\r\nclass PropOrdersHandler extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            propOrders: [],\r\n            filteredPropOrders: [],\r\n            isLoading: true,\r\n            selectedPropOrders: new Map(),\r\n            mode: \"ALL\",\r\n            answerMode: false,\r\n        };\r\n\r\n        thisObj = this;\r\n        this.select = this.select.bind(this)\r\n        this.bulkAccept = this.bulkAccept.bind(this)\r\n        this.bulkDelete = this.bulkDelete.bind(this)\r\n        this.bulkDeliver = this.bulkDeliver.bind(this)\r\n        this.updateOrders = this.updateOrders.bind(this)\r\n        this.changeMode = this.changeMode.bind(this)\r\n        this.filterPropOrders = this.filterPropOrders.bind(this)\r\n        this.toggleAnswerMode = this.toggleAnswerMode.bind(this)\r\n        this.bulkRollback = this.bulkRollback.bind(this)\r\n        // this.changePropOrderAnswer = this.changePropOrderAnswer.bind(this)\r\n    }\r\n\r\n    toggleAnswerMode() {\r\n        this.setState({ answerMode: !this.state.answerMode })\r\n    }\r\n\r\n    async remove(id) {\r\n        $.ajax({\r\n            url: `/prop-management/orders/${id}`,\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                // let updatedPropOrders = [...thisObj.state.propOrders].filter(i => i.id !== id);\r\n                // thisObj.setState({ propOrders: updatedPropOrders }, () => {thisObj.filterPropOrders()});\r\n                thisObj.updateOrders()\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    select(propOrder) {\r\n        let selectedPropOrders = this.state.selectedPropOrders;\r\n\r\n        if (!selectedPropOrders.get(propOrder.id)) {\r\n            selectedPropOrders.set(propOrder.id, propOrder)\r\n        }\r\n        else {\r\n            selectedPropOrders.delete(propOrder.id)\r\n        }\r\n\r\n        this.setState({ selectedPropOrders: selectedPropOrders })\r\n    }\r\n\r\n    bulkAccept() {\r\n        let map = this.state.selectedPropOrders;\r\n\r\n\r\n        map.forEach((value, key) => {\r\n            let id = key;\r\n            let dto = {\r\n                message: $(`#answer${key}`).val(),\r\n                status: \"ACCEPTED\"\r\n            }\r\n\r\n            $.ajax({\r\n                url: `/prop-management/orders/${id}`,\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                },\r\n                data: JSON.stringify(dto),\r\n                success: function (data) {\r\n                    // let updatedPropOrders = [...thisObj.state.propOrders].filter(i => i.id !== id);\r\n                    // thisObj.setState({ propOrders: updatedPropOrders });\r\n                    thisObj.updateOrders();\r\n                    ErrorHandler.runSuccess(data)\r\n                },\r\n                error: function (data) {\r\n                    ErrorHandler.runError(data)\r\n                }\r\n            })\r\n        })\r\n\r\n        map.clear()\r\n\r\n        this.setState({ selectedPropOrders: map }, () => this.updateOrders())\r\n    }\r\n\r\n    bulkDeliver() {\r\n        let map = this.state.selectedPropOrders;\r\n\r\n\r\n        map.forEach((value, key) => {\r\n            let id = key;\r\n            let dto = {\r\n                message: $(`#answer${key}`).val(),\r\n                status: \"DELIVERED\"\r\n            }\r\n\r\n            $.ajax({\r\n                url: `/prop-management/orders/${id}`,\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                },\r\n                data: JSON.stringify(dto),\r\n                success: function (data) {\r\n                    // let updatedPropOrders = [...thisObj.state.propOrders].filter(i => i.id !== id);\r\n                    // thisObj.setState({ propOrders: updatedPropOrders });\r\n                    thisObj.updateOrders();\r\n                    ErrorHandler.runSuccess(data)\r\n                },\r\n                error: function (data) {\r\n                    ErrorHandler.runError(data)\r\n                }\r\n            })\r\n        })\r\n\r\n        map.clear()\r\n\r\n        this.setState({ selectedPropOrders: map }, () => this.updateOrders())\r\n    }\r\n\r\n    bulkDelete() {\r\n        let map = this.state.selectedPropOrders;\r\n\r\n        map.forEach((value, key) => {\r\n            this.remove(key)\r\n        })\r\n\r\n        map.clear()\r\n\r\n        this.setState({ selectedPropOrders: map })\r\n    }\r\n\r\n\r\n    bulkRollback() {\r\n        let map = this.state.selectedPropOrders;\r\n\r\n\r\n        map.forEach((value, key) => {\r\n            let id = key;\r\n            let dto = {\r\n                message: $(`#answer${key}`).val(),\r\n                status: \"ORDERED\"\r\n            }\r\n\r\n            $.ajax({\r\n                url: `/prop-management/orders/${id}`,\r\n                method: \"PUT\",\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n                },\r\n                data: JSON.stringify(dto),\r\n                success: function (data) {\r\n                    // let updatedPropOrders = [...thisObj.state.propOrders].filter(i => i.id !== id);\r\n                    // thisObj.setState({ propOrders: updatedPropOrders });\r\n                    thisObj.updateOrders();\r\n                    ErrorHandler.runSuccess(data)\r\n                },\r\n                error: function (data) {\r\n                    ErrorHandler.runError(data)\r\n                }\r\n            })\r\n        })\r\n\r\n        map.clear()\r\n\r\n        this.setState({ selectedPropOrders: map }, () => this.updateOrders())\r\n    }\r\n\r\n    changeMode(event) {\r\n        let target = event.target;\r\n        this.setState({ mode: target.value }, () => { thisObj.filterPropOrders() })\r\n    }\r\n\r\n    render() {\r\n        const { isLoading } = this.state;\r\n        let propOrders = this.state.filteredPropOrders\r\n\r\n        if (localStorage.getItem(\"login\") == null || localStorage.getItem(\"role\") !== roleAdmin || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        if (isLoading) {\r\n            return <Waiter />;\r\n        }\r\n\r\n        const propOrdersList = propOrders.map(propOrder => {\r\n\r\n            if (!this.state.answerMode) {\r\n\r\n                let status;\r\n                if (propOrder.status == \"ORDERED\")\r\n                    status = <span style={{minWidth:\"100%\"}} class=\"badge bg-warning text-dark\">Ordered</span>\r\n                else if (propOrder.status == \"ACCEPTED\")\r\n                        status = <span style={{minWidth:\"100%\"}} class=\"badge bg-success\">Accepted</span>\r\n                else if (propOrder.status == \"DELIVERED\")\r\n                            status = <span style={{minWidth:\"100%\"}} class=\"badge bg-secondary\">Delivered</span>\r\n\r\n                return <tr key={propOrder.id} class={this.state.selectedPropOrders.get(propOrder.id) ? \"bg-success\" : \"\"} >\r\n                    <td><Input\r\n                        type=\"checkbox\"\r\n                        onChange={() => this.select(propOrder)}\r\n                        checked={this.state.selectedPropOrders.get(propOrder.id)}\r\n                    /></td>\r\n                    <td onClick={() => this.select(propOrder)}>{propOrder.prop.name}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{propOrder.pieces ? propOrder.pieces : InstantFormatter.formatInstantMs(propOrder.orderedDate)}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{MoneyFormatter.fromatDollars(propOrder.cost)}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{InstantFormatter.formatInstant(propOrder.creationTime)}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{propOrder.userLogin}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{status}</td>\r\n                </tr>\r\n            } else {\r\n                return <tr key={propOrder.id} class={this.state.selectedPropOrders.get(propOrder.id) ? \"bg-success\" : \"\"} >\r\n                    <td><Input\r\n                        type=\"checkbox\"\r\n                        onChange={() => this.select(propOrder)}\r\n                        checked={this.state.selectedPropOrders.get(propOrder.id)}\r\n                    /></td>\r\n                    <td onClick={() => this.select(propOrder)}>{propOrder.prop.name}</td>\r\n                    <td onClick={() => this.select(propOrder)}>{propOrder.comment}</td>\r\n                    <td><Input id={\"answer\" + propOrder.id} defaultValue={propOrder.answer}></Input></td>\r\n                </tr>\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <div class=\"mt-3 p-3\">\r\n                        <Button disabled={this.state.selectedPropOrders.size == 0} color='danger' onClick={this.bulkDelete}>Bulk Delete</Button>\r\n                        <Button disabled={this.state.selectedPropOrders.size == 0} className=\"ms-3\" color='warning' onClick={this.bulkRollback}>Bulk Rollback</Button>\r\n                        <Button disabled={this.state.selectedPropOrders.size == 0} className=\"ms-3\" color='success' onClick={this.bulkAccept}>Bulk Accept</Button>\r\n                        <Button disabled={this.state.selectedPropOrders.size == 0} className=\"ms-3\" color='success' onClick={this.bulkDeliver}>Bulk Deliver</Button>\r\n                        <Button className=\"ms-3\" color={this.state.answerMode ? \"success\" : \"outline-success\"} onClick={this.toggleAnswerMode}>Answer Mode</Button>\r\n                        <ButtonGroup className='ms-3'>\r\n                            <Button onClick={this.changeMode} color={this.state.mode == \"ALL\" ? \"success\" : \"outline-success\"} value=\"ALL\" >All</Button>\r\n                            <Button onClick={this.changeMode} color={this.state.mode == \"ORDERED\" ? \"success\" : \"outline-success\"} value=\"ORDERED\">Ordered</Button>\r\n                            <Button onClick={this.changeMode} color={this.state.mode == \"ACCEPTED\" ? \"success\" : \"outline-success\"} value=\"ACCEPTED\">Accepted</Button>\r\n                            <Button onClick={this.changeMode} color={this.state.mode == \"DELIVERED\" ? \"success\" : \"outline-success\"} value=\"DELIVERED\">Delivered</Button>\r\n                        </ButtonGroup>\r\n                    </div>\r\n                    <div class=\"mt-3 p-3\">\r\n                        <Table>\r\n                            <thead>\r\n\r\n                                {!this.state.answerMode ? <tr>\r\n                                    <th width=\"3%\"></th>\r\n                                    <th width=\"15%\">Name</th>\r\n                                    <th width=\"10%\">Pieces/Date</th>\r\n                                    <th width=\"10%\">Cost</th>\r\n                                    <th width=\"15%\">Creation Time</th>\r\n                                    <th width=\"15%\">Requester</th>\r\n                                    <th width=\"15%\">Status</th>\r\n                                </tr> : <tr>\r\n                                    <th width=\"3%\"></th>\r\n                                    <th width=\"15%\">Name</th>\r\n                                    <th width=\"41%\">Comment</th>\r\n                                    <th width=\"41%\">Answer</th>\r\n                                </tr>}\r\n                            </thead>\r\n                            <tbody>\r\n                                {propOrdersList}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n                </Container>\r\n                <ErrorNotifier />\r\n            </div>\r\n        );\r\n    }\r\n\r\n    async componentDidMount() {\r\n        this.updateOrders();\r\n    }\r\n\r\n    updateOrders() {\r\n        $.ajax({\r\n            url: \"/prop-management/orders\",\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ propOrders: data.propOrders, isLoading: false }, () => { thisObj.filterPropOrders() });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    filterPropOrders() {\r\n        let filtered = this.state.propOrders;\r\n\r\n        if (this.state.mode != \"ALL\") {\r\n            filtered = filtered.filter(item => {\r\n                return item.status == this.state.mode\r\n            })\r\n        }\r\n\r\n        this.setState({ filteredPropOrders: filtered })\r\n    }\r\n}\r\n\r\nexport default PropOrdersHandler","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, Form, FormGroup, Input, Label, TabContent, TabPane, Nav, NavItem, NavLink, } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from \"jquery\"\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport classnames from 'classnames';\r\n\r\nlet thisObj\r\n\r\nclass MySettings extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {},\r\n            oldPassword: null,\r\n            newPassword: null,\r\n            newPasswordRepeat: null,\r\n            activeTab: \"1\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.becomeArranger = this.becomeArranger.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handlePasswordSubmit = this.handlePasswordSubmit.bind(this);\r\n        this.toggle = this.toggle.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    \r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        $.ajax({\r\n            url: '/me/personalData',\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ user: data });\r\n            }\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n        let user = { ...this.state.user };\r\n\r\n        if (name === 'enabled') {\r\n            value = target.checked\r\n        }\r\n\r\n        user[name] = value;\r\n        this.setState({ user: user });\r\n    }\r\n\r\n    async handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            firstName: this.state.user.firstName,\r\n            lastName: this.state.user.lastName,\r\n            email: this.state.user.email\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/me/personalData',\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(data),\r\n            success: function (data) {\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    becomeArranger() {\r\n        $.ajax({\r\n            url: \"/me/becomeArranger\",\r\n            method: \"PUT\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                ErrorHandler.runSuccess(data)\r\n                let waitingNotifier = \"<div class=\\\"badge bg-success\\\">Waiting for an approval of arranger becoming</div>\"\r\n                $(\"#arrangerBecoming\").html(waitingNotifier)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    handlePasswordChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        let value = target.value;\r\n\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    async handlePasswordSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        let data = {\r\n            oldPassword: this.state.oldPassword,\r\n            newPassword: this.state.newPassword,\r\n            newPasswordRepeat: this.state.newPasswordRepeat\r\n        }\r\n\r\n        $.ajax({\r\n            url: '/me/password',\r\n            method: \"PUT\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            data: JSON.stringify(data),\r\n            success: function (data) {\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isAnyRole((localStorage.getItem(\"role\")))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const { user: user } = this.state;\r\n\r\n        let arrangerBecoming = user.arrangerRoleRequested\r\n            ? <div class=\"badge bg-success\">Waiting for an approval of arranger becoming</div>\r\n            : Constants.isArrangerOrHigher(localStorage.getItem(\"role\")) ? \"\" : <Button color=\"success\" style={{minWidth:\"100%\"}} onClick={this.becomeArranger}>Become Arranger</Button>\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container>\r\n                <div className=\"p-3\">\r\n                    <Nav tabs >\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                onClick={() => { this.toggle('1'); }}\r\n                            >\r\n                                Personal Data 📗\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '2' })}\r\n                                onClick={() => { this.toggle('2'); }}\r\n                            >\r\n                                Password ⚙️\r\n                            </NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink\r\n                                className={classnames({ active: this.state.activeTab === '3' })}\r\n                                onClick={() => { this.toggle('3'); }}\r\n                            >\r\n                                Arranger 🎍\r\n                            </NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                    <TabContent activeTab={this.state.activeTab}>\r\n                        <TabPane tabId=\"1\">\r\n                            <Form onSubmit={this.handleSubmit}>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"email\">Email</Label>\r\n                                    <Input type=\"text\" name=\"email\" id=\"email\" value={user.email || ''}\r\n                                        onChange={this.handleChange} autoComplete=\"email\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"firstName\">First Name</Label>\r\n                                    <Input type=\"text\" name=\"firstName\" id=\"firstName\" value={user.firstName || ''}\r\n                                        onChange={this.handleChange} autoComplete=\"firstName\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"lastName\">Last Name</Label>\r\n                                    <Input type=\"text\" name=\"lastName\" id=\"lastName\" value={user.lastName || ''}\r\n                                        onChange={this.handleChange} autoComplete=\"lastName\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <Button color=\"success\" style={{minWidth:\"100%\"}} type=\"submit\">Save</Button>{' '}\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"2\">\r\n                            <Form onSubmit={this.handlePasswordSubmit}>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"oldPassword\">Old Password</Label>\r\n                                    <Input type=\"password\" name=\"oldPassword\" id=\"oldPassword\" value={this.state.oldPassword || ''}\r\n                                        onChange={this.handlePasswordChange} autoComplete=\"oldPassword\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"newPassword\">New password</Label>\r\n                                    <Input type=\"password\" name=\"newPassword\" id=\"newPassword\" value={this.state.newPassword || ''}\r\n                                        onChange={this.handlePasswordChange} autoComplete=\"newPassword\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-3\">\r\n                                    <Label for=\"newPasswordRepeat\">New Password Repeat</Label>\r\n                                    <Input type=\"password\" name=\"newPasswordRepeat\" id=\"newPasswordRepeat\" value={this.state.newPasswordRepeat || ''}\r\n                                        onChange={this.handlePasswordChange} autoComplete=\"newPasswordRepeat\" />\r\n                                </FormGroup>\r\n                                <FormGroup className=\"mt-4\">\r\n                                    <Button color=\"success\" style={{minWidth:\"100%\"}} type=\"submit\">Change password</Button>{' '}\r\n                                </FormGroup>\r\n                            </Form>\r\n                        </TabPane>\r\n                        <TabPane tabId=\"3\">\r\n                            <div class=\"mt-3\" id=\"arrangerBecoming\">\r\n                                {arrangerBecoming}\r\n                            </div>\r\n                        </TabPane>\r\n                    </TabContent>\r\n                </div>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(MySettings);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card, Row } from 'react-bootstrap'\r\nimport { Badge, CardImgOverlay, Input, InputGroup } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport Waiter from '../Waiter';\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj;\r\n\r\nclass MyPhotos extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: localStorage.getItem(\"login\"),\r\n            id: localStorage.getItem(\"id\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            user: null,\r\n            isLoading: true,\r\n        }\r\n\r\n        this.upload = this.upload.bind(this)\r\n        this.setAvatar = this.setAvatar.bind(this)\r\n        this.removePhoto = this.removePhoto.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"Get\",\r\n            url: \"/me\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ user: data, isLoading: false });\r\n\r\n                Constants.updateRole(data.role)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    setAvatar(event) {\r\n        let photoInDto = {\r\n            id: event.target.getAttribute(\"photoId\")\r\n        }\r\n\r\n        $.ajax({\r\n            url: \"/me/avatar\",\r\n            method: \"PUT\",\r\n            data: JSON.stringify(photoInDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function () {\r\n                window.location.reload();\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n    removePhoto(event) {\r\n        let photoInDto = {\r\n            id: event.target.getAttribute(\"photoId\")\r\n        }\r\n\r\n        $.ajax({\r\n            url: \"/me/photos\",\r\n            method: \"DELETE\",\r\n            data: JSON.stringify(photoInDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function () {\r\n                window.location.reload();\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    upload(event) {\r\n        let target = event.target\r\n        console.log(target)\r\n        const fileInput = document.querySelector(\"#userImages\");\r\n        const formData = new FormData();\r\n\r\n        for (let photo of fileInput.files) {\r\n            formData.append('photos', photo);\r\n        }\r\n\r\n        fetch(\"/resources/users/\" + this.state.id, {\r\n            method: \"POST\",\r\n            body: formData,\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            }\r\n        }).then(function () {\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isAnyRole((localStorage.getItem(\"role\")))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const { user, isLoading } = this.state;\r\n\r\n        if (isLoading) {\r\n            return <Waiter />;\r\n        }\r\n\r\n        console.log(Boolean(this.state.login))\r\n        if (this.state.login == null || this.state.role == null || this.state.id == null) {\r\n            return <div><h1>Unauthorized</h1></div>\r\n        }\r\n\r\n        console.log(this.state.user)\r\n\r\n        const photosList = this.state.user.photos.map(photo => {\r\n            return <Card border=\"light\">\r\n                <Card.Img src={\"/resources/users/\" + this.state.user.id + \"/photos/\" + photo.id} />\r\n                <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                    {this.state.user.avatar.id == photo.id ? <span className='mt-3 border-bottom border-success' style={{ minWidth: \"79%\" }}>Current Avatar</span> :\r\n                        <Button onClick={this.setAvatar} photoId={photo.id} variant=\"outline-success\" className=\"mt-1\" style={{ minWidth: \"79%\" }}>Set as Avatar</Button>\r\n                    }\r\n                    <Button onClick={this.removePhoto} photoId={photo.id} variant=\"outline-danger\" className=\"mt-1\" style={{ minWidth: \"20%\" }}>❌</Button>\r\n                </div>\r\n            </Card>\r\n        })\r\n\r\n        const avatar = user.avatar !== null ? <Card>\r\n            <Card.Img src={\"/resources/users/\" + user.id + \"/photos/\" + user.avatar.id} />\r\n        </Card>\r\n            : \"\"\r\n\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <div className='p-3'>\r\n                    <div>\r\n                        <Input color=\"primary\" type=\"file\" name=\"image\" id={\"userImages\"} multiple />\r\n                        <Button onClick={this.upload} variant=\"success\"> Upload</Button>\r\n                    </div>\r\n                    <Row xs={1} md={4} className=\"mt-2 g-4\">\r\n                        {photosList}\r\n                    </Row>\r\n                </div>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withRouter(MyPhotos);","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Button, Container, ButtonGroup, Table, Form, Input, InputGroup, FormGroup, Label } from 'reactstrap';\r\nimport { Card, CardGroup, Col, Row, Alert, ToggleButton } from 'react-bootstrap'\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $, { post } from 'jquery';\r\nimport { ScrollSpy } from 'bootstrap';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport MoneyFormatter from '../Formatter/MoneyFormatter'\r\n\r\nlet thisObj;\r\n\r\nclass MyJoinedEvents extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: localStorage.getItem(\"login\"),\r\n            id: localStorage.getItem(\"id\"),\r\n            role: localStorage.getItem(\"role\"),\r\n            events: [],\r\n            filterField: null,\r\n            filterValue: null,\r\n            filterOperation: null,\r\n            sortOrder: null,\r\n            sortField: null,\r\n            eventState: null,\r\n            categoriesNames: [],\r\n            searchBarEnabled: false,\r\n            selectedValues: [],\r\n            options: [],\r\n            multiselectRefTracker: React.createRef()\r\n        }\r\n\r\n        this.seacrch = this.seacrch.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.setFilterValue = this.setFilterValue.bind(this)\r\n        this.setFilterOperation = this.setFilterOperation.bind(this)\r\n        this.setSortField = this.setSortField.bind(this);\r\n        this.setSortOrder = this.setSortOrder.bind(this);\r\n        this.setEventState = this.setEventState.bind(this);\r\n        this.clearFilter = this.clearFilter.bind(this)\r\n        this.handleCategoriesChange = this.handleCategoriesChange.bind(this);\r\n        this.toggleSearchBar = this.toggleSearchBar.bind(this)\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n\r\n        thisObj = this\r\n    }\r\n\r\n    toggleSearchBar() {\r\n        this.setState({ searchBarEnabled: !this.state.searchBarEnabled })\r\n    }\r\n\r\n    onSelect(selectedList, selectedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n        categoriesNames.push(selectedItem.name);\r\n        this.setState({ categoriesNames: categoriesNames })\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    onRemove(selectedList, removedItem) {\r\n        let categoriesNames = this.state.categoriesNames;\r\n\r\n        categoriesNames = categoriesNames.filter(item => {\r\n            return item != removedItem.name\r\n        });\r\n\r\n        this.setState({ categoriesNames: categoriesNames })\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/me/joined\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n        $.ajax({\r\n            method: \"GET\",\r\n            url: \"/categories\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ options: data.categories, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n    }\r\n\r\n    leave(eventId) {\r\n\r\n        $.ajax({\r\n            method: \"PUT\",\r\n            url: \"/events/\" + eventId + \"/leave\",\r\n            contentType: \"application/json\",\r\n            headers: {\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                let events = thisObj.state.events.filter(item => item.id != eventId);\r\n\r\n                thisObj.setState({events:events})\r\n\r\n                ErrorHandler.runSuccess(data)\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isAnyRole((localStorage.getItem(\"role\")))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        const eventList = this.state.events.map(event => {\r\n\r\n            var startInstant = new Date(event.startInstant * 1000);\r\n            startInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var endInstant = new Date(event.endInstant * 1000);\r\n            endInstant.toLocaleString('en-GB', { hour12: false })\r\n\r\n            var categories = event.categoriesNames.map(category => {\r\n                return <Badge className=\"bg-success me-1\" style={{ minWidth: \"23%\" }}>{category}</Badge>\r\n            })\r\n\r\n            let photosLength = event.photos.length\r\n            let photoSrc = \"\"\r\n            if (photosLength > 0 && event.preview != null) {\r\n                photoSrc = \"/resources/events/\" + event.id + \"/photos/\" + event.preview.id;\r\n            }\r\n\r\n            let eventState = \"\"\r\n            if (event.eventState == \"WAITING_FOR_START\") {\r\n                eventState =\r\n                    <Alert variant=\"warning\" className=\"mb-0\">Waiting for start</Alert>\r\n            } else if (event.eventState == \"STARTED\") {\r\n                eventState =\r\n                    <Alert variant=\"success\" className=\"mb-0\">Started</Alert>\r\n            } else if (event.eventState == \"FINISHED\") {\r\n                eventState =\r\n                    <Alert variant=\"danger\" className=\"mb-0\">Finished</Alert>\r\n            } else {\r\n                eventState =\r\n                    <Alert variant=\"secondary\" className=\"mb-0\">Closed</Alert>\r\n            }\r\n\r\n            return <Col>\r\n            <Card>\r\n                {eventState}\r\n                <Card.Img variant=\"top\" src={photoSrc} />\r\n                <Card.Body>\r\n                    <Card.Title>{event.name}</Card.Title>\r\n                    <Card.Text>{event.description}</Card.Text>\r\n                    <div className='mb-3'>\r\n                        {categories}\r\n                    </div>\r\n                    <Link to={\"/events/\" + event.id}>View more</Link>\r\n                    <Button color=\"outline-success\" onClick={() => this.leave(event.id)} className=\"mt-3\" style={{minWidth:\"100%\"}}>Leave {event.price ? \"+\" + MoneyFormatter.fromatDollars(event.price):\"\"}</Button>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    <div>\r\n                        Starts at {startInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                    <div>\r\n                        Finishes at {endInstant.toLocaleString('en-GB', { hour12: false })}\r\n                    </div>\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n        });\r\n\r\n        let toggler = <div class=\"input-group\" style={{ display: \"flex\", justifyContent: \"left\" }}>\r\n            <div class=\"input-group-prepend\">\r\n                <button class={this.state.searchBarEnabled ? \"btn btn-success\" : \"btn btn-outline-success\"} id=\"basic-addon1\" onClick={this.toggleSearchBar}>🔎</button>\r\n            </div>\r\n        </div>\r\n\r\n        return (<div>\r\n            <AppNavbar />\r\n            <Container fluid>\r\n                <Row>\r\n                    {toggler}\r\n                </Row>\r\n                <Row className=\"mt-3\">\r\n                    {this.state.searchBarEnabled ? this.searchBar() : \"\"}\r\n                </Row>\r\n                <Row xs={1} md={4} className=\"g-4\">\r\n                    {eventList}\r\n                </Row>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n        );\r\n    }\r\n\r\n    async seacrch() {\r\n        let queryEventDto = {\r\n            filterField: this.state.filterField,\r\n            filterValue: this.state.filterValue,\r\n            filterOperation: this.state.filterOperation,\r\n            sortField: this.state.sortField,\r\n            sortOrder: this.state.sortOrder,\r\n            eventState: this.state.eventState,\r\n            categoriesNames: this.state.categoriesNames.map(function (el) {\r\n                return el.trim();\r\n            }).filter(function (el) {\r\n                return el !== \"\" && el !== null;\r\n            })\r\n        }\r\n\r\n        $.ajax({\r\n            method: \"POST\",\r\n            url: \"/me/joined\",\r\n            data: JSON.stringify(queryEventDto),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": localStorage.getItem(\"tokenType\") + \" \" + localStorage.getItem(\"accessToken\")\r\n            },\r\n            success: function (data) {\r\n                thisObj.setState({ events: data.events, isLoading: false });\r\n            },\r\n            error: function (data) {\r\n                ErrorHandler.runError(data)\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    setFilterValue(event) {\r\n        this.setState({ filterField: event.target.getAttribute(\"filterField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setFilterOperation(event) {\r\n        this.setState({ filterOperation: event.target.getAttribute(\"filterOperation\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortOrder(event) {\r\n        this.setState({ sortOrder: event.target.getAttribute(\"sortOrder\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setSortField(event) {\r\n        this.setState({ sortField: event.target.getAttribute(\"sortField\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    setEventState(event) {\r\n        this.setState({ eventState: event.target.getAttribute(\"eventState\") });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const value = target.value\r\n        const name = target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    handleCategoriesChange(event) {\r\n        const target = event.target;\r\n        let value = target.value\r\n\r\n        if (value !== null && value !== \"\") {\r\n            this.setState({\r\n                categoriesNames: value.split(','),\r\n            });\r\n        } else {\r\n            this.setState({ categoriesNames: [] })\r\n        }\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    async clearFilter() {\r\n\r\n        this.setState({ filterField: null });\r\n        this.setState({ filterValue: \"\" });\r\n        this.setState({ filterOperation: null });\r\n        this.setState({ sortOrder: null });\r\n        this.setState({ sortField: null });\r\n        this.setState({ eventState: null });\r\n        this.setState({ categoriesNames: [] });\r\n        await this.state.multiselectRefTracker.current.resetSelectedValues()\r\n\r\n        setTimeout(this.seacrch, 100);\r\n    }\r\n\r\n    searchBar() {\r\n        return <Form className=\"mb-3\">\r\n\r\n            <Button className=\"mb-3\"\r\n                onClick={this.clearFilter}\r\n                color=\"outline-secondary\">\r\n                Clear Filter\r\n            </Button>\r\n\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }} className=\"mb-3\">\r\n                <Multiselect\r\n                    options={this.state.options} // Options to display in the dropdown\r\n                    selectedValues={this.state.selectedValues} // Preselected value to persist in dropdown\r\n                    onSelect={this.onSelect} // Function will trigger on select event\r\n                    onRemove={this.onRemove} // Function will trigger on remove event\r\n                    displayValue=\"name\"  // Property name to display in the dropdown options\r\n                    ref={this.state.multiselectRefTracker}\r\n                />\r\n\r\n                {/* <Input onChange={this.handleCategoriesChange} value={this.state.categoriesNames}\r\n                    placeholder=\"Enter categories separated by comma\" style={{ maxWidth: \"25%\" }}></Input> */}\r\n            </div>\r\n\r\n            <FormGroup className=\"mb-3\">\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        eventState=\"WAITING_FOR_START\"\r\n                        variant={this.state.eventState === \"WAITING_FOR_START\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Waiting\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"STARTED\"\r\n                        variant={this.state.eventState === \"STARTED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Started\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"FINISHED\"\r\n                        variant={this.state.eventState === \"FINISHED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Finished\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        eventState=\"CLOSED\"\r\n                        variant={this.state.eventState == \"CLOSED\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setEventState}>\r\n                        Closed\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup className=\"mb-3\" >\r\n                <div style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortField=\"name\"\r\n                        variant={this.state.sortField === \"name\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Name\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"description\"\r\n                        variant={this.state.sortField === \"description\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Description\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"startInstant\"\r\n                        variant={this.state.sortField === \"startInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        Start Instant\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortField=\"endInstant\"\r\n                        variant={this.state.sortField === \"endInstant\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortField}>\r\n                        End Instant\r\n                    </ToggleButton>\r\n                </div>\r\n\r\n                <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                    <ToggleButton\r\n                        sortOrder=\"ASC\"\r\n                        variant={this.state.sortOrder === \"ASC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Ascend\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        sortOrder=\"DESC\"\r\n                        variant={this.state.sortOrder === \"DESC\" ? \"success\" : \"outline-success\"}\r\n                        onClick={this.setSortOrder}>\r\n                        Descend\r\n                    </ToggleButton>\r\n                </div>\r\n            </FormGroup>\r\n\r\n            <FormGroup >\r\n\r\n                <div style={{ display: \"flex\", justifyContent: \"left\" }} className=\"mb-3\">\r\n                    <div style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterField=\"name\"\r\n                            variant={this.state.filterField === \"name\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Name\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterField=\"description\"\r\n                            variant={this.state.filterField === \"description\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterValue}>\r\n                            Description\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <div class=\"ms-3\" style={{ display: \"inline\" }}>\r\n                        <ToggleButton\r\n                            filterOperation=\"LIKE\"\r\n                            variant={this.state.filterOperation === \"LIKE\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Like\r\n                        </ToggleButton>\r\n                        <ToggleButton\r\n                            filterOperation=\"EQUAL\"\r\n                            variant={this.state.filterOperation === \"EQUAL\" ? \"success\" : \"outline-success\"}\r\n                            onClick={this.setFilterOperation}>\r\n                            Equal\r\n                        </ToggleButton>\r\n                    </div>\r\n\r\n                    <Input onChange={this.handleChange} name=\"filterValue\" value={this.state.filterValue} className=\"ms-3\"\r\n                        placeholder=\"Letters\" style={{ maxWidth: \"25%\", display: \"inline\" }}></Input>\r\n                </div>\r\n            </FormGroup>\r\n        </Form >\r\n    }\r\n}\r\n\r\nexport default withRouter(MyJoinedEvents);","class InstantFormatter {\r\n    static formatInstant(instant){\r\n        var startInstant = new Date(instant * 1000);\r\n        return startInstant.toLocaleString('en-GB', { hour12:false } )\r\n    }\r\n    \r\n    static formatInstantMs(instant){\r\n        var startInstant = new Date(instant);\r\n        return startInstant.toLocaleString('en-GB', { hour12:false } )\r\n    }\r\n}\r\n\r\nexport default InstantFormatter","class ParticipantMessageGenerator {\r\n    constructor(){\r\n        this.number = '';\r\n        this.pluralModifier = '';\r\n        this.verb = '';\r\n    }\r\n\r\n    make(participantsAmount) {\r\n        this.createMessageParts(participantsAmount)\r\n\r\n        return `${this.number} participant${this.pluralModifier} ${this.verb} joined the event`\r\n    }\r\n\r\n    createMessageParts(participantsAmount) {\r\n        if (participantsAmount == 0) {\r\n            this.thereAreNoParticipants()\r\n        } else if (participantsAmount == 1) {\r\n            this.thereIsOneParticipant()\r\n        } else {\r\n            this.thereAreManyParticipants(participantsAmount)\r\n        }\r\n    }\r\n\r\n    thereAreNoParticipants() {\r\n        this.number = 'No';\r\n        this.verb = 'have';\r\n        this.pluralModifier = 's';\r\n    }\r\n\r\n    thereIsOneParticipant() {\r\n        this.number = '1';\r\n        this.verb = 'has';\r\n        this.pluralModifier = '';\r\n    }\r\n\r\n    thereAreManyParticipants(participantsAmount) {\r\n        this.number = participantsAmount;\r\n        this.verb = 'have';\r\n        this.pluralModifier = 's';\r\n    }\r\n}\r\n\r\nexport default ParticipantMessageGenerator","import React, { Component } from 'react';\r\nimport '../../App.css';\r\nimport AppNavbar from '../../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Alert } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport MePage from '../MePage';\r\nimport MeJoinedEvents from '../MeJoinedEvents';\r\nimport MeEventsToJoin from '../MeEventsToJoin';\r\nimport ErrorNotifier from '../../Handler/ErrorNotifier';\r\nimport GuestMePage from './GuestMePage';\r\nimport GuestMeJoinedEvents from './GuestMeJoinedEvents'\r\nimport GuestMePhotos from './GuestMePhotos';\r\nimport GuestMeArrangedEvents from './GuestMeArrangedEvents';\r\nimport classnames from 'classnames';\r\nimport Constants from '../../Const/Constants';\r\nimport ErrorHandler from '../../Handler/ErrorHandler';\r\nimport $ from 'jquery';\r\nclass GuestPersonalPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: '1',\r\n            user: null\r\n        };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle(tab) {\r\n        if (this.state.activeTab !== tab) {\r\n            this.setState({\r\n                activeTab: tab\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col xs=\"4\">\r\n                            <GuestMePage setUser={(data) => {\r\n                                this.setState({ user: data }, () => {\r\n                                    if (this.state.user == null || !Constants.isArrangerOrHigher(\"ROLE_\" + this.state.user.role)) {\r\n                                        this.toggle('2')\r\n                                    }\r\n                                })\r\n                            }\r\n                            } />\r\n                        </Col>\r\n\r\n                        <Col xs=\"8\">\r\n                            <div>\r\n                                <Nav tabs>\r\n                                    {this.state.user != null && Constants.isArrangerOrHigher(\"ROLE_\" + this.state.user.role)? \r\n                                        <NavItem>\r\n                                            <NavLink\r\n                                                className={classnames({ active: this.state.activeTab === '1' })}\r\n                                                onClick={() => { this.toggle('1'); }}\r\n                                            >\r\n                                                Arranged Events 🎉\r\n                                            </NavLink>\r\n                                        </NavItem> : \"\"}\r\n                                    <NavItem>\r\n                                        <NavLink\r\n                                            className={classnames({ active: this.state.activeTab === '2' })}\r\n                                            onClick={() => { this.toggle('2'); }}\r\n                                        >\r\n                                            Photos 📷\r\n                                        </NavLink>\r\n                                    </NavItem>\r\n                                </Nav>\r\n                                <TabContent activeTab={this.state.activeTab}>\r\n                                    {this.state.user != null && Constants.isArrangerOrHigher(\"ROLE_\" + this.state.user.role) ?\r\n                                        <TabPane tabId=\"1\">\r\n                                            <GuestMeArrangedEvents />\r\n                                        </TabPane> : \"\"}\r\n                                    <TabPane tabId=\"2\">\r\n                                        <GuestMePhotos />\r\n                                    </TabPane>\r\n                                </TabContent>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n                <ErrorNotifier />\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default GuestPersonalPage;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { Container, Button, Card, Col, Row } from 'react-bootstrap'\r\nimport { Input } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport $ from 'jquery';\r\nimport ErrorHandler from '../Handler/ErrorHandler';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport style from \"../style.css\"\r\n\r\nconst address = \"\"\r\n\r\nlet thisObj;\r\nconst roleAdmin = \"ROLE_ADMIN\"\r\n\r\nclass MyPage extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.goToEvents = this.goToEvents.bind(this);\r\n        this.goToJoinedEvents = this.goToJoinedEvents.bind(this);\r\n        this.goToMessenger = this.goToMessenger.bind(this);\r\n        this.goToPhotos = this.goToPhotos.bind(this);\r\n        this.goToSettings = this.goToSettings.bind(this);\r\n    }\r\n\r\n    goToEvents() {\r\n        this.props.history.push('/me/events')\r\n    }\r\n    \r\n    goToJoinedEvents() {\r\n        this.props.history.push('/me/joined')\r\n    }\r\n\r\n    goToMessenger() {\r\n        this.props.history.push('/me/messenger')\r\n    }\r\n    \r\n    goToPhotos() {\r\n        this.props.history.push('/me/photos')\r\n    }\r\n\r\n    goToSettings() {\r\n        this.props.history.push('/me/settings')\r\n    }\r\n\r\n    render() {\r\n\r\n        if(localStorage.getItem(\"login\") == null \r\n        || !Constants.isAnyRole((localStorage.getItem(\"role\"))) \r\n        || localStorage.getItem(\"id\") == null){\r\n            return <ErrorNotifier/>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <div class=\"adminConsole\">\r\n                        <Card onClick={this.goToEvents}>\r\n                            <Card.Img variant=\"top\" src={\"/eventsLotr.webp\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Events</Card.Title>\r\n                                <Card.Text>Do you want a party? Eh?</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToJoinedEvents}>\r\n                            <Card.Img variant=\"top\" src={\"/joinedEvents.webp\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Joined Events</Card.Title>\r\n                                <Card.Text>Have you forgotten your dates?</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToMessenger}>\r\n                            <Card.Img variant=\"top\" src={\"/talks.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Messenger</Card.Title>\r\n                                <Card.Text>Let's have a talk</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToPhotos}>\r\n                            <Card.Img variant=\"top\" src={\"/photos.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Photos</Card.Title>\r\n                                <Card.Text>Photos that you uploaded</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <Card onClick={this.goToSettings}>\r\n                            <Card.Img variant=\"top\" src={\"/gears.jpg\"} className=\"mt-0\" />\r\n                            <Card.Body>\r\n                                <Card.Title>Settings</Card.Title>\r\n                                <Card.Text>Do you want to change something?</Card.Text>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(MyPage);","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport AppNavbar from '../AppNavbar.js';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Alert } from 'reactstrap';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\n\r\nimport MePage from './MePage';\r\nimport MeJoinedEvents from './MeJoinedEvents';\r\nimport MeEventsToJoin from './MeEventsToJoin';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport Constants from '../Const/Constants';\r\nimport MePhotos from './MePhotos';\r\nimport MeChangePresonalData from './MeChangePresonalData';\r\nimport MessengerCore from '../Messanger/MessengerCore';\r\n\r\nclass MyMessenger extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        if (localStorage.getItem(\"login\") == null\r\n            || !Constants.isAnyRole((localStorage.getItem(\"role\")))\r\n            || localStorage.getItem(\"id\") == null) {\r\n            return <ErrorNotifier />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <AppNavbar />\r\n                <Container fluid>\r\n                    <MessengerCore />\r\n                </Container>\r\n                <ErrorNotifier />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MyMessenger;","\r\nimport React from \"react\";\r\nimport CardReactFormContainer from 'card-react';\r\nimport { Row, Col, Container, Form, Input, InputGroup, Nav, NavItem, NavLink, TabContent, TabPane, Button } from 'reactstrap';\r\n\r\nclass DepositPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cents: 0,\r\n            CCnumber_deposit: \"\",\r\n            CCcvc_deposit: \"\",\r\n            CCname_deposit: \"\",\r\n            CCexpiry_deposit: \"\",\r\n            valid: false\r\n        }\r\n\r\n        this.bankClient = props.bankClient;\r\n\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.validateBankCardAndCents = this.validateBankCardAndCents.bind(this)\r\n    }\r\n\r\n    validateBankCardAndCents() {\r\n        let valid = this.state.CCnumber_deposit.length == 19\r\n            && this.state.CCcvc_deposit.length == 3\r\n            && this.state.CCname_deposit.length > 4\r\n            && this.state.CCexpiry_deposit.length >= 7\r\n            && this.state.cents > 0 && this.state.cents < 1000000000;\r\n\r\n        this.setState({ valid: valid })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        this.setState({ [name]: value }, () =>\r\n            this.validateBankCardAndCents())\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n\r\n            <h2 className='my-3'>Deposit</h2>\r\n            <Row>\r\n                <Col xs=\"4\" style={{ display: \"flex\", }}>\r\n                    <CardReactFormContainer\r\n                        container=\"card-wrapper-deposit\"\r\n                        formInputsNames={\r\n                            {\r\n                                number: 'CCnumber_deposit',\r\n                                expiry: 'CCexpiry_deposit',\r\n                                cvc: 'CCcvc_deposit',\r\n                                name: 'CCname_deposit'\r\n                            }\r\n                        }\r\n                        initialValues={\r\n                            {\r\n                                number: '',\r\n                                cvc: '',\r\n                                expiry: '',\r\n                                name: ''\r\n                            }\r\n                        }\r\n                        classes={\r\n                            {\r\n                                valid: 'valid-input',\r\n                                invalid: 'invalid-input'\r\n                            }\r\n                        }\r\n                    >\r\n                        <Form className='mb-5'>\r\n                            <InputGroup className='mb-3'>\r\n                                <Input onChange={this.handleChange}\r\n                                    placeholder=\"Card number\"\r\n                                    maxLength={19} type=\"text\" name=\"CCnumber_deposit\" style={{ width: \"300px\" }} />\r\n                                <Input onChange={this.handleChange}\r\n                                    placeholder=\"CVC\"\r\n                                    maxLength={3} type=\"text\" name=\"CCcvc_deposit\" style={{ width: \"100px\" }} />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <Input onChange={this.handleChange}\r\n                                    placeholder=\"Full name\"\r\n                                    type=\"text\" name=\"CCname_deposit\" style={{ width: \"300px\" }} />\r\n                                <Input onChange={this.handleChange}\r\n                                    placeholder=\"MM/YY\" maxLength={7}\r\n                                    type=\"text\" name=\"CCexpiry_deposit\" style={{ width: \"100px\" }} />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mt-3\">\r\n                                <Input placeholder=\"Cents\" type=\"number\" name=\"cents\" value={this.state.cents} onChange={this.handleChange} style={{ width: \"200px\" }} />\r\n                                <Button disabled={!this.state.valid}\r\n                                    onClick={() => this.bankClient.deposit(localStorage.getItem(\"login\"), this.state.cents)} color=\"success\">Deposit</Button>\r\n                            </InputGroup>\r\n                        </Form>\r\n                    </CardReactFormContainer>\r\n                </Col>\r\n\r\n                <Col xs=\"4\">\r\n                    <div id=\"card-wrapper-deposit\"></div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n\r\n}\r\n\r\nexport default DepositPage;","import React from 'react'\r\nimport CardReactFormContainer from 'card-react';\r\nimport { Row, Col, Container, Form, Input, InputGroup, Nav, NavItem, NavLink, TabContent, TabPane, Button } from 'reactstrap';\r\n\r\n\r\nclass WithdrawPage extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            cents: 0,\r\n            CCnumber_withdraw: \"\",\r\n            CCcvc_withdraw: \"\",\r\n            CCname_withdraw: \"\",\r\n            CCexpiry_withdraw: \"\",\r\n            valid: false\r\n        }\r\n\r\n        this.bankClient = props.bankClient;\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.validateBankCardAndCents = this.validateBankCardAndCents.bind(this)\r\n    }\r\n\r\n    validateBankCardAndCents() {\r\n        let valid = this.state.CCnumber_withdraw.length == 19\r\n            && this.state.CCcvc_withdraw.length == 3\r\n            && this.state.CCname_withdraw.length > 4\r\n            && this.state.CCexpiry_withdraw.length >= 7\r\n            && this.state.cents > 0 && this.state.cents < 1000000000;\r\n\r\n        this.setState({ valid: valid })\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value = target.value;\r\n\r\n        this.setState({ [name]: value }, () =>\r\n            this.validateBankCardAndCents())\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n\r\n            <h2 className='my-3'>Withdraw</h2>\r\n\r\n            <Row>\r\n                <Col xs=\"4\" style={{ display: \"flex\", }}>\r\n                    <CardReactFormContainer\r\n                        container=\"card-wrapper-withdraw\"\r\n                        formInputsNames={\r\n                            {\r\n                                number: 'CCnumber_withdraw',\r\n                                expiry: 'CCexpiry_withdraw',\r\n                                cvc: 'CCcvc_withdraw',\r\n                                name: 'CCname_withdraw'\r\n                            }\r\n                        }\r\n                        initialValues={\r\n                            {\r\n                                number: '',\r\n                                cvc: '',\r\n                                expiry: '',\r\n                                name: ''\r\n                            }\r\n                        }\r\n                        classes={\r\n                            {\r\n                                valid: 'valid-input',\r\n                                invalid: 'invalid-input'\r\n                            }\r\n                        }\r\n                    >\r\n                        <Form className='mb-5'>\r\n                            <InputGroup className='mb-3'>\r\n                                <Input onChange={this.handleChange} maxLength={19}\r\n                                    placeholder=\"Card number\" type=\"text\" name=\"CCnumber_withdraw\" style={{ width: \"300px\" }} />\r\n                                <Input onChange={this.handleChange} maxLength={3}\r\n                                    placeholder=\"CVC\" type=\"text\" name=\"CCcvc_withdraw\" style={{ width: \"100px\" }} />\r\n                            </InputGroup>\r\n                            <InputGroup>\r\n                                <Input onChange={this.handleChange} \r\n                                    placeholder=\"Full name\" type=\"text\" name=\"CCname_withdraw\" style={{ width: \"300px\" }} />\r\n                                <Input onChange={this.handleChange} maxLength={7}\r\n                                    placeholder=\"MM/YY\" type=\"text\" name=\"CCexpiry_withdraw\" style={{ width: \"100px\" }} />\r\n                            </InputGroup>\r\n                            <InputGroup className=\"mt-3\">\r\n                                <Input placeholder=\"Cents\" type=\"number\" name=\"cents\" value={this.state.cents} onChange={this.handleChange} style={{ width: \"200px\" }} />\r\n                                <Button disabled={!this.state.valid} onClick={() => this.bankClient.withdraw(localStorage.getItem(\"login\"), this.state.cents)} color=\"success\">Withdraw</Button>\r\n                            </InputGroup>\r\n                        </Form>\r\n                    </CardReactFormContainer>\r\n                </Col>\r\n\r\n                <Col xs=\"4\">\r\n                    <div id=\"card-wrapper-withdraw\"></div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default WithdrawPage","import axios from \"axios\";\r\nimport ErrorHandler from \"../../Handler/ErrorHandler\";\r\n\r\nclass BankClient {\r\n    withdraw(login, cents) {\r\n\r\n        const dto = {\r\n            login: login,\r\n            delta: cents\r\n        }\r\n\r\n        console.log(\"Withdraw for \" + dto)\r\n\r\n        axios.post('/bank/withdraw',\r\n            dto,\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n            .then(function (response) {\r\n                ErrorHandler.runStringMessage(response.data.message);\r\n            })\r\n            .catch(function (response) {\r\n                ErrorHandler.runErrorStringMessage(\"Not enough amount of money\");\r\n            })  \r\n    }\r\n\r\n    deposit(login, cents) {\r\n\r\n        const dto = {\r\n            login: login,\r\n            delta: cents\r\n        }\r\n\r\n        console.log(\"Deposit on \" + dto)\r\n\r\n        axios.post('/bank/deposit',\r\n            dto,\r\n            {\r\n                \"Content-Type\": \"application/json\"\r\n            })\r\n            .then(function (response) {\r\n                ErrorHandler.runStringMessage(response.data.message);\r\n            })\r\n            .catch(function (response) {\r\n                ErrorHandler.runErrorStringMessage(\"Bank error. Please try again later\");\r\n            })\r\n    }\r\n}\r\n\r\nexport default BankClient","\r\nimport React from 'react';\r\nimport { Row, Col, Container, Form, Input, InputGroup, Nav, NavItem, NavLink, TabContent, TabPane } from 'reactstrap';\r\nimport AppNavbar from '../AppNavbar';\r\nimport ErrorNotifier from '../Handler/ErrorNotifier';\r\nimport cardCss from '../card.css'\r\nimport DepositPage from './DepositPage';\r\nimport WithdrawPage from './WithdrawPage';\r\nimport BankClient from './BankClient/BankClient';\r\n\r\nclass DepositWithdrawPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeTab: \"1\"\r\n        }\r\n\r\n        this.bankClient = new BankClient()\r\n\r\n        this.toggle = this.toggle.bind(this)\r\n    }\r\n\r\n    toggle(tab) {\r\n        this.setState({ activeTab: tab })\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            <AppNavbar />\r\n            <Container>\r\n                <Nav tabs>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            onClick={() => this.toggle(\"1\")}\r\n                            active={this.state.activeTab == \"1\"}>\r\n                            Deposit\r\n                        </NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink\r\n                            onClick={() => this.toggle(\"2\")}\r\n                            active={this.state.activeTab == \"2\"}>\r\n                            Withdraw\r\n                        </NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n                <TabContent className='mt-3' activeTab={this.state.activeTab}>\r\n                    <TabPane tabId={\"1\"}>\r\n                        <DepositPage bankClient={this.bankClient} />\r\n                    </TabPane>\r\n                    <TabPane tabId={\"2\"}>\r\n                        <WithdrawPage bankClient={this.bankClient} />\r\n                    </TabPane>\r\n                </TabContent>\r\n            </Container>\r\n            <ErrorNotifier />\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default DepositWithdrawPage","import React, { Component } from 'react';\nimport './App.css';\nimport Home from './Main/Home';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport UserList from './UserList.js';\nimport UserEdit from './UserEdit.js';\nimport AuthForm from './AuthForm';\nimport RegistrationForm from './RegistrationForm';\nimport CreateEventForm from './CreateEventForm';\nimport EventList from './Admin/Event/EventList.js';\nimport EventEdit from './Admin/Event/EventEdit.js';\nimport CreateCategoryForm from './Category/CreateCategoryForm';\nimport CategoryList from './Category/CategoryList';\nimport PersonalPage from './Me/PersonalPage';\nimport JoinEvents from './Me/JoinEvents';\nimport AdminPage from './Admin/AdminPage';\nimport ArrangerPage from './Arranger/ArrangerPage'\nimport EventArrangement from './Arranger/EventArrangement';\nimport ArrangedEvents from './Arranger/ArrangedEvents.js';\nimport EventPage from './EventPage';\nimport ArrangedEventPage from './Arranger/ArrangedEventPage';\nimport GuestPersonalPage from './Me/Guest/GuestPersonalPage';\nimport PropsPage from './Admin/Prop/PropsPage'\nimport CreateProp from './Admin/Prop/CreateProp'\nimport PropEdit from './Admin/Prop/PropEdit';\nimport ArrangementProps from './Arranger/PropsForArrangement/ArrangementProps';\nimport MyProps from './Arranger/PropsForArrangement/MyProps';\nimport MyPage from './Me/MyPage';\nimport PropOrdersHandler from './Admin/Prop/PropOrdersHandler';\nimport MySettings from './Me/MySettings';\nimport MyPhotos from './Me/MyPhotos';\nimport MyMessenger from './Me/MyMessenger';\nimport MyJoinedEvents from './Me/MyJoinedEvents';\nimport DepositWithdrawPage from './BankCard/DepositWithdrawPage';\n\nclass App extends Component {\n  state = {\n    isLoading: true,\n    users: []\n  };\n\n  render() {\n    return (\n      <Router>\n         <Switch>\n           <Route path='/' exact={true} component={Home}/>\n           <Route path='/card' exact={true} component={DepositWithdrawPage}/>\n           {/* <Route path='/me' exact={true} component={PersonalPage}/> */}\n           <Route path='/me' exact={true} component={MyPage}/>\n           <Route path='/me/settings' exact={true} component={MySettings}/>\n           <Route path='/me/photos' exact={true} component={MyPhotos}/>\n           <Route path='/me/messenger' exact={true} component={MyMessenger}/>\n           <Route path='/me/events' exact={true} component={JoinEvents}/>\n           <Route path='/me/joined' exact={true} component={MyJoinedEvents}/>\n           {/* <Route path='/me/join-events' exact={true} component={JoinEvents}/> */}\n           <Route path='/admin' exact={true} component={AdminPage}/>\n           <Route path='/arranger' exact={true} component={ArrangerPage}/>\n           <Route path='/arranger/props/market' exact={true} component={ArrangementProps}/>\n           <Route path='/arranger/props/ordered' exact={true} component={MyProps}/>\n           <Route path='/arranger/arranged' exact={true} component={ArrangedEvents}/>\n           <Route path='/arranger/arranged/:id' exact={true} component={ArrangedEventPage}/>\n           <Route path='/arranger/arrangement' exact={true} component={EventArrangement}/>\n           <Route path='/auth' exact={true} component={AuthForm}/>\n           <Route path='/registration' exact={true} component={RegistrationForm}/>\n           <Route path='/user-management/users' exact={true} component={UserList}/>\n           <Route path='/user-management/users/:id' exact={true} component={UserEdit}/>\n           <Route path='/events' exact={true} component={CreateEventForm}/>\n           <Route path='/event-management/events' exact={true} component={EventList}/>\n           <Route path='/event-management/events/:id' exact={true} component={EventEdit}/>\n           <Route path='/category-management/categories/create' exact={true} component={CreateCategoryForm}/>\n           <Route path='/category-management/categories' exact={true} component={CategoryList}/>\n           <Route path='/prop-management/props/' exact={true} component={PropsPage}/>\n           <Route path='/prop-management/propOrders/' exact={true} component={PropOrdersHandler}/>\n           <Route path=\"/prop-management/props/create\" exact={true} component={CreateProp}/>\n           <Route path=\"/prop-management/props/:id\" exact={true} component={PropEdit}/>\n           <Route path='/events/:id' exact={true} component={EventPage}/>\n           <Route path='/guest/:login' exact={true} component={GuestPersonalPage}/>\n         </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport RegistrationForm from \"./RegistrationForm\"\nimport AuthForm from './AuthForm';\n\nReactDOM.render(\n  <App/>,\n   document.getElementById('root')\n );\n"],"sourceRoot":""}